<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- $Source: /home/bbennett/pass/archive/DicomXml/docbook/part05/part05.xml,v $ -->
<!-- $Date: 2014/05/08 19:52:41 $ -->
<!-- $Revision: 1.2 $ -->
<book xmlns="http://docbook.org/ns/docbook" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xl="http://www.w3.org/1999/xlink" xml:id="PS3.5" label="PS3.5" version="5.0">
  <title>PS3.5</title>
  <subtitle>DICOM PS3.5 2013 - Data Structures and Encoding</subtitle>
  <info>
    <author>
      <orgname>DICOM Standards Committee</orgname>
    </author>
    <copyright>
      <year>2013</year>
      <holder>NEMA</holder>
    </copyright>
  </info>
  <chapter label="" status="1" xml:id="chapter_Notice">
    <title>Notice and Disclaimer</title>
    <para>The information in this publication was considered technically sound by the consensus of
      persons engaged in the development and approval of the document at the time it was developed.
      Consensus does not necessarily mean that there is unanimous agreement among every person
      participating in the development of this document.</para>
    <para>NEMA standards and guideline publications, of which the document contained herein is one,
      are developed through a voluntary consensus standards development process. This process brings
      together volunteers and/or seeks out the views of persons who have an interest in the topic
      covered by this publication. While NEMA administers the process and establishes rules to
      promote fairness in the development of consensus, it does not write the document and it does
      not independently test, evaluate, or verify the accuracy or completeness of any information or
      the soundness of any judgments contained in its standards and guideline publications.</para>
    <para>NEMA disclaims liability for any personal injury, property, or other damages of any nature
      whatsoever, whether special, indirect, consequential, or compensatory, directly or indirectly
      resulting from the publication, use of, application, or reliance on this document. NEMA
      disclaims and makes no guaranty or warranty, expressed or implied, as to the accuracy or
      completeness of any information published herein, and disclaims and makes no warranty that the
      information in this document will fulfill any of your particular purposes or needs. NEMA does
      not undertake to guarantee the performance of any individual manufacturer or seller's products
      or services by virtue of this standard or guide.</para>
    <para>In publishing and making this document available, NEMA is not undertaking to render
      professional or other services for or on behalf of any person or entity, nor is NEMA
      undertaking to perform any duty owed by any person or entity to someone else. Anyone using
      this document should rely on his or her own independent judgment or, as appropriate, seek the
      advice of a competent professional in determining the exercise of reasonable care in any given
      circumstances. Information and other standards on the topic covered by this publication may be
      available from other sources, which the user may wish to consult for additional views or
      information not covered by this publication.</para>
    <para>NEMA has no power, nor does it undertake to police or enforce compliance with the contents
      of this document. NEMA does not certify, test, or inspect products, designs, or installations
      for safety or health purposes. Any certification or other statement of compliance with any
      health or safety-related information in this document shall not be attributable to NEMA and is
      solely the responsibility of the certifier or maker of the statement.</para>
  </chapter>
  <chapter label="" status="1" xml:id="chapter_Foreword">
    <title>Foreword</title>
    <para>This DICOM Standard was developed according to the procedures of the DICOM Standards Committee.</para>
    <para>The DICOM Standard is structured as a multi-part document using the guidelines established in <xref linkend="biblio_ISODirectives3"/>.</para>
  </chapter>
  <chapter xml:id="chapter_1" label="1" status="1">
    <title>Scope and Field of Application</title>
    <para>In this part of the standard the structure and encoding of the Data Set is specified. In the context of Application Entities communicating over a network (see <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>), a Data Set is that portion of a DICOM Message that conveys information about real world objects being managed over the network. A Data Set may have other contexts in other applications of this standard; e.g., in media exchange the Data Set translates to file content structure.</para>
    <para>This part of the DICOM Standard specifies:</para>
    <orderedlist numeration="loweralpha">
      <listitem>
        <para>the encoding of Values</para>
      </listitem>
      <listitem>
        <para>the structure and usage of a Data Set</para>
      </listitem>
      <listitem>
        <para>Data Element usage and relationships to other elements</para>
      </listitem>
      <listitem>
        <para>the construction and usage of Nested Data Sets</para>
      </listitem>
      <listitem>
        <para>the construction and usage of Data Sets containing Pixel Data</para>
      </listitem>
      <listitem>
        <para>how to uniquely identify information</para>
      </listitem>
      <listitem>
        <para>the specification of the standard DICOM Transfer Syntaxes</para>
      </listitem>
    </orderedlist>
    <para>This part of the DICOM Standard does not specify:</para>
    <orderedlist numeration="loweralpha">
      <listitem>
        <para>the structure and syntax of a message (this is specified in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>)</para>
      </listitem>
      <listitem>
        <para>the structure and usage of a command set (this is specified in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>)</para>
      </listitem>
      <listitem>
        <para>how an application service functions or is classified (this is specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> and <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>)</para>
      </listitem>
      <listitem>
        <para>how Data Sets relate to network communication, media storage, or other services</para>
      </listitem>
    </orderedlist>
  </chapter>
  <chapter xml:id="chapter_2" label="2" status="1">
    <title>Normative References</title>
    <para>The following standards contain provisions that, through references in this text, constitute provisions of this standard. At the time of publication, the editions indicated were valid. All standards are subject to revision, and parties to agreements based on this standard are encouraged to investigate the possibilities of applying the most recent editions of the standards indicated below.</para>
    <bibliography>
      <title/>
      
        
        <biblioentry xml:id="biblio_ANSIHISPPMSDS">
          <abbrev>ANSI HISPP MSDS</abbrev>
          <author>
            <orgname>ANSI</orgname>
          </author>
          <date>1993</date>
          <title>Healthcare Informatics Standards Planning Panel Message Standard Developers Subcommittee Proposal on Common Data Types</title>
          <bibliosource>
            <link xl:href="http://www.meb.uni-bonn.de/standards/HISPP/MSDS/CommonDataType1102.ps"/>
          </bibliosource>
        </biblioentry>
        <biblioentry xml:id="biblio_ANSIX3.4">
          <abbrev>ANSI X3.4</abbrev>
          <author>
            <orgname>ANSI</orgname>
          </author>
          <date>1986</date>
          <title>Coded Character Set - 7-Bit American National Standard Code for Information Interchange</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ANSIX3.9">
          <abbrev>ANSI X3.9</abbrev>
          <author>
            <orgname>ANSI</orgname>
          </author>
          <date>1978</date>
          <title>Programming Language FORTRAN</title>
          <bibliosource>
            <link xl:href="http://www.fortran.com/F77_std/rjcnf-0.html"/>
          </bibliosource>
        </biblioentry>
        <biblioentry xml:id="biblio_ASTM_E-1238-91">
          <abbrev>ASTM E-1238-91</abbrev>
          <author>
            <orgname>ASTM</orgname>
          </author>
          <date>1991</date>
          <title>Standard Specification for Transferring Clinical Observations Between Independent Computer Systems; Draft Revision 4.2.1</title>
        </biblioentry>
        <biblioentry xml:id="biblio_BDRWP_2.B">
          <abbrev>BDRWP 2.B</abbrev>
          <author>
            <orgname>Blu-ray Disc™ Association</orgname>
          </author>
          <date>March 2005</date>
          <title>White Paper Blu-ray Disc™ Format 2.B Audio Visual Application Format Specifications for BD-ROM</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ETSI_TS_102_366">
          <abbrev>ETSI TS 102 366</abbrev>
          <author>
            <orgname>ETSI</orgname>
          </author>
          <date>Feb. 2005</date>
          <title>Audio Compression (AC-3, Enhanced AC-3) Standard</title>
        </biblioentry>
        <biblioentry xml:id="biblio_IEEE754">
          <abbrev>IEEE 754</abbrev>
          <author>
            <orgname>IEEE</orgname>
          </author>
          <date>1985</date>
          <title>32-bit and 64-bit Floating Point Number Representations</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISODirectives3">
          <abbrev>ISO/IEC Directives, Part 3</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1989</date>
          <title>Drafting and presentation of International Standards</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO646">
          <abbrev>ISO 646</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1990</date>
          <title>Information Processing - ISO 7-bit coded character set for information interchange</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC2022">
          <abbrev>ISO/IEC 2022</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1994</date>
          <title>Information technology - Character code structure and extension techniques</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO2375">
          <abbrev>ISO 2375</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1986</date>
          <title>Data Processing - Procedure for the registration of escape sequences</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC6429">
          <abbrev>ISO/IEC 6429</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1990</date>
          <title>Information Processing - Control functions for 7-bit and 8-bit coded character sets</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO6523">
          <abbrev>ISO 6523</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1984</date>
          <title>Data interchange - Structures for identification of organizations</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO7498">
          <abbrev>ISO 7498</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1984</date>
          <title>Information processing systems - Open System Interconnection - Basic Reference Model</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO7498-4">
          <abbrev>ISO 7498-4</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1989</date>
          <title>Information processing systems - Open Systems Interconnection - Part 4: Management Framework</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO8649">
          <abbrev>ISO 8649</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1988</date>
          <title>Information processing systems - Open Systems Interconnection - Service definition for the Association Control Service Element (ACSE)</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISO8822">
          <abbrev>ISO 8822</abbrev>
          <author>
            <orgname>ISO</orgname>
          </author>
          <date>1988</date>
          <title>Information processing systems - Open Systems Interconnection - Connection oriented presentation service definition</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8824">
          <abbrev>ISO/IEC 8824</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1990</date>
          <title>Information processing systems - Open Systems Interconnection - Specification of Abstract Syntax Notation One (ASN.1)</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-1">
          <abbrev>ISO/IEC 8859-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1987</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 1: Latin alphabet No. 1</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-2">
          <abbrev>ISO/IEC 8859-2</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1987</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 2: Latin alphabet No. 2</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-3">
          <abbrev>ISO/IEC 8859-3</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1988</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 3: Latin alphabet No. 3</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-4">
          <abbrev>ISO/IEC 8859-4</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1988</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 4: Latin alphabet No. 4</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-5">
          <abbrev>ISO/IEC 8859-5</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1988</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 5: Latin/Cyrillic alphabet</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-6">
          <abbrev>ISO/IEC 8859-6</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1987</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 6: Latin/Arabic alphabet</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-7">
          <abbrev>ISO/IEC 8859-7</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1987</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 7: Latin/Greek alphabet</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-8">
          <abbrev>ISO/IEC 8859-8</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1988</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 8: Latin/Hebrew alphabet</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC8859-9">
          <abbrev>ISO/IEC 8859-9</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1989</date>
          <title>Information processing - 8-bit single-byte coded graphic character sets - Part 9: Latin alphabet No. 5</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC9834-1">
          <abbrev>ISO/IEC 9834-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2005</date>
          <title>Information technology - Open Systems Interconnection - Procedures for the operation of OSI Registration Authorities: General procedures and top arcs of the ASN.1 Object Identifier tree</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC10918-1">
          <abbrev>ISO/IEC 10918-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1994</date>
          <title>JPEG Standard for digital compression and encoding of continuous-tone still images. Part 1 - Requirements and implementation guidelines</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC10918-2">
          <abbrev>ISO/IEC 10918-2</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1995</date>
          <title>JPEG Standard for digital compression and encoding of continuous-tone still images. Part 2 - Testing</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC13818-1">
          <abbrev>ISO/IEC 13818-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2000</date>
          <title>Information technology -- Generic coding of moving pictures and associated audio information - Part 1: Systems</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC13818-2">
          <abbrev>ISO/IEC 13818-2</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2000</date>
          <title>Information technology -- Generic coding of moving pictures and associated audio information - Part 2: Video</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC13818-3">
          <abbrev>ISO/IEC 13818-3</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1998</date>
          <title>Information technology -- Generic coding of moving pictures and associated audio information - Part 3: Audio</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC13818-4">
          <abbrev>ISO/IEC 13818-4</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1998</date>
          <title>Information technology -- Generic coding of moving pictures and associated audio information - Part 4: Conformance testing</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC14495-1">
          <abbrev>ISO/IEC 14495-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>1997</date>
          <title>Lossless and near-lossless coding of continuous tone still images (JPEG-LS)</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC14496-10">
          <abbrev>ISO/IEC 14496-10</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2009</date>
          <title>Information technology - Coding of audio-visual objects - Part 10: Advanced Video Coding</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC15444-1">
          <abbrev>ISO/IEC 15444-1</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2004</date>
          <title>JPEG 2000 Image Coding System</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC15444-2">
          <abbrev>ISO/IEC 15444-2</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2004</date>
          <title>JPEG 2000 Image Coding System: Extensions</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ISOIEC15444-9">
          <abbrev>ISO/IEC 15444-9</abbrev>
          <author>
            <orgname>ISO/IEC</orgname>
          </author>
          <date>2005</date>
          <title>Information technology - JPEG 2000 image coding system: Interactivity tools, APIs and protocols</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ENV_41_503">
          <abbrev>ENV 41 503</abbrev>
          <author>
            <orgname>ENV</orgname>
          </author>
          <date>1990</date>
          <title>Information systems interconnection - European graphic character repertoires and their coding</title>
        </biblioentry>
        <biblioentry xml:id="biblio_ENV_41_508">
          <abbrev>ENV 41 508</abbrev>
          <author>
            <orgname>ENV</orgname>
          </author>
          <date>1990</date>
          <title>Information systems interconnection - East European graphic character repertoires and their coding</title>
        </biblioentry>
        <biblioentry xml:id="biblio_JIS_X_0201">
          <abbrev>JIS X 0201</abbrev>
          <author>
            <orgname>JIS</orgname>
          </author>
          <date>1976</date>
          <title>Code for Information Interchange</title>
        </biblioentry>
        <biblioentry xml:id="biblio_JIS_X_0208">
          <abbrev>JIS X 0208</abbrev>
          <author>
            <orgname>JIS</orgname>
          </author>
          <date>1990</date>
          <title>Code for the Japanese Graphic Character set for information interchange</title>
        </biblioentry>
        <biblioentry xml:id="biblio_JIS_X_0212">
          <abbrev>JIS X 0212</abbrev>
          <author>
            <orgname>JIS</orgname>
          </author>
          <date>1990</date>
          <title>Code of the supplementary Japanese Graphic Character set for information interchange</title>
        </biblioentry>
        <biblioentry xml:id="biblio_KS_X_1001">
          <abbrev>KS X 1001</abbrev>
          <author>
            <orgname>KS</orgname>
          </author>
          <date>1997</date>
          <title>Code for Information Interchange (Hangul and Hanja)</title>
        </biblioentry>
        <biblioentry xml:id="biblio_RFC_1468">
          <abbrev>RFC 1468</abbrev>
          <author>
            <orgname>IETF</orgname>
          </author>
          <title>Japanese Character Encoding for Internet Messages</title>
          <bibliosource>
            <link xl:href="http://tools.ietf.org/html/rfc1468"/>
          </bibliosource>
        </biblioentry>
        <biblioentry xml:id="biblio_RFC_1554">
          <abbrev>RFC 1554</abbrev>
          <author>
            <orgname>IETF</orgname>
          </author>
          <title>ISO-2022-JP-2: Multilingual Extension of ISO-2022-JP</title>
          <bibliosource>
            <link xl:href="http://tools.ietf.org/html/rfc1554"/>
          </bibliosource>
        </biblioentry>
        <biblioentry xml:id="biblio_RFC_1951">
          <abbrev>RFC 1951</abbrev>
          <author>
            <orgname>IETF</orgname>
          </author>
          <title>DEFLATE Compressed Data Format Specification version 1.3</title>
          <bibliosource>
            <link xl:href="http://tools.ietf.org/html/rfc1951"/>
          </bibliosource>
        </biblioentry>
        <biblioentry xml:id="biblio_RFC_2396">
          <abbrev>RFC 2396</abbrev>
          <author>
            <orgname>IETF</orgname>
          </author>
          <title>Uniform Resource Identifiers (URI) : Generic Syntax</title>
          <bibliosource>
            <link xl:href="http://tools.ietf.org/html/rfc2396"/>
          </bibliosource>
        </biblioentry>
      
    </bibliography>
  </chapter>
  <chapter xml:id="chapter_3" label="3" status="1">
    <title>Definitions</title>
    <para>For the purposes of this standard, the following definitions apply.</para>
    <section xml:id="sect_3.1" label="3.1" status="2">
      <title>Reference Model Definitions</title>
      <para>This part of the standard makes use of the following terms defined in ISO 7498:</para>
      <para>a) Application Entities</para>
      <para>b) OSI Presentation Protocol</para>
    </section>
    <section xml:id="sect_3.2" label="3.2" status="2">
      <title>ACSE Service Definitions</title>
      <para>This part of the standard makes use of the following terms defined in ISO 8649:</para>
      <para>a) Association</para>
    </section>
    <section xml:id="sect_3.3" label="3.3" status="2">
      <title>Presentation Service Definitions</title>
      <para>This part of the standard makes use of the following terms defined in ISO 8822:</para>
      <para>a) Presentation Context</para>
      <para>b) Presentation Data Value (PDV)</para>
      <para>c) Transfer Syntax</para>
      <para>d) Transfer Syntax Name</para>
    </section>
    <section xml:id="sect_3.4" label="3.4" status="2">
      <title>Object Identification Definitions</title>
      <para>This part of the standard makes use of the following terms defined in ISO 8824:</para>
      <para>a) OSI Object Identification</para>
    </section>
    <section xml:id="sect_3.5" label="3.5" status="2">
      <title>DICOM Introduction and Overview Definitions</title>
      <para>This part of the standard makes use of the following terms defined in <olink targetdoc="PS3.1" targetptr="PS3.1" xrefstyle="select: labelnumber"/>:</para>
      <para>a) Attribute</para>
      <para>b) Command Element</para>
      <para>c) Data Dictionary</para>
    </section>
    <section xml:id="sect_3.6" label="3.6" status="2">
      <title>DICOM Conformance Definitions</title>
      <para>This part of the standard makes use of the following terms defined in <olink targetdoc="PS3.2" targetptr="PS3.2" xrefstyle="select: labelnumber"/>:</para>
      <para>a) Conformance Statement</para>
    </section>
    <section xml:id="sect_3.7" label="3.7" status="2">
      <title>DICOM Information Object Definitions</title>
      <para>This part of the standard makes use of the following terms defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>:</para>
      <para>a) Attribute Tag</para>
      <para>b) Information Entity</para>
      <para>c) Information Object Definition (IOD)</para>
      <para>d) Multi-Frame Image</para>
    </section>
    <section xml:id="sect_3.8" label="3.8" status="2">
      <title>DICOM Service Class Specifications Definitions</title>
      <para>This part of the standard makes use of the following terms defined in <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>:</para>
      <para>a) Service-Object Pair (SOP) Class</para>
    </section>
    <section xml:id="sect_3.9" label="3.9" status="2">
      <title>DICOM Network Communication Support For Message Exchange Definitions</title>
      <para>This part of the standard makes use of the following terms defined in <olink targetdoc="PS3.8" targetptr="PS3.8" xrefstyle="select: labelnumber"/>:</para>
      <para>a) DICOM Upper Layer Service</para>
    </section>
    <section xml:id="sect_3.10" label="3.10" status="2">
      <title>DICOM Data Structures and Encoding Definitions</title>
      <para>The following definitions are commonly used in this Standard:</para>
      <para><emphasis role="bold">Basic Offset Table</emphasis>: A table of pointers to individual frames of an encapsulated multi-frame image.</para>
      <para><emphasis role="bold">Big Endian</emphasis>: A form of byte ordering where multiple byte binary values are encoded with the most significant byte encoded first, and the remaining bytes encoded in decreasing order of significance.</para>
      <para><emphasis role="bold">Character Repertoire</emphasis>: A finite set of different characters that is considered to be complete for a given purpose and is specified independently of their encoding (also referred to as a character set).</para>
      <para><emphasis role="bold">Data Element</emphasis>: A unit of information as defined by a single entry in the data dictionary. An encoded Information Object Definition (IOD) Attribute that is composed of, at a minimum, three fields: a Data Element Tag, a Value Length, and a Value Field. For some specific Transfer Syntaxes, a Data Element also contains a VR Field where the Value Representation of that Data Element is specified explicitly.</para>
      <para><emphasis role="bold">Data Element Tag</emphasis>: A unique identifier for a Data Element composed of an ordered pair of numbers (a Group Number followed by an Element Number).</para>
      <para><emphasis role="bold">Data Element Type</emphasis>: Used to specify whether an Attribute of an Information Object Definition or an Attribute of a SOP Class Definition is mandatory, mandatory only under certain conditions, or optional. This translates to whether a Data Element of a Data Set is mandatory, mandatory only under certain conditions, or optional.</para>
      <para><emphasis role="bold">Data Set</emphasis>: Exchanged information consisting of a structured set of Attribute values directly or indirectly related to Information Objects. The value of each Attribute in a Data Set is expressed as a Data Element. A collection of Data Elements ordered by increasing Data Element Tag number that is an encoding of the values of Attributes of a real world object.</para>
      <para><emphasis role="bold">Defined Term</emphasis>: The Value of a Data Element is a Defined Term when the Value of the element may be one of an explicitly specified set of standard values, and these values may be extended by implementers.</para>
      <para><emphasis role="bold">Element Number</emphasis>: The second number in the ordered pair of numbers that makes up a Data Element Tag.</para>
      <para><emphasis role="bold">Enumerated Value</emphasis>: The Value of a Data Element is an Enumerated Value when the value of the element must be one of an explicitly specified set of standard values, and these values shall not be extended by implementers.</para>
      <para><emphasis role="bold">Group Number</emphasis>: The first number in the ordered pair of numbers that makes up a Data Element Tag.</para>
      <para><emphasis role="bold">Item</emphasis>: A component of the Value of a Data Element that is of Value Representation Sequence of Items. An Item contains a Data Set.</para>
      <para><emphasis role="bold">Item Delimitation Data Element</emphasis>: Used to mark the end of an Item of Undefined Length in a Sequence of Items. This is the last Data Element in an Item of Undefined Length.</para>
      <para><emphasis role="bold">Little Endian</emphasis>: A form of byte ordering where multiple byte binary values are encoded with the least significant byte encoded first; and the remaining bytes encoded in increasing order of significance.</para>
      <para><emphasis role="bold">Nested Data Set</emphasis>: A Data Set contained within a Data Element of another Data Set. Data Sets can be nested recursively. Only Data Elements with Value Representation Sequence of Items may, themselves, contain Data Sets.</para>
      <para><emphasis role="bold">Pixel Cell</emphasis>: The container for a single Pixel Sample Value that may include unused bits or bits for data other than the Pixel Sample Value (e.g., overlay planes). The size of a Pixel Cell shall be specified by the Bits Allocated (0028, 0100) Data Element.</para>
      <para><emphasis role="bold">Pixel Data</emphasis>: Graphical data (e.g., images or overlays) of variable pixel-depth encoded in the Pixel Data Element, with Value Representation OW or OB. Additional descriptor Data Elements are often used to describe the contents of the Pixel Data element.</para>
      <para><emphasis role="bold">Pixel Sample Value</emphasis>: A value associated with an individual pixel. An individual pixel consists of one or more Pixel Sample Values (e.g., color images).</para>
      <para><emphasis role="bold">Private Data Element</emphasis>: Additional Data Element, defined by an implementer, to communicate information that is not contained in Standard Data Elements. Private Data elements have odd Group Numbers.</para>
      <para><emphasis role="bold">Repeating Group</emphasis>: Standard Data Elements within a particular range of Group Numbers where elements that have identical Element Numbers have the same meaning within each Group (and the same VR, VM, and Data Element Type). Repeating Groups shall only exist for Curves and Overlay Planes (Group Numbers (50xx,eeee) and (60xx,eeee), respectively) and are a remnant of versions of this standard prior to V3.0.</para>
      <para><emphasis role="bold">Retired Data Element</emphasis>: A Data Element that is unsupported beginning with Version 3.0 of this standard. Implementations may continue to support Retired Data Elements for the purpose of backward compatibility with versions prior to V3.0, but this is not a requirement of this version of the standard.</para>
      <para><emphasis role="bold">Sequence Delimitation Item</emphasis>: Item used to mark the end of a Sequence of Items of Undefined Length. This Item is the last Item in a Sequence of Items of Undefined Length.</para>
      <para><emphasis role="bold">Sequence of Items (Value Representation SQ)</emphasis>: A Value Representation for Data Elements that contain a sequence of Data Sets. Sequence of Items allows for Nested Data Sets.</para>
      <para><emphasis role="bold">Standard Data Element</emphasis>: A Data Element defined in the DICOM Standard, and therefore listed in the DICOM Data Element Dictionary in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>.</para>
      <para><emphasis role="bold">Transfer Syntax (Standard and Private)</emphasis>: A set of encoding rules that allow Application Entities to unambiguously negotiate the encoding techniques (e.g., Data Element structure, byte ordering, compression) they are able to support, thereby allowing these Application Entities to communicate.</para>
      <para><emphasis role="bold">Undefined Length</emphasis>: The ability to specify an unknown length for a Data Element Value (of Value Representation SQ, UN, OW, or OB) or Item. Data Elements and Items of Undefined Length are delimited with Sequence Delimitation Items and Item Delimiter Data Elements, respectively.</para>
      <para><emphasis role="bold">Unique Identifier (UID)</emphasis>: A string of characters that uniquely identifies a wide variety of items; guaranteeing uniqueness across multiple countries, sites, vendors and equipment.</para>
      <para><emphasis role="bold">Value</emphasis>: A component of a Value Field. A Value Field may consist of one or more of these components.</para>
      <para><emphasis role="bold">Value Field</emphasis>: The field within a Data Element that contains the Value(s) of that Data Element.</para>
      <para><emphasis role="bold">Value Length</emphasis>: The field within a Data Element that contains the length of the Value Field of the Data Element.</para>
      <para><emphasis role="bold">Value Multiplicity (VM)</emphasis>: Specifies the number of Values contained in the Value Field of a Data Element.</para>
      <para><emphasis role="bold">Value Representation (VR)</emphasis>: Specifies the data type and format of the Value(s) contained in the Value Field of a Data Element.</para>
      <para><emphasis role="bold">Value Representation Field</emphasis>: The field where the Value Representation of a Data Element is stored in the encoding of a Data Element structure with explicit VR.</para>
    </section>
    <section xml:id="sect_3.11" label="3.11" status="2">
      <title>Character Handling Definitions</title>
      <para>This part of the standard makes use of the following terms defined in ISO/IEC 2022:1994</para>
      <para>a) Coded Character Set; Code</para>
      <para>b) Code Extension</para>
      <para>c) Control Character</para>
      <para>d) To Designate</para>
      <para>e) Escape Sequence</para>
      <para>f) Graphic Character</para>
      <para>g) To Invoke</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_4" label="4" status="1">
    <title>Symbols and Abbreviations</title>
    <para>The following symbols and abbreviations are used in this Standard.</para>
    <variablelist>
      <varlistentry>
        <term>ACR</term>
        <listitem>
          <para>American College of Radiology</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>AE</term>
        <listitem>
          <para>Application Entity</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>ANSI</term>
        <listitem>
          <para>American National Standards Institute</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>CEN TC251</term>
        <listitem>
          <para>Comite Europeen de Normalisation - Technical Committee 251 - Healthcare Informatics</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>DICOM</term>
        <listitem>
          <para>Digital Imaging and Communications in Medicine</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>HISPP</term>
        <listitem>
          <para>Healthcare Information Standards Planning Panel</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>HL7</term>
        <listitem>
          <para>Healthcare Industry Level 7 Interface Standards</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>IEEE</term>
        <listitem>
          <para>Institute of Electrical and Electronics Engineers</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>IOD</term>
        <listitem>
          <para>Information Object Definition</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>ISO</term>
        <listitem>
          <para>International Standards Organization</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>JPEG</term>
        <listitem>
          <para>Joint Photographic Experts Group</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>JIRA</term>
        <listitem>
          <para>Japan Medical Imaging and Radiological Systems Industries Association</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>MPEG</term>
        <listitem>
          <para>Moving Picture Experts Group</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>MSDS</term>
        <listitem>
          <para>Healthcare Message Standard Developers Sub-Committee</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>NEMA</term>
        <listitem>
          <para>National Electrical Manufacturers Association</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>OSI</term>
        <listitem>
          <para>Open Systems Interconnection</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>RLE</term>
        <listitem>
          <para>Run Length Encoding</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>TCP/IP</term>
        <listitem>
          <para>Transmission Control Protocol/Internet Protocol</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>UID</term>
        <listitem>
          <para>Unique Identifier</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>SOP</term>
        <listitem>
          <para>Service-Object Pair</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>UTC</term>
        <listitem>
          <para>Coordinated Universal Time</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>VM</term>
        <listitem>
          <para>Value Multiplicity</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>VR</term>
        <listitem>
          <para>Value Representation</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </chapter>
  <chapter xml:id="chapter_5" label="5" status="1">
    <title>Conventions</title>
    <para>Word(s) are capitalized in this document (not headings) to help the reader understand that these word(s) have been previously defined in <xref linkend="chapter_3" xrefstyle="template: Section %n"/> of this document and are to be interpreted with that meaning.</para>
    <para>The Data Element Tag is represented as (gggg,eeee), where gggg equates to the Group Number and eeee equates to the Element Number within that Group. The Data Element Tag is represented in hexadecimal notation as specified for each Data Element in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>.</para>
    <para>The notation XXXXH, where XXXX is one or more hexadecimal digits, and "H" is used to signify a hexadecimal number.</para>
  </chapter>
  <chapter xml:id="chapter_6" label="6" status="1">
    <title>Value Encoding</title>
    <para>A Data Set is constructed by encoding the values of Attributes specified in the Information Object Definition (IOD) of a Real-World Object. The specific content and semantics of these Attributes are specified in Information Object Definitions (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). The range of possible data types of these values and their encoding are specified in this section. The structure of a Data Set, which is composed of Data Elements containing these values, is specified in <xref linkend="chapter_7" xrefstyle="template: Section %n"/>.</para>
    <para>Throughout this part, as well as other parts of the DICOM Standard, Tags are used to identify both specific Attributes and their corresponding Data Elements.</para>
    <section xml:id="sect_6.1" label="6.1" status="2">
      <title>Support of Character Repertoires</title>
      <para>Values that are text or character strings can be composed of Graphic and Control Characters. The Graphic Character set, independent of its encoding, is referred to as a Character Repertoire. Depending on the native language context in which Application Entities wish to exchange data using the DICOM Standard, different Character Repertoires will be used. The Character Repertoires supported by DICOM are:</para>
      <itemizedlist>
        <listitem>
          <para>ISO 8859</para>
        </listitem>
        <listitem>
          <para>JIS X 0201-1976 Code for Information Interchange</para>
        </listitem>
        <listitem>
          <para>JIS X 0208-1990 Code for the Japanese Graphic Character set for information interchange</para>
        </listitem>
        <listitem>
          <para>JIS X 0212-1990 Code of the supplementary Japanese Graphic Character set for information interchange</para>
        </listitem>
        <listitem>
          <para>KS X 1001 (registered as ISO-IR 149) for Korean Language</para>
        </listitem>
        <listitem>
          <para>TIS 620-2533 (1990) Thai Characters Code for Information Interchange</para>
        </listitem>
        <listitem>
          <para>ISO 10646-1, 10646-2, and their associated supplements and extensions for Unicode character set</para>
        </listitem>
        <listitem>
          <para>GB 18030</para>
        </listitem>
        <listitem>
          <para>GB2312</para>
        </listitem>
        <listitem>
          <para>GBK</para>
        </listitem>
      </itemizedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>The ISO 10646-1, 10646-2, and their associated supplements and extensions correspond to the Unicode version 3.2 character set. The ISO IR 192 corresponds to the use of the UTF-8 encoding for this character set.</para>
          </listitem>
          <listitem>
            <para>The GB 18030 character set is harmonized with the Unicode character set on a regular basis, to reflect updates from both the Chinese language and from Unicode extensions to support other languages.</para>
          </listitem>
          <listitem>
            <para>The issue of font selection is not addressed by the DICOM standard. Issues such as proper display of words like "bone" in Chinese or Japanese usage are managed through font selection. Similarly, other user interface issues like bidirectional character display and text orientation are not addressed by the DICOM standard. The Unicode documents provide extensive documentation on these issues.</para>
          </listitem>
          <listitem>
            <para>The GBK character set is an extension of the GB 2312-1980 character set and supports the Chinese characters in GB 13000.1-93 that is the Chinese adaptation of Unicode 1.1. The GBK is code point backward compatible to GB2312-1980. The GB 18030 character set is an extension of the GBK character set for support of Unicode 3.2, and provides backward code point compatibility.</para>
          </listitem>
        </orderedlist>
      </note>
      <section xml:id="sect_6.1.1" label="6.1.1" status="3">
        <title>Representation of Encoded Character Values</title>
        <para>As defined in the ISO Standards referenced in this section, byte values used for encoded representations of characters are represented in this section as two decimal numbers in the form column/row.</para>
        <para>This means that the value can be calculated as (column * 16) + row, e.g., 01/11 corresponds to the value 27 (1BH).</para>
        <note>
          <para>Two digit hex notation will be used throughout the remainder of this standard to represent character encoding. The column/row notation is used only within <xref linkend="sect_6.1" xrefstyle="select: label"/> to simplify any cross referencing with applicable ISO standards.</para>
        </note>
        <para>The byte encoding space is divided into four ranges of values:</para>
        <itemizedlist>
          <listitem>
            <para>CL bytes from 00/00 to 01/15</para>
          </listitem>
          <listitem>
            <para>GL bytes from 02/00 to 07/15</para>
          </listitem>
          <listitem>
            <para>CR bytes from 08/00 to 09/15</para>
          </listitem>
          <listitem>
            <para>GR bytes from 10/00 to 15/15</para>
          </listitem>
        </itemizedlist>
        <note>
          <para>ISO 8859 does not differentiate between a code element, e.g., G0, and the area in the code table, e.g., GL, where it is invoked. The term "G0" specifies the code element as well as the area in the code table. In ISO/IEC 2022 there is a clear distinction between the code elements (G0, G1, G2, and G3) and the areas in which the code elements are invoked (GL or GR). In this Standard the nomenclature of ISO/IEC 2022 is used.</para>
        </note>
        <para>The Control Character set C0 shall be invoked in CL and the Graphic Character sets G0 and G1 in GL and GR respectively. Only some Control Characters from the C0 set are used in DICOM (see <xref linkend="sect_6.1.3" xrefstyle="select: label"/>), and characters from the C1 set shall not be used.</para>
      </section>
      <section xml:id="sect_6.1.2" label="6.1.2" status="3">
        <title>Graphic Characters</title>
        <para>A Character Repertoire, or character set, is a collection of Graphic Characters specified independently of their encoding.</para>
        <section xml:id="sect_6.1.2.1" label="6.1.2.1" status="4">
          <title>Default Character Repertoire</title>
          <para>The default repertoire for character strings in DICOM shall be the Basic G0 Set of the International Reference Version of ISO 646:1990 (ISO-IR 6). See <xref linkend="chapter_E" xrefstyle="template: Annex %n"/> for a table of the DICOM default repertoire and its encoding.</para>
          <note>
            <para>This Basic G0 Set is identical with the common character set of ISO 8859.</para>
          </note>
        </section>
        <section xml:id="sect_6.1.2.2" label="6.1.2.2" status="4">
          <title>Extension or Replacement of the Default Character Repertoire</title>
          <para>DICOM Application Entities (AEs) that extend or replace the default repertoire convey this information in the Specific Character Set (0008,0005) Attribute.</para>
          <note>
            <para>The Attribute Specific Character Set (0008,0005) is encoded using a subset of characters from ISO-IR 6. See the definition for the Value Representation (VR) of Code String (CS) in <xref linkend="table_6.2-1" xrefstyle="select: label"/>.</para>
          </note>
          <para>For Data Elements with Value Representations of SH (Short String), LO (Long String), ST (Short Text), LT (Long Text), PN (Person Name) or UT (Unlimited Text) the default character repertoire may be extended or replaced (these Value Representations are described in more detail in <xref linkend="sect_6.2" xrefstyle="select: label"/>). If such an extension or replacement is used, the relevant "Specific Character Set" shall be defined as an attribute of the SOP Common Module (0008,0005) (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>) and shall be stated in the Conformance Statement. <olink targetdoc="PS3.2" targetptr="PS3.2" xrefstyle="select: labelnumber"/> gives conformance guidelines.</para>
          <note>
            <orderedlist numeration="arabic">
              <listitem>
                <para>Preferred repertoires as defined in ENV 41 503 and ENV 41 508 for the use in Western and Eastern Europe, respectively, are: ISO-IR 100, ISO-IR 101, ISO-IR 144, ISO-IR 126. See <xref linkend="sect_6.1.2.3" xrefstyle="select: label"/>.</para>
              </listitem>
              <listitem>
                <para>Information Object Definitions using different character sets cannot rely¾per se¾ on lexical ordering or string comparison of data elements represented as character strings. These operations can only be carried out within a given character repertoire and not across repertoire boundaries.</para>
              </listitem>
            </orderedlist>
          </note>
        </section>
        <section xml:id="sect_6.1.2.3" label="6.1.2.3" status="4">
          <title>Encoding of Character Repertoires</title>
          <para>The 7-bit default character repertoire can be replaced for use in Value Representations SH, LO, ST, LT, PN and UT with one of the single-byte codes defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
          <note>
            <para>This replacement character repertoire does not apply to other textual Value Representations (AE and CS).</para>
          </note>
          <para>The replacement character repertoire shall be specified in value 1 of the Attribute Specific Character Set (0008,0005). Defined Terms for the Attribute Specific Character Set are specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
          <note>
            <orderedlist numeration="arabic">
              <listitem>
                <para>The code table is split into the GL area, which supports a 94 character set only (bit combinations 02/01 to 07/14) plus SPACE in 02/00, and the GR area, which supports either a 94 or 96 character set (bit combinations 10/01 to 15/14 or 10/00 to 15/15). The default character set (ISO-IR 6) is always invoked in the GL area.</para>
              </listitem>
              <listitem>
                <para>All character sets specified in ISO 8859 include ISO-IR 6. This set will always be invoked in the GL area of the code table and is the equivalent of ASCII (ANSI X3.4:1986), whereas the various extension repertoires are mapped onto the GR area of the code table.</para>
              </listitem>
              <listitem>
                <para>The 8-bit code table of JIS X 0201 includes ISO-IR 14 (romaji alphanumeric characters) as the G0 code element and ISO-IR 13 (katakana phonetic characters) as the G1 code element. ISO-IR 14 is identical to ISO-IR 6, except that bit combination 05/12 represents a "¥"(YEN SIGN) and bit combination 07/14 represents an over-line.</para>
              </listitem>
            </orderedlist>
          </note>
          <para>Two character codes of the single-byte character sets invoked in the GL area of the code table, 02/00 and 05/12, have special significance in the DICOM Standard. The character SPACE, represented by bit combination 02/00, shall be used for the padding of Data Element Values that are character strings. The Graphic Character represented by the bit combination 05/12, "\" (BACKSLASH) in the repertoire ISO-IR 6, shall only be used in character strings with Value Representations of UT, ST and LT (see <xref linkend="sect_6.2" xrefstyle="select: label"/>). Otherwise the character code 05/12 is used as a separator for multiple valued Data Elements (see <xref linkend="sect_6.4" xrefstyle="select: label"/>).</para>
          <note>
            <para>When the value of the Attribute Specific Character Set (0008,0005) is either "ISO_IR 13" or "ISO 2022 IR 13", the graphic character represented by the bit combination 05/12 is a "¥" (YEN SIGN) in the character set of ISO-IR 14.</para>
          </note>
          <para>The character DELETE (bit combination 07/15) shall not be used in DICOM character strings.</para>
          <para>The replacement Character Repertoire specified in value 1 of the Attribute Specific Character Set (0008,0005) (or the default Character Repertoire if value 1 is empty) may be further extended with additional Coded Character Sets, if needed and permitted by the replacement Character Repertoire. The additional Coded Character Sets and extension mechanism shall be specified in additional values of the Attribute Specific Character Set. If Attribute Specific Character Set (0008,0005) has a single value, the DICOM SOP Instance supports only one code table and no Code Extension techniques. If Attribute Specific Character Set (0008,0005) has multiple values, the DICOM SOP Instance supports Code Extension techniques as described in ISO/IEC 2022:1994.</para>
          <para>The Character Repertoires that prohibit extension are identified in Part 3.</para>
          <note>
            <orderedlist numeration="arabic">
              <listitem>
                <para>Considerations on the Handling of Unsupported Character Sets:</para>
                <para>In DICOM, character sets are not negotiated between Application Entities but are indicated by a conditional attribute of the SOP Common Module. Therefore, implementations may be confronted with character sets that are unknown to them.</para>
                <para>The Unicode Standard includes a substantial discussion of the recommended means for display and print for characters that lack font support. These same recommendations may apply to the mechanisms for unsupported character sets.</para>
                <para>The machine should print or display such characters by replacing all unknown characters with the four characters "\nnn", where "nnn" is the three digit octal representation of each byte.</para>
                <para>An example of this for an ASCII based machine would be as follows:</para>
                <para>Character String: Günther Encoded representation: 04/07 15/12 06/14 07/04 06/08 06/05 07/02ASCII based machine: G\374nther</para>
                <para>Implementations may also encounter Control Characters that they have no means to print or display. The machine may print or display such Control Characters by replacing the Control Character with the four characters "\nnn", where "nnn" is the three digit octal representation of each byte.</para>
              </listitem>
              <listitem>
                <para>Considerations for missing fonts</para>
                <para>The Unicode standard and the GB18030 standard define mechanisms for print and display of characters that are missing from the available fonts. If GBK is specified in Specific Character Set (0008,0005), the GB 18030 rules of print and display of characters shall apply. The DICOM standard does not specify user interface behavior since it does not affect network or media data exchange.</para>
              </listitem>
              <listitem>
                <para>The Unicode and GB18030 standards have distinct Yen symbol, backslash, and several forms of reverse solidus. The separator for multi-valued data elements in DICOM is the character valued 05/12 regardless of what glyph is used to enter or display this character. The other reverse solidus characters that have a very similar appearance are not separators. The choice of font can affect the appearance of 05/12 significantly. Multi-byte encoding systems, such as GB18030, GBK and ISO 2022, may generate encodings that contain a byte valued 05/12. Only the character that encodes as a single byte valued 05/12 is a delimiter.</para>
                <para>For multi-valued Data Elements, existing implementations that are expecting only single-byte replacement character sets may misinterpret the Value Multiplicity of the Data Element as a consequence of interpreting 05/12 bytes in multi-byte characters or ISO 2022 escape sequences as delimiters, and this may affect the integrity of store-and-forward operations. Applications that do not explicitly state support for GB18030, GBK or ISO 2022 in their conformance statement, might exhibit such behavior.</para>
              </listitem>
            </orderedlist>
          </note>
        </section>
        <section xml:id="sect_6.1.2.4" label="6.1.2.4" status="4">
          <title>Code Extension Techniques</title>
          <para>For Data Elements with Value Representations of SH (Short String), LO (Long String), ST (Short Text), LT (Long Text), UT (Unlimited Text) or PN (Person Name), the default character repertoire or the character repertoire specified by value 1 of Attribute Specific Character Set (0008,0005), may be extended using the Code Extension techniques specified by ISO/IEC 2022:1994.</para>
          <para>If such Code Extension techniques are used, the related Specific Character Set or Sets shall be specified by value 2 to value n of the Attribute Specific Character Set (0008,0005) of the SOP Common Module (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be stated in the Conformance Statement.</para>
          <note>
            <orderedlist numeration="arabic">
              <listitem>
                <para>Defined Terms for Specific Character Set (0008,0005) are defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
              </listitem>
              <listitem>
                <para>Support for Japanese kanji (ideographic), hiragana (phonetic), katakana (phonetic), Korean (Hangul phonetic and Hanja ideographic) and Chinese characters is defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
              </listitem>
              <listitem>
                <para>The Chinese Character Set (GB18030) and Unicode (ISO 10646-1, 10646-2) do not allow the use of Code Extension Techniques. If either of these character sets is used, no other character set may be specified in the Specific Character Set (0008,0005) attribute, that is, it may have only one value.</para>
              </listitem>
            </orderedlist>
          </note>
        </section>
        <section xml:id="sect_6.1.2.5" label="6.1.2.5" status="4">
          <title>Usage of Code Extension</title>
          <para>DICOM supports Code Extension techniques if the Attribute Specific Character Set (0008,0005) is multi-valued. The method employed for Code Extension in DICOM is as described in ISO/IEC 2022:1994. The following assumptions shall be made and the following restrictions shall apply:</para>
          <section xml:id="sect_6.1.2.5.1" label="6.1.2.5.1" status="5">
            <title>Assumed Initial States</title>
            <itemizedlist>
              <listitem>
                <para>Code element G0 and code element G1 (in 8-bit mode only) are always invoked in the GL and GR areas of the code table respectively. Designated character sets for these code elements are immediately in use. Code elements G2 and G3 are not used.</para>
              </listitem>
              <listitem>
                <para>The primary set of Control Characters shall always be designated as the C0 code element and this shall be invoked in the CL area of the code table. The C1 code element shall not be used.</para>
              </listitem>
            </itemizedlist>
          </section>
          <section xml:id="sect_6.1.2.5.2" label="6.1.2.5.2" status="5">
            <title>Restrictions for Code Extension</title>
            <itemizedlist>
              <listitem>
                <para>As code elements G0 and G1 always have shift status, Locking Shifts (SI, SO) are not required and shall not be used.</para>
              </listitem>
              <listitem>
                <para>As code elements G2 and G3 are not used, Single Shifts (SS2 and SS3) cannot be used.</para>
              </listitem>
              <listitem>
                <para>Only the ESC sequences specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> shall be used to activate Code Elements.</para>
              </listitem>
            </itemizedlist>
          </section>
          <section xml:id="sect_6.1.2.5.3" label="6.1.2.5.3" status="5">
            <title>Requirements</title>
            <para>The character set specified by value 1 of the Attribute Specific Character Set (0008,0005), or the default character repertoire if value 1 is missing, shall be active at the beginning of each textual Data Element value, and at the beginning of each line (i.e., after a CR and/or LF) or page (i.e., after an FF).</para>
            <para>If within a textual value a character set other than the one specified in value 1 of the Attribute Specific Character Set (0008,0005), or the default character repertoire if value 1 is missing, has been invoked, the character set specified in the value 1, or the default character repertoire if value 1 is missing, shall be active in the following instances:</para>
            <itemizedlist>
              <listitem>
                <para>before the end of line (i.e., before the CR and/or LF)</para>
              </listitem>
              <listitem>
                <para>before the end of a page (i.e., before the FF)</para>
              </listitem>
              <listitem>
                <para>before the end of a Data Element value (e.g., before the 05/12 character code that separates multiple textual Data Element Values - 05/12 corresponds to "\" (BACKSLASH) in the case of default repertoire IR-6 or "¥" (YEN SIGN) in the case of IR-14).</para>
              </listitem>
              <listitem>
                <para>before the "^" and "=" delimiters separating name components and name component groups in Data Elements with a VR of PN.</para>
              </listitem>
            </itemizedlist>
            <para>If within a textual value a character set other than the one specified in value 1 of the Attribute Specific Character Set (0008,0005), or the default character repertoire if value 1 is missing, is used, the Escape Sequence of this character set must be inserted explicitly in the following instances:</para>
            <itemizedlist>
              <listitem>
                <para>before the first use of the character set in the line</para>
              </listitem>
              <listitem>
                <para>before the first use of the character set in the page</para>
              </listitem>
              <listitem>
                <para>before the first use of the character set in the Data Element value</para>
              </listitem>
              <listitem>
                <para>before the first use of the character set in the name component and name component group in Data Element with a VR of PN</para>
              </listitem>
            </itemizedlist>
            <note>
              <para>These requirements allow an application to skip lines, values, or components in a textual data element and start the new line with a defined character set without the need to track the character set changes in the text skipped. A similar restriction appears in the RFCs describing the use of multi-byte character sets over the Internet. An Escape Sequence switching to the value 1 or default Specific Character Set is not needed within a line, value, or component if no Code Extensions are present. Nor is a switch needed to the value 1 or default Specific Character Set if this character set has only the G0 Code Element defined, and the G0 Code Element is still active.</para>
            </note>
          </section>
          <section xml:id="sect_6.1.2.5.4" label="6.1.2.5.4" status="5">
            <title>Levels of Implementation and Initial Designation</title>
            <orderedlist numeration="loweralpha">
              <listitem>
                <para>Attribute Specific Character Set (0008,0005) not present:</para>
                <itemizedlist>
                  <listitem>
                    <para>7-bit code</para>
                  </listitem>
                  <listitem>
                    <para>Implementation level: ISO 2022 Level 1 - Elementary 7-bit code (code-level identifier 1)</para>
                  </listitem>
                  <listitem>
                    <para>Initial designation: ISO-IR 6 (ASCII) as G0.</para>
                  </listitem>
                  <listitem>
                    <para>Code Extension shall not be used.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Attribute Specific Character Set (0008,0005) single value other than "ISO_IR 192", "GB18030" or "GBK":</para>
                <itemizedlist>
                  <listitem>
                    <para>8-bit code</para>
                  </listitem>
                  <listitem>
                    <para>Implementation level: ISO 2022 Level 1 - Elementary 8-bit code (code-level identifier 11)</para>
                  </listitem>
                  <listitem>
                    <para>Initial designation: One of the ISO 8859-defined character sets, or the 8-bit code table of JIS X 0201 specified by value 1 of the Attribute Specific Character Set (0008,0005), as G0 and G1.</para>
                  </listitem>
                  <listitem>
                    <para>Code Extension shall not be used.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Attribute Specific Character Set (0008,0005) multi-valued:</para>
                <itemizedlist>
                  <listitem>
                    <para>8-bit code</para>
                  </listitem>
                  <listitem>
                    <para>Implementation level: ISO 2022 Level 4 - Redesignation of Graphic Character Sets within a Code (code-level identifier 14)</para>
                  </listitem>
                  <listitem>
                    <para>Initial designation: One of the ISO 8859-defined character sets, or the 8-bit code table of JIS X 0201 specified by value 1 of the Attribute Specific Character Set (0008,0005), as G0 and G1. If value 1 of the Attribute Specific Character Set (0008,0005) is empty, ISO-IR 6 (ASCII) is assumed as G0, and G1 is undefined.</para>
                  </listitem>
                  <listitem>
                    <para>All character sets specified in the various values of Attribute Specific Character Set (0008,0005), including value 1, may participate in Code Extension.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Attribute Specific Character Set (0008,0005) single value "ISO_IR 192", "GB18030" or "GBK":</para>
                <itemizedlist>
                  <listitem>
                    <para>variable length code</para>
                  </listitem>
                  <listitem>
                    <para>Implementation level: not specified (not compatible with ISO 2022)</para>
                  </listitem>
                  <listitem>
                    <para>Initial designation: as specified by value 1 of the Attribute Specific Character Set (0008,0005)</para>
                  </listitem>
                  <listitem>
                    <para>Code Extension shall not be used.</para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </orderedlist>
          </section>
        </section>
      </section>
      <section xml:id="sect_6.1.3" label="6.1.3" status="3">
        <title>Control Characters</title>
        <para>Textual data that is interchanged may require some formatting information. Control Characters are used to indicate formatting, but their use in DICOM is kept to a minimum since some machines may handle them inappropriately. ISO 646:1990 and ISO 6429:1990 define Control Characters. As shown in <xref linkend="table_6.1-1" xrefstyle="select: label"/> below, only a subset of four Control Characters from the C0 set shall be used in DICOM for the encoding of Control Characters in text strings.</para>
        <table frame="box" rules="all" xml:id="table_6.1-1" label="6.1-1">
          <caption>DICOM Control Characters and Their Encoding</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Acronym</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Name</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Coded Value</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>LF</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Line Feed</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>00/10</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>FF</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Form Feed</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>00/12</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>CR</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Carriage Return</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>00/13</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>ESC</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Escape</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>01/11</para>
              </td>
            </tr>
          </tbody>
        </table>
        <para>The ESC character shall be used only for ISO 2022 character set control sequences, in accordance with <xref linkend="sect_6.1.2.5" xrefstyle="select: label"/>.</para>
        <para>In text strings (value representation ST, LT, or UT) a new line shall be represented as CR LF.</para>
        <note>
          <para>Some machines (such as UNIX based machines) may interpret LF (00/10) as a new line. In such cases, it is expected that the DICOM format is converted to the correct internal representation for that machine.</para>
        </note>
      </section>
    </section>
    <section xml:id="sect_6.2" label="6.2" status="2">
      <title>Value Representation (VR)</title>
      <para>The Value Representation of a Data Element describes the data type and format of that Data Element's Value(s). <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/> lists the VR of each Data Element by Data Element Tag.</para>
      <para>Values with VRs constructed of character strings, except in the case of the VR UI, shall be padded with SPACE characters (20H, in the Default Character Repertoire) when necessary to achieve even length. Values with a VR of UI shall be padded with a single trailing NULL (00H) character when necessary to achieve even length. Values with a VR of OB shall be padded with a single trailing NULL byte value (00H) when necessary to achieve even length.</para>
      <para>All new VRs defined in future versions of DICOM shall be of the same Data Element Structure as defined in <xref linkend="sect_7.1.2" xrefstyle="select: label"/> (i.e., following the format for VRs such as OB, OW, SQ and UN).</para>
      <note>
        <para>Since all new VRs will be defined as specified in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>, an implementation may choose to ignore VRs not recognized by applying the rules stated in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>.</para>
      </note>
      <para>An individual Value, including padding, shall not exceed the Length of Value, except in the case of the last Value of a multi-valued field as specified in <xref linkend="sect_6.4" xrefstyle="select: label"/>.</para>
      <note xml:id="note_6.1-2-1">
        <para>The lengths of Value Representations for which the Character Repertoire can be extended or replaced are expressly specified in characters rather than bytes in <xref linkend="table_6.2-1" xrefstyle="select: label"/>. This is because the mapping from a character to the number of bytes used for that character's encoding may be dependent on the character set used.</para>
      </note>
      <para>Escape Sequences used for Code Extension shall not be included in the count of characters.</para>
      <table frame="box" rules="all" xml:id="table_6.2-1" label="6.2-1">
        <caption>DICOM Value Representations</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">VR Name</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Definition</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Character Repertoire</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Length of Value</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>AE</para>
              <para>Application Entity</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters that identifies an Application Entity with leading and trailing spaces (20H) being non-significant. A value consisting solely of spaces shall not be used.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire excluding character code 5CH (the BACKSLASH "\" in ISO-IR 6), and control characters LF, FF, CR and ESC.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>16 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>AS</para>
              <para>Age String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters with one of the following formats -- nnnD, nnnW, nnnM, nnnY; where nnn shall contain the number of days for D, weeks for W, months for M, or years for Y.</para>
              <para>Example: "018M" would represent an age of 18 months.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "D", "W", "M", "Y" of Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>AT</para>
              <para>Attribute Tag</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Ordered pair of 16-bit unsigned integers that is the value of a Data Element Tag.</para>
              <para>Example: A Data Element Tag of (0018,00FF) would be encoded as a series of 4 bytes in a Little-Endian Transfer Syntax as 18H,00H,FFH,00H and in a Big-Endian Transfer Syntax as 00H,18H,00H,FFH.</para>
              <note>
                <para>The encoding of an AT value is exactly the same as the encoding of a Data Element Tag as defined in <xref linkend="chapter_7" xrefstyle="template: Section %n"/>.</para>
              </note>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>CS</para>
              <para>Code String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters with leading or trailing spaces (20H) being non-significant.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Uppercase characters, "0"-"9", the SPACE character, and underscore "_", of the Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>16 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>DA</para>
              <para>Date</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters of the format YYYYMMDD; where YYYY shall contain year, MM shall contain the month, and DD shall contain the day, interpreted as a date of the Gregorian calendar system.</para>
              <para>Example:</para>
              <itemizedlist mark="none">
                <listitem>
                  <para>"19930822" would represent August 22, 1993.</para>
                </listitem>
              </itemizedlist>
              <note>
                <orderedlist numeration="arabic">
                  <listitem>
                    <para>The ACR-NEMA Standard 300 (predecessor to DICOM) supported a string of characters of the format YYYY.MM.DD for this VR. Use of this format is not compliant.</para>
                  </listitem>
                  <listitem>
                    <para>See also DT VR in this table.</para>
                  </listitem>
                </orderedlist>
              </note>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9" of Default Character Repertoire</para>
              <para>In the context of a Query with range matching (see <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>), the character "-" is allowed, and a trailing SPACE character is allowed for padding.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>8 bytes fixed</para>
              <para>In the context of a Query with range matching (see <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>), the length is 18 bytes maximum.</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>DS</para>
              <para>Decimal String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters representing either a fixed point number or a floating point number. A fixed point number shall contain only the characters 0-9 with an optional leading "+" or "-" and an optional "." to mark the decimal point. A floating point number shall be conveyed as defined in ANSI X3.9, with an "E" or "e" to indicate the start of the exponent. Decimal Strings may be padded with leading or trailing spaces. Embedded spaces are not allowed.</para>
              <note>
                <para>Data Elements with multiple values using this VR may not be properly encoded if Explicit-VR transfer syntax is used and the VL of this attribute exceeds 65534 bytes.</para>
              </note>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "+", "-", "E", "e", "." of Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>16 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>DT</para>
              <para>Date Time</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A concatenated date-time character string in the format:</para>
              <para>YYYYMMDDHHMMSS.FFFFFF&amp;ZZXX</para>
              <para>The components of this string, from left to right, are YYYY = Year, MM = Month, DD = Day, HH = Hour (range "00" - "23"), MM = Minute (range "00" - "59"), SS = Second (range "00" - "60").</para>
              <para>FFFFFF = Fractional Second contains a fractional part of a second as small as 1 millionth of a second (range "000000" - "999999").</para>
              <para>&amp;ZZXX is an optional suffix for offset from Coordinated Universal Time (UTC), where &amp; = "+" or "-", and ZZ = Hours and XX = Minutes of offset.</para>
              <para>The year, month, and day shall be interpreted as a date of the Gregorian calendar system.</para>
              <para>A 24-hour clock is used. Midnight shall be represented by only "0000" since "2400" would violate the hour range.</para>
              <para>The Fractional Second component, if present, shall contain 1 to 6 digits. If Fractional Second is unspecified the preceding "." shall not be included. The offset suffix, if present, shall contain 4 digits. The string may be padded with trailing SPACE characters. Leading and embedded spaces are not allowed.</para>
              <para>A component that is omitted from the string is termed a null component. Trailing null components of Date Time indicate that the value is not precise to the precision of those components. The YYYY component shall not be null. Non-trailing null components are prohibited. The optional suffix is not considered as a component.</para>
              <para>A Date Time value without the optional suffix is interpreted to be in the local time zone of the application creating the Data Element, unless explicitly specified by the Timezone Offset From UTC (0008,0201).</para>
              <para>UTC offsets are calculated as "local time minus UTC". The offset for a Date Time value in UTC shall be +0000.</para>
              <note>
                <orderedlist numeration="arabic">
                  <listitem>
                    <para>The range of the offset is -1200 to +1400. The offset for United States Eastern Standard Time is -0500. The offset for Japan Standard Time is +0900.</para>
                  </listitem>
                  <listitem>
                    <para>The RFC 2822 use of -0000 as an offset to indicate local time is not allowed.</para>
                  </listitem>
                  <listitem>
                    <para>A Date Time value of 195308 means August 1953, not specific to particular day. A Date Time value of 19530827111300.0 means August 27, 1953, 11;13 a.m. accurate to 1/10th second.</para>
                  </listitem>
                  <listitem>
                    <para>The Second component may have a value of 60 only for a leap second.</para>
                  </listitem>
                  <listitem>
                    <para>The offset may be included regardless of null components; e.g., 2007-0500 is a legal value.</para>
                  </listitem>
                </orderedlist>
              </note>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "+", "-", "." and the SPACE character of Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>26 bytes maximum</para>
              <para>In the context of a Query with range matching (see <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>), the length is 54 bytes maximum.</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>FL</para>
              <para>Floating Point Single</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Single precision binary floating point number represented in IEEE 754:1985 32-bit Floating Point Number Format.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>FD</para>
              <para>Floating Point Double</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Double precision binary floating point number represented in IEEE 754:1985 64-bit Floating Point Number Format.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>8 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>IS</para>
              <para>Integer String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters representing an Integer in base-10 (decimal), shall contain only the characters 0 - 9, with an optional leading "+" or "-". It may be padded with leading and/or trailing spaces. Embedded spaces are not allowed.</para>
              <para>The integer, n, represented shall be in the range:</para>
              <para>-2<superscript>31</superscript>&lt;= n &lt;= (2<superscript>31</superscript>-1).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "+", "-" of Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>12 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>LO</para>
              <para>Long String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string that may be padded with leading and/or trailing spaces. The character code 5CH (the BACKSLASH "\" in ISO-IR 6) shall not be present, as it is used as the delimiter between values in multiple valued data elements. The string shall not have Control Characters except for ESC.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>64 chars maximum (see <xref linkend="note_6.1-2-1" xrefstyle="template: Note in Section 6.2"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>LT</para>
              <para>Long Text</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string that may contain one or more paragraphs. It may contain the Graphic Character set and the Control Characters, CR, LF, FF, and ESC. It may be padded with trailing spaces, which may be ignored, but leading spaces are considered to be significant. Data Elements with this VR shall not be multi-valued and therefore character code 5CH (the BACKSLASH "\" in ISO-IR 6) may be used.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>10240 chars maximum (see <xref linkend="note_6.1-2-1" xrefstyle="template: Note in Section 6.2"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>OB</para>
              <para>Other Byte String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of bytes where the encoding of the contents is specified by the negotiated Transfer Syntax. OB is a VR that is insensitive to Little/Big Endian byte ordering (see <xref linkend="sect_7.3" xrefstyle="select: label"/>). The string of bytes shall be padded with a single trailing NULL byte value (00H) when necessary to achieve even length.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>see Transfer Syntax definition</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>OD</para>
              <para>Other Double String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of 64-bit IEEE 754:1985 floating point words. OD is a VR that requires byte swapping within each 64-bit word when changing between Little Endian and Big Endian byte ordering (see <xref linkend="sect_7.3" xrefstyle="select: label"/>).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2<superscript>32</superscript>-8 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>OF</para>
              <para>Other Float String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of 32-bit IEEE 754:1985 floating point words. OF is a VR that requires byte swapping within each 32-bit word when changing between Little Endian and Big Endian byte ordering (see <xref linkend="sect_7.3" xrefstyle="select: label"/>).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2<superscript>32</superscript>-4 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>OW</para>
              <para>Other Word String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of 16-bit words where the encoding of the contents is specified by the negotiated Transfer Syntax. OW is a VR that requires byte swapping within each word when changing between Little Endian and Big Endian byte ordering (see <xref linkend="sect_7.3" xrefstyle="select: label"/>).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>see Transfer Syntax definition</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>PN</para>
              <para>Person Name</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string encoded using a 5 component convention. The character code 5CH (the BACKSLASH "\" in ISO-IR 6) shall not be present, as it is used as the delimiter between values in multiple valued data elements. The string may be padded with trailing spaces. For human use, the five components in their order of occurrence are: family name complex, given name complex, middle name, name prefix, name suffix.</para>
              <note>
                <para>HL7 prohibits leading spaces within a component; DICOM allows leading and trailing spaces and considers them insignificant.</para>
              </note>
              <para>Any of the five components may be an empty string. The component delimiter shall be the caret "^" character (5EH). Delimiters are required for interior null components. Trailing null components and their delimiters may be omitted. Multiple entries are permitted in each component and are encoded as natural text strings, in the format preferred by the named person.</para>
              <para>For veterinary use, the first two of the five components in their order of occurrence are: responsible party family name or responsible organization name, patient name. The remaining components are not used and shall not be present.</para>
              <para>This group of five components is referred to as a Person Name component group.</para>
              <para>For the purpose of writing names in ideographic characters and in phonetic characters, up to 3 groups of components (see Annexes H, I and J) may be used. The delimiter for component groups shall be the equals character "=" (3DH). The three component groups of components in their order of occurrence are: an alphabetic representation, an ideographic representation, and a phonetic representation.</para>
              <para>Any component group may be absent, including the first component group. In this case, the person name may start with one or more "=" delimiters. Delimiters are required for interior null component groups. Trailing null component groups and their delimiters may be omitted.</para>
              <para>Precise semantics are defined for each component group. See <xref linkend="sect_6.2.1.2" xrefstyle="select: label"/>.</para>
              <para>For examples and notes, see <xref linkend="sect_6.2.1.1" xrefstyle="select: label"/>.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005) excluding Control Characters LF, FF, and CR but allowing Control Character ESC.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>64 chars maximum per component group</para>
              <para>(see <xref linkend="note_6.1-2-1" xrefstyle="template: Note in Section 6.2"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>SH</para>
              <para>Short String</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string that may be padded with leading and/or trailing spaces. The character code 05CH (the BACKSLASH "\" in ISO-IR 6) shall not be present, as it is used as the delimiter between values for multiple data elements. The string shall not have Control Characters except ESC.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>16 chars maximum (see <xref linkend="note_6.1-2-1" xrefstyle="template: Note in Section 6.2"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>SL</para>
              <para>Signed Long</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Signed binary integer 32 bits long in 2's complement form.</para>
              <para>Represents an integer, n, in the range:</para>
              <para>- 2<superscript>31</superscript>&lt;= n &lt;= 2<superscript>31</superscript>-1.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>SQ</para>
              <para>Sequence of Items</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value is a Sequence of zero or more Items, as defined in <xref linkend="sect_7.5" xrefstyle="select: label"/>.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable (see <xref linkend="sect_7.5" xrefstyle="select: label"/>)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable (see <xref linkend="sect_7.5" xrefstyle="select: label"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>SS</para>
              <para>Signed Short</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Signed binary integer 16 bits long in 2's complement form. Represents an integer n in the range:</para>
              <para>-2<superscript>15</superscript>&lt;= n &lt;= 2<superscript>15</superscript>-1.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>ST</para>
              <para>Short Text</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string that may contain one or more paragraphs. It may contain the Graphic Character set and the Control Characters, CR, LF, FF, and ESC. It may be padded with trailing spaces, which may be ignored, but leading spaces are considered to be significant. Data Elements with this VR shall not be multi-valued and therefore character code 5CH (the BACKSLASH "\" in ISO-IR 6) may be used.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>1024 chars maximum (see <xref linkend="note_6.1-2-1" xrefstyle="template: Note in Section 6.2"/>)</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>TM</para>
              <para>Time</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of characters of the format HHMMSS.FFFFFF; where HH contains hours (range "00" - "23"), MM contains minutes (range "00" - "59"), SS contains seconds (range "00" - "60"), and FFFFFF contains a fractional part of a second as small as 1 millionth of a second (range "000000" - "999999"). A 24-hour clock is used. Midnight shall be represented by only "0000" since "2400" would violate the hour range.
        The string may be padded with trailing spaces. Leading and embedded spaces are not allowed.</para>
              <para>One or more of the components MM, SS, or FFFFFF may be unspecified as long as every component to the right of an unspecified component is also unspecified, which indicates that the value is not precise to the precision of those unspecified components.</para>
              <para>The FFFFFF component, if present, shall contain 1 to 6 digits. If FFFFFF is unspecified the preceding "." shall not be included.</para>
              <para>Examples:</para>
              <orderedlist>
                <listitem>
                  <para>"070907.0705 " represents a time of 7 hours, 9 minutes and 7.0705 seconds.</para>
                </listitem>
                <listitem>
                  <para>"1010" represents a time of 10 hours, and 10 minutes.</para>
                </listitem>
                <listitem>
                  <para>"021 " is an invalid value.</para>
                </listitem>
              </orderedlist>
              <note>
                <orderedlist numeration="arabic">
                  <listitem>
                    <para>The ACR-NEMA Standard 300 (predecessor to DICOM) supported a string of characters of the format HH:MM:SS.frac for this VR. Use of this format is not compliant.</para>
                  </listitem>
                  <listitem>
                    <para>See also DT VR in this table.</para>
                  </listitem>
                  <listitem>
                    <para>The SS component may have a value of 60 only for a leap second.</para>
                  </listitem>
                </orderedlist>
              </note>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "." and the SPACE character of Default Character Repertoire</para>
              <para>In the context of a Query with range matching (see <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>), the character "-" is allowed.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>16 bytes maximum</para>
              <para>In the context of a Query with range matching (see <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>), the length is 28 bytes maximum.</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>UI</para>
              <para>Unique Identifier (UID)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string containing a UID that is used to uniquely identify a wide variety of items. The UID is a series of numeric components separated by the period "." character. If a Value Field containing one or more UIDs is an odd number of bytes in length, the Value Field shall be padded with a single trailing NULL (00H) character to ensure that the Value Field is an even number of bytes in length. See <xref linkend="chapter_9" xrefstyle="template: Section %n"/> and <xref linkend="chapter_B" xrefstyle="template: Annex %n"/> for a complete specification and examples.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>"0"-"9", "." of Default Character Repertoire</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>64 bytes maximum</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>UL</para>
              <para>Unsigned Long</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Unsigned binary integer 32 bits long. Represents an integer n in the range:</para>
              <para>0 &lt;= n &lt; 2<superscript>32</superscript>.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>UN</para>
              <para>Unknown</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A string of bytes where the encoding of the contents is unknown (see <xref linkend="sect_6.2.2" xrefstyle="select: label"/>).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Any length valid for any of the other DICOM Value Representations</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>US</para>
              <para>Unsigned Short</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Unsigned binary integer 16 bits long. Represents integer n in the range:</para>
              <para>0 &lt;= n &lt; 2<superscript>16</superscript>.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>not applicable</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes fixed</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>UT</para>
              <para>Unlimited Text</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>A character string that may contain one or more paragraphs. It may contain the Graphic Character set and the Control Characters, CR, LF, FF, and ESC. It may be padded with trailing spaces, which may be ignored, but leading spaces are considered to be significant. Data Elements with this VR shall not be multi-valued and therefore character code 5CH (the BACKSLASH "\" in ISO-IR 6) may be used.</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Default Character Repertoire and/or as defined by (0008,0005).</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2<superscript>32</superscript>-2 bytes maximum</para>
              <para>See <xref linkend="note_6.2-3-2" xrefstyle="template: Note 2"/></para>
            </td>
          </tr>
        </tbody>
      </table>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>For attributes that were present in ACR-NEMA 1.0 and 2.0 and that have been retired, the specifications of Value Representation and Value Multiplicity provided are recommendations for the purpose of interpreting their values in objects created in accordance with earlier versions of this standard. These recommendations are suggested as most appropriate for a particular attribute; however, there is no guarantee that historical objects will not violate some requirements or specified VR and/or VM.</para>
          </listitem>
          <listitem>
            <para xml:id="note_6.2-3-2">The length of the value of the UT VR is limited only by the size of the maximum unsigned integer representable in a 32 bit VL field minus one, since FFFFFFFFH is reserved.</para>
          </listitem>
        </orderedlist>
      </note>
      <section xml:id="sect_6.2.1" label="6.2.1" status="3">
        <title>Person Name (PN) Value Representation</title>
        <section xml:id="sect_6.2.1.1" label="6.2.1.1" status="4">
          <title>Examples of PN VR and Notes</title>
          <para>Examples:</para>
          <itemizedlist>
            <listitem>
              <para>Rev. John Robert Quincy Adams, B.A. M.Div.</para>
              <para>"Adams^John Robert Quincy^^Rev.^B.A. M.Div."</para>
              <para>[One family name; three given names; no middle name; one prefix; two suffixes.]</para>
            </listitem>
            <listitem>
              <para>Susan Morrison-Jones, Ph.D., Chief Executive Officer</para>
              <para>"Morrison-Jones^Susan^^^Ph.D., Chief Executive Officer"</para>
              <para>[Two family names; one given name; no middle name; no prefix; two suffixes.]</para>
            </listitem>
            <listitem>
              <para>John Doe</para>
              <para>"Doe^John"</para>
              <para>[One family name; one given name; no middle name, prefix, or suffix. Delimiters have been omitted for the three trailing null components.]</para>
            </listitem>
            <listitem>
              <para>(for examples of the encoding of Person Names using multi-byte character sets see <xref linkend="chapter_H" xrefstyle="template: Annex %n"/>)</para>
            </listitem>
            <listitem>
              <para>"Smith^Fluffy"</para>
              <para>[A cat, rather than a human, whose responsible party family name is Smith, and whose own name is Fluffy]</para>
            </listitem>
            <listitem>
              <para>"ABC Farms^Running on Water"</para>
              <para>[A horse whose responsible organization is named ABC Farms, and whose name is "Running On Water"]</para>
            </listitem>
          </itemizedlist>
          <note>
            <orderedlist numeration="arabic">
              <listitem>
                <para>A similar multiple component convention is also used by the HL7 v2 XPN data type. However, the XPN data type places the suffix component before the prefix, and has a sixth component "degree" that DICOM subsumes in the name suffix. There are also differences in the manner in which name representation is identified.</para>
              </listitem>
              <listitem>
                <para>In typical American and European usage the first occurrence of "given name" would represent the "first name". The second and subsequent occurrences of the "given name" would typically be treated as a middle name(s). The "middle name" component is retained for the purpose of backward compatibility with existing standards.</para>
              </listitem>
              <listitem>
                <para>The implementer should remain mindful of earlier usage forms that represented "given names" as "first" and "middle" and that translations to and from this previous typical usage may be required.</para>
              </listitem>
              <listitem>
                <para>For reasons of backward compatibility with versions of this standard prior to V3.0, person names might be considered a single family name complex (single component without "^" delimiters).</para>
              </listitem>
            </orderedlist>
          </note>
          
        </section>
        <section xml:id="sect_6.2.1.2" label="6.2.1.2" status="4">
          <title>Ideographic and Phonetic Characters in Data Elements with VR of PN</title>
          <para>Character strings representing person names are encoded using a convention for PN value representations based on component groups with 5 components.</para>
          <para>For the purpose of writing names in ideographic characters and in phonetic characters, up to 3 component groups may be used. The delimiter of the component group shall be the equals character "=" (3DH). The three component groups in their order of occurrence are: an alphabetic representation, an ideographic representation, and a phonetic representation.</para>
          <para>Any component group may be absent, including the first component group. In this case, the person name may start with one or more "=" delimiters. Delimiters are also required for interior null component groups. Trailing null component groups and their delimiters may be omitted.</para>
          <para>The first component group (identified by DICOM as "alphabetic") shall be encoded using the character set specified by the Attribute Specific Character Set (0008,0005), value 1. If Attribute Specific Character Set (0008,0005) is not present, the default Character Repertoire ISO-IR 6 shall be used. ISO 2022 escapes for Code Extension shall not be used in this component group. When Specific Character Set (0008,0005) value 1 specifies a multi-byte character set without Code Extension (i.e., Unicode in UTF-8, GB18030 or GBK), the characters of this component group may be encoded with multiple bytes, but shall be drawn from the code points U+0000 through U+1FFF of ISO/IEC 10646.</para>
          <para>The second group shall be used for ideographic characters. The character sets used will usually be those from Attribute Specific Character Set (0008,0005), value 2 through n, and may use ISO 2022 escapes.</para>
          <para>The third group shall be used for phonetic characters. The character sets used shall be those from Attribute Specific Character Set (0008,0005), value 1 through n, and may use ISO 2022 escapes.</para>
          <para>Delimiter characters "^" and "=" are taken from the character set specified by value 1 of the Attribute Specific Character Set (0008,0005). If Attribute Specific Character Set (0008,0005), value 1 is not present, the default Character Repertoire ISO-IR 6 shall be used.</para>
          <para>At the beginning of the value of the Person Name data element, the following initial condition is assumed: if Attribute Specific Character Set (0008,0005), value 1 is not present, the default Character Repertoire ISO-IR 6 is invoked, and if the Attribute Specific Character Set (0008,0005), value 1 is present, the character set specified by value 1 of the Attribute is invoked.</para>
          <para>At the end of the value of the Person Name data element, and before the component delimiters "^" and "=", the character set shall be switched to the default character repertoire ISO-IR 6, if value 1 of the Attribute Specific Character Set (0008,0005) is not present. If value 1 of the Attribute Specific Character Set (0008,0005) is present, the character set shall be switched to that specified by value 1 of the Attribute.</para>
         <para>The value length of each component group is 64 characters maximum, including the delimiter for the component group. Each combining character (e.g., diacritics or vowel marks) shall be considered a separate character for this maximum length, regardless of how an application may display such combining characters (i.e., combined into the glyph for the base character, or rendered separately).</para>
        </section>
      </section>
      <section xml:id="sect_6.2.2" label="6.2.2" status="3">
        <title>Unknown (UN) Value Representation</title>
        <para>The Unknown (UN) VR shall only be used for Private Attribute Data Elements and Standard Data Elements previously encoded as some DICOM VR other than UN using the DICOM Default Transfer Syntax (Implicit VR Little Endian), and whose Value Representation is currently unknown. As long as the VR is unknown the Value Field is insensitive to Little/Big Endian byte ordering and shall not be 'byte-swapped' (see <xref linkend="sect_7.3" xrefstyle="select: label"/>). In the case of undefined length sequences, the value shall remain in implicit VR form. See <xref linkend="sect_7.8" xrefstyle="select: label"/> for a description of Private Data Attribute Elements and section 10 and <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> for a discussion of Transfer Syntaxes.</para>
        <para>The UN VR shall not be used for Private Creator Data Elements (i.e., the VR is equal to LO, see <xref linkend="sect_7.8.1" xrefstyle="select: label"/>).</para>
        <para>The UN VR shall not be used for File Meta Information Data Elements (any Tag (0002,xxxx), see <olink targetdoc="PS3.10" targetptr="PS3.10" xrefstyle="select: labelnumber"/>).</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>All other (non-default) DICOM Transfer Syntaxes employ explicit VR in their encoding, and therefore any Private and/or Standard Data Element Value Field Attribute value encoded and decoded using any Transfer Syntax other than the default, and not having been translated to the DICOM Default Transfer Syntax default in the interim, will have a known VR.</para>
            </listitem>
            <listitem>
              <para>If at some point an application knows the actual VR for an Attribute of VR UN (e.g., has its own applicable data dictionary), it can assume that the Value Field of the Attribute is encoded in Little Endian byte ordering with implicit VR encoding, irrespective of the current Transfer Syntax.</para>
            </listitem>
            <listitem>
              <para>This VR of UN is needed when an explicit VR must be given to a Data Element whose Value Representation is unknown (e.g., store and forward). UN is a means to explicitly indicate that the Value Representation of a Data Element is unknown.</para>
            </listitem>
            <listitem>
              <para>The length field of the Value Representation of UN may contain the value of "unknown length", in which case the contents can be assumed to be encoded with implicit VR. See <xref linkend="sect_7.5.1" xrefstyle="select: label"/> to determine how to parse Data Elements with an unknown length.</para>
            </listitem>
            <listitem>
              <para>An example of a Standard Data Element using a UN VR is a Type 3 or Type U Standard Attribute added to an SOP Class definition. An existing application that does not support that new Attribute (and encounters it) could convert the VR to UN.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
    </section>
    <section xml:id="sect_6.3" label="6.3" status="2">
      <title>Enumerated Values and Defined Terms</title>
      <para>The value of certain Data Elements may be chosen among a set of explicit Values satisfying its VR. These explicit Values are either Enumerated Values or Defined Terms and are specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> and <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>.</para>
      <para>Enumerated Values are used when the specified explicit Values are the only Values allowed for a Data Element. A Data Element with Enumerated Values that does not have a Value equivalent to one of the Values specified in this standard has an invalid value within the scope of a specific Information Object/SOP Class definition.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>Patient Sex (0010, 0040) is an example of a Data Element having Enumerated Values. It is defined to have a Value that is either "M", "F", or "O" (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). No other Value shall be given to this Data Element.</para>
          </listitem>
          <listitem>
            <para>Future modifications of this standard may add to the set of allowed values for Data Elements with Enumerated Values. Such additions by themselves may or may not require a change in SOP Class UIDs, depending on the semantics of the Data Element.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>Defined Terms are used when the specified explicit Values may be extended by implementers to include additional new Values. These new Values shall be specified in the Conformance Statement (see <olink targetdoc="PS3.2" targetptr="PS3.2" xrefstyle="select: labelnumber"/>) and shall not have the same meaning as currently defined Values in this standard. A Data Element with Defined Terms that does not contain a Value equivalent to one of the Values currently specified in this standard shall not be considered to have an invalid value. An empty (zero length) value is not a valid new Value for a Defined Term; empty values shall be considered invalid unless the standard specifically permits empty values. New Values shall not have a meaning of unknown, since that concept, if permitted by the standard, shall be conveyed explicitly either by allowing the Data Element to be zero length or by provision of a standard Defined Term with such a meaning.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>Reporting Priority (0040,1009) is an example of a Data Element having Defined Terms. It is defined to have a Value that may be one of the set of standard Values; HIGH, ROUTINE, MEDIUM, or LOW (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). Because this Data Element has Defined Terms other reporting priorities may be defined by the implementer.</para>
          </listitem>
          <listitem>
            <para>The validity of empty values is usually specified by the attribute being defined as Type 2 (see <xref linkend="sect_7.4.3" xrefstyle="select: label"/>). However, in the context of a required Type 1 attribute with multiple values, some (but not all) values may be allowed to be empty (see <xref linkend="sect_7.4.1" xrefstyle="select: label"/>); in this case the standard explicitly specifies the validity of empty values in the list of Defined Terms for each value. Specific Character Set (0008,0005) is an example of a Data Element for which the standard specifically permits the first value to be empty when multiple values are present. Image Type (0008,0008) is an example of a Data Element that in some IODs defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> is required to be present with multiple values, but if an empty value is not explicitly listed in the Defined Terms for Value 3 by an IOD an empty value is invalid.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>The Value Representation may affect the interpretation of Defined Terms and Enumerated Values for numeric values. For binary Value Representations, the textual representation of the Value in the standard does not affect the interpretation. For string Value Representations (IS and DS), the meaning of the Value in the standard shall be used, not the literal string.</para>
      <note>
        <para>For example, an Enumerated Value of "1" expressed in the text of the standard matches an IS or DS value encoded as "001", or a DS value encoded as "1.0" or "1." or "1.0000E+00" or any permitted encoding. Leading and trailing spaces are defined in <xref linkend="table_6.2-1" xrefstyle="select: label"/> not to be significant and hence do not affect the interpretation.</para>
      </note>
    </section>
    <section xml:id="sect_6.4" label="6.4" status="2">
      <title>Value Multiplicity (VM) and Delimitation</title>
      <para>The Value Multiplicity of a Data Element specifies the number of Values that can be encoded in the Value Field of that Data Element. The VM of each Data Element is specified explicitly in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>. If the number of Values that may be encoded in an element is variable, it shall be represented by two numbers separated by a dash; e.g., "1-10" means that there may be 1 to 10 Values in the element.</para>
      <note>
        <para>Elements having a multiplicity of "S", which represented "single", in versions of this standard preceding V3.0, will have a multiplicity of "1" in this version of this standard.</para>
      </note>
      <para>When a Data Element has multiple Values, those Values shall be delimited as follows:</para>
      <itemizedlist>
        <listitem>
          <para>For character strings, the character 5CH (BACKSLASH "\" in the case of the repertoire ISO IR-6) shall be used as a delimiter between Values.</para>
          <note>
            <para>BACKSLASH ("\") is used as a delimiter between character string Values that are of fixed length as well as variable length.</para>
          </note>
        </listitem>
        <listitem>
          <para>Multiple binary Values of fixed length shall be a series of concatenated Values without any delimiter.</para>
        </listitem>
      </itemizedlist>
      <para>Each string Value in a multiple valued character string may be of even or odd length, but the length of the entire Value Field (including "\" delimiters) shall be of even length. If padding is required to make the Value Field of even length, a single padding character shall be applied to the end of the Value Field (to the last Value), in which case the length of the last Value may exceed the Length of Value by 1.</para>
      <note>
        <para>A padding character may need to be appended to a fixed length character string value in the above case.</para>
      </note>
      <para>Only the last UID Value in a multiple valued Data Element with a VR of UI shall be padded with a single trailing NULL (00H) character when necessary to ensure that the entire Value Field (including "\" delimiters) is of even length.</para>
      <para>Data Elements with a VR of SQ, OF, OW, OB or UN shall always have a Value Multiplicity of one.</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_7" label="7" status="1">
    <title>The Data Set</title>
    <para>A Data Set represents an instance of a real world Information Object. A Data Set is constructed of Data Elements. Data Elements contain the encoded Values of Attributes of that object. The specific content and semantics of these Attributes are specified in Information Object Definitions (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
    <para>The construction, characteristics, and encoding of a Data Set and its Data Elements are discussed in this section. Pixel Data, Overlays, and Curves are Data Elements whose interpretation depends on other related elements.</para>
    <section xml:id="sect_7.1" label="7.1" status="2">
      <title>Data Elements</title>
      <para>A Data Element is uniquely identified by a Data Element Tag. The Data Elements in a Data Set shall be ordered by increasing Data Element Tag Number and shall occur at most once in a Data Set.</para>
      <note>
        <para>A Data Element Tag may occur again within Nested Data Sets (see <xref linkend="sect_7.5" xrefstyle="select: label"/>).</para>
      </note>
      <para>Two types of Data Elements are defined:</para>
      <itemizedlist>
        <listitem>
          <para>Standard Data Elements have an even Group Number that is not (0000,eeee), (0002,eeee), (0004,eeee), or (0006,eeee).</para>
          <note>
            <para>Usage of these groups is reserved for DIMSE Commands (see <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>) and DICOM File Formats.</para>
          </note>
        </listitem>
        <listitem>
          <para>Private Data Elements have an odd Group Number that is not (0001,eeee), (0003,eeee), (0005,eeee), (0007,eeee), or (FFFF,eeee). Private Data Elements are discussed further in <xref linkend="sect_7.8" xrefstyle="select: label"/>.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>Although similar or related Data Elements often have the same Group Number; a Data Group does not convey any semantic meaning beginning with DICOM Version 3.0.</para>
      </note>
      <para>A Data Element shall have one of three structures. Two of these structures contain the VR of the Data Element (Explicit VR) but differ in the way their lengths are expressed, while the other structure does not contain the VR (Implicit VR). All three structures contain the Data Element Tag, Value Length and Value for the Data Element. See <xref linkend="figure_7.1-1" xrefstyle="select: label"/>.</para>
      <para>Implicit and Explicit VR Data Elements shall not coexist in a Data Set and Data Sets nested within it (see <xref linkend="sect_7.5" xrefstyle="select: label"/>). Whether a Data Set uses Explicit or Implicit VR, among other characteristics, is determined by the negotiated Transfer Syntax (see <xref linkend="chapter_10" xrefstyle="template: Section %n"/> and <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
      <note>
        <para>VRs are not contained in Data Elements when using DICOM Default Transfer Syntax (DICOM Implicit VR Little Endian Transfer Syntax).</para>
      </note>
      <para>
        <figure xml:id="figure_7.1-1" label="7.1-1" pgwide="1">
          <title>DICOM Data Set and Data Element Structures</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_7.1-1.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image002.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <section xml:id="sect_7.1.1" label="7.1.1" status="3">
        <title>Data Element Fields</title>
        <para>A Data Element is made up of fields. Three fields are common to all three Data Element structures; these are the Data Element Tag, Value Length, and Value Field. A fourth field, Value Representation, is only present in the two Explicit VR Data Element structures. The Data Element structures are defined in <xref linkend="sect_7.1.2" xrefstyle="select: label"/> and <xref linkend="sect_7.1.3" xrefstyle="select: label"/>. The definitions of the fields are:</para>
        <variablelist>
          <varlistentry>
            <term>Data Element Tag</term>
            <listitem>
              <para>An ordered pair of 16-bit unsigned integers representing the Group Number followed by Element Number.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Value Representation</term>
            <listitem>
              <para>A two-byte character string containing the VR of the Data Element. The VR for a given Data Element Tag shall be as defined by the Data Dictionary as specified in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>. The two character VR shall be encoded using characters from the DICOM default character set.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Value Length</term>
            <listitem>
              <para>Either:</para>
              <itemizedlist>
                <listitem>
                  <para>a 16 or 32-bit (dependent on VR and whether VR is explicit or implicit) unsigned integer containing the Explicit Length of the Value Field as the number of bytes (even) that make up the Value. It does not include the length of the Data Element Tag, Value Representation, and Value Length Fields.</para>
                </listitem>
                <listitem>
                  <para>a 32-bit Length Field set to Undefined Length (FFFFFFFFH). Undefined Lengths may be used for Data Elements having the Value Representation (VR) Sequence of Items (SQ) and Unknown (UN). For Data Elements with Value Representation OW or OB Undefined Length may be used depending on the negotiated Transfer Syntax (see <xref linkend="chapter_10" xrefstyle="template: Section %n"/> and <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
                </listitem>
              </itemizedlist>
              <note>
                <para>The decoder of a Data Set should support both Explicit and Undefined Lengths for VRs of SQ and UN and, when applicable, for VRs of OW and OB.</para>
              </note>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Value Field</term>
            <listitem>
              <para>An even number of bytes containing the Value(s) of the Data Element.</para>
              <para>The data type of Value(s) stored in this field is specified by the Data Element's VR. The VR for a given Data Element Tag can be determined using the Data Dictionary in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>, or using the VR Field if it is contained explicitly within the Data Element. The VR of Standard Data Elements shall agree with those specified in the Data Dictionary.</para>
              <para>The Value Multiplicity specifies how many Values with this VR can be placed in the Value Field. If the VM is greater than one, multiple values shall be delimited within the Value Field as defined previously in <xref linkend="sect_6.4" xrefstyle="select: label"/>. The VMs of Standard Data Elements are specified in the Data Dictionary in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>.</para>
              <para>Value Fields with Undefined Length are delimited through the use of Sequence Delimitation Items and Item Delimitation Data Elements, which are described further in <xref linkend="sect_7.5" xrefstyle="select: label"/>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="sect_7.1.2" label="7.1.2" status="3">
        <title>Data Element Structure with Explicit VR</title>
        <para>When using the Explicit VR structures, the Data Element shall be constructed of four consecutive fields: Data Element Tag, VR, Value Length, and Value. Depending on the VR of the Data Element, the Data Element will be structured in one of two ways:</para>
        <itemizedlist>
          <listitem>
            <para>for VRs of OB, OW, OF, SQ and UN the 16 bits following the two character VR Field are reserved for use by later versions of the DICOM Standard. These reserved bytes shall be set to 0000H and shall not be used or decoded (<xref linkend="table_7.1-1" xrefstyle="select: label"/>). The Value Length Field is a 32-bit unsigned integer. If the Value Field has an Explicit Length, then the Value Length Field shall contain a value equal to the length (in bytes) of the Value Field. Otherwise, the Value Field has an Undefined Length and a Sequence Delimitation Item marks the end of the Value Field.</para>
          </listitem>
          <listitem>
            <para>for VRs of UT the 16 bits following the two character VR Field are reserved for use by later versions of the DICOM Standard. These reserved bytes shall be set to 0000H and shall not be used or decoded. The Value Length Field is a 32-bit unsigned integer. The Value Field is required to have an Explicit Length, that is the Value Length Field shall contain a value equal to the length (in bytes) of the Value Field.</para>
            <note>
              <para>VRs of UT may not have an Undefined Length, i.e.,a Value Length of FFFFFFFFH.</para>
            </note>
          </listitem>
          <listitem>
            <para>for all other VRs the Value Length Field is the 16-bit unsigned integer following the two character VR Field (<xref linkend="table_7.1-2" xrefstyle="select: label"/>). The value of the Value Length Field shall equal the length of the Value Field.</para>
          </listitem>
        </itemizedlist>
        <table frame="box" rules="all" xml:id="table_7.1-1" label="7.1-1">
          <caption>Data Element with Explicit VR of OB, OW, OF, SQ, UT or UN</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">VR</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value Length</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>Group Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Element Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>VR</para>
                <para>(2 byte character string) of "OB", "OW", "OF", "SQ", "UT" or "UN"</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Reserved (2 bytes) set to a value of 0000H</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>32-bit unsigned integer</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Even number of bytes containing the Data Element Value(s) encoded according to the VR and negotiated Transfer Syntax. Delimited with Sequence Delimitation Item if of Undefined Length.</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>'Value Length' bytes if of Explicit Length</para>
              </td>
            </tr>
          </tbody>
        </table>
        <table frame="box" rules="all" xml:id="table_7.1-2" label="7.1-2">
          <caption>Data Element with Explicit VR other than as shown in <xref linkend="table_7.1-1" xrefstyle="select: label"/></caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">VR</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value Length</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>Group Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Element Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>VR</para>
                <para>(2 byte character string)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Even number of bytes containing the Data Element Value(s) encoded according to the VR and negotiated Transfer Syntax.</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>'Value Length' bytes</para>
              </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section xml:id="sect_7.1.3" label="7.1.3" status="3">
        <title>Data Element Structure with Implicit VR</title>
        <para>When using the Implicit VR structure the Data Element shall be constructed of three consecutive fields: Data Element Tag, Value Length, and Value (see <xref linkend="table_7.1-3" xrefstyle="select: label"/>). If the Value Field has an Explicit Length then the Value Length Field shall contain a value equal to the length (in bytes) of the Value Field. Otherwise, the Value Field has an Undefined Length and a Sequence Delimitation Item marks the end of the Value Field.</para>
        <table frame="box" rules="all" xml:id="table_7.1-3" label="7.1-3">
          <caption>Data Element with Implicit VR</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value Length</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>Group Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Element Number</para>
                <para>(16-bit unsigned integer)</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>32-bit unsigned integer</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Even number of bytes containing the Data Elements Value encoded according to the VR specified in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/> and the negotiated Transfer Syntax. Delimited with Sequence Delimitation Item if of Undefined Length.</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>'Value Length' bytes or Undefined Length</para>
              </td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
    <section xml:id="sect_7.2" label="7.2" status="2">
      <title>Group Length</title>
      <para>Group Length (gggg,0000) Standard Data Elements have been retired. See PS3.5-2007.</para>
      <para>All implementations shall be able to parse Group Length elements, and may discard and not insert or re-insert them; if present they shall be consistent with the encoding of the Data Set even if the transfer syntax is changed resulting in a change in the actual length of a group of elements. No implementation shall require the presence of Group Length elements.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>Elements in groups 0, 2, 4 and 6 are not Standard Data Elements. Mandatory requirements for Group Length for groups 0 and 2 are specified elsewhere in the standard.</para>
          </listitem>
          <listitem>
            <para>It is recommended that Group Length elements be removed during storage or transfer in order to avoid the risk of inconsistencies arising during coercion of data element values and changes in transfer syntax.</para>
          </listitem>
        </orderedlist>
      </note>
    </section>
    <section xml:id="sect_7.3" label="7.3" status="2">
      <title>Big Endian Versus Little Endian Byte Ordering</title>
      <para>Another component of the encoding of a Data Set that shall be agreed upon by communicating Application Entities is the Byte Ordering.</para>
      <para>Little Endian byte ordering is defined as follows:</para>
      <itemizedlist>
        <listitem>
          <para>In a binary number consisting of multiple bytes (e.g., a 32-bit unsigned integer value, the Group Number, the Element Number, etc.), the least significant byte shall be encoded first; with the remaining bytes encoded in increasing order of significance.</para>
        </listitem>
        <listitem>
          <para>In a character string consisting of multiple 8-bit single byte codes, the characters will be encoded in the order of occurrence in the string (left to right).</para>
        </listitem>
      </itemizedlist>
      <para>Big Endian byte ordering is defined as follows:</para>
      <itemizedlist>
        <listitem>
          <para>In a binary number consisting of multiple bytes, the most significant byte shall be encoded first; with the remaining bytes encoded in decreasing order of significance.</para>
        </listitem>
        <listitem>
          <para>In a character string consisting of multiple 8-bit single byte codes, the characters will be encoded in the order of occurrence in the string (left to right).</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>The packing of bits within values of OB or OW Value representation for Pixel Data and Overlay Data is described in <xref linkend="chapter_8" xrefstyle="template: Section %n"/>.</para>
      </note>
      <para>Byte ordering is a component of an agreed upon Transfer Syntax (see <xref linkend="chapter_10" xrefstyle="template: Section %n"/>). The default DICOM Transfer Syntax, which shall be supported by all AEs, uses Little Endian encoding and is specified in <xref linkend="sect_A.1" xrefstyle="select: label"/>. Alternate Transfer Syntaxes, some of which use Big Endian encoding, are also specified in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>.</para>
      <note>
        <para>The Command Set structure as specified in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/> is encoded using the Little Endian Implicit VR Transfer Syntax.</para>
      </note>
      <para>In the default case of Little Endian encoding, Big Endian Machines interpreting Data Sets shall do 'byte swapping' before interpreting or operating on certain Data Elements. The Data Elements affected are all those having VRs that are multiple byte Values and that are not a character string of 8-bit single byte codes. VRs constructed of a string of characters of 8-bit single byte codes are really constructed of a string of individual bytes, and are therefore not affected by byte ordering. The VRs that are not a string of characters and consist of multiple bytes are:</para>
      <itemizedlist>
        <listitem>
          <para>2-byte US, SS, OW and each component of AT</para>
        </listitem>
        <listitem>
          <para>4-byte OF, UL, SL, and FL</para>
        </listitem>
        <listitem>
          <para>8 byte OD, FD</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>For the above VRs, the multiple bytes are presented in increasing order of significance when in Little Endian format. For example, an 8-byte Data Element with VR of FD, might be written in hexadecimal as 68AF4B2CH, but encoded in Little Endian would be 2C4BAF68H.</para>
      </note>
    </section>
    <section xml:id="sect_7.4" label="7.4" status="2">
      <title>Data Element Type</title>
      <para>An attribute, encoded as a Data Element, may or may not be required in a Data Set, depending on that Attribute's Data Element Type.</para>
      <para>The Data Element Type of an Attribute of an Information Object Definition or an Attribute of a SOP Class Definition is used to specify whether that Attribute is mandatory or optional. The Data Element Type also indicates if an Attribute is conditional (only mandatory under certain conditions). The Data Element Types of Attributes of Composite IODs are specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>. The Data Element Types of Attributes of Normalized IODs are specified as Attributes of SOP Classes in <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>.</para>
      <section xml:id="sect_7.4.1" label="7.4.1" status="3">
        <title>Type 1 Required Data Elements</title>
        <para>IODs and SOP Classes define Type 1 Data Elements that shall be included and are mandatory elements. The Value Field shall contain valid data as defined by the elements VR and VM as specified in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>. The Length of the Value Field shall not be zero. Absence of a valid Value in a Type 1 Data Element is a protocol violation.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>For data elements with a string (CS, SH, LO) rather than binary, text or sequence Value Representation, and for which multiple Values are allowed, the presence of a single Value is sufficient to satisfy the Type 1 requirement, unless specified otherwise in the Attribute description, and other Values may be empty, unless otherwise specified by the IOD. The presence of one or more delimiter (BACKSLASH) characters alone, without any Values, is not sufficient to satisfy the Type 1 requirement, since even though the Value Length is greater than zero, there is no valid Value present.</para>
            </listitem>
            <listitem>
              <para>A Type 1 Sequence Data Element will contain one or more Items, as defined by the IOD (irrespective of the VM of the Sequence, which is always one (<xref linkend="sect_7.5" xrefstyle="select: label"/>)). Whether or not those Items may be empty (contain no Data Elements) depends on the IOD definition of the Data Set for each Item.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_7.4.2" label="7.4.2" status="3">
        <title>Type 1C Conditional Data Elements</title>
        <para>IODs and SOP Classes define Data Elements that shall be included under certain specified conditions. Type 1C elements have the same requirements as Type 1 elements under these conditions. It is a protocol violation if the specified conditions are met and the Data Element is not included.</para>
        <para>When the specified conditions are not met, Type 1C elements shall not be included in the Data Set.</para>
      </section>
      <section xml:id="sect_7.4.3" label="7.4.3" status="3">
        <title>Type 2 Required Data Elements</title>
        <para>IODs and SOP Classes define Type 2 Data Elements that shall be included and are mandatory Data Elements. However, it is permissible that if a Value for a Type 2 element is unknown it can be encoded with zero Value Length and no Value. If the Value is known the Value Field shall contain that value as defined by the elements VR and VM as specified in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>. These Data Elements shall be included in the Data Set and their absence is a protocol violation.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The intent of Type 2 Data Elements is to allow a zero length to be conveyed when the operator or application does not know its value or has a specific reason for not specifying its value. It is the intent that the device should support these Data Elements.</para>
            </listitem>
            <listitem>
              <para>A Type 2 Sequence Data Element will contain zero or more Items, as defined by the IOD (irrespective of the VM of the Sequence, which is always one (<xref linkend="sect_7.5" xrefstyle="select: label"/>)). An empty Type 2 Sequence is one with no Items, as opposed to an Item that is present but empty. Whether or not Items may be empty (contain no Data Elements) depends on the IOD definition of the Data Set for each Item, rather than the Type of the enclosing Sequence Data Element.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_7.4.4" label="7.4.4" status="3">
        <title>Type 2C Conditional Data Elements</title>
        <para>IODs and SOP Classes define Type 2C elements that have the same requirements as Type 2 elements under certain specified conditions. It is a protocol violation if the specified conditions are met and the Data Element is not included.</para>
        <para>When the specified conditions are not met, Type 2C elements shall not be included in the Data Set.</para>
        <note>
          <para>An example of a Type 2C Data Element is Inversion Time (0018,0082). For several SOP Class Definitions, this Data Element is required only if the Scanning Sequence (0018,0020) has the Value "IR." It is not required otherwise. See <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
        </note>
      </section>
      <section xml:id="sect_7.4.5" label="7.4.5" status="3">
        <title>Type 3 Optional Data Elements</title>
        <para>IODs and SOP Classes define Type 3 Data Elements that are optional Data Elements. Absence of a Type 3 element from a Data Set does not convey any significance and is not a protocol violation. Type 3 elements may also be encoded with zero length and no Value. The meaning of a zero length Type 3 Data Element shall be precisely the same as that element being absent from the Data Set.</para>
      </section>
      <section xml:id="sect_7.4.6" label="7.4.6" status="3">
        <title>Data Element Types Within A Sequence</title>
        <para>When an IOD defines a Sequence Data Element (see <xref linkend="sect_7.5" xrefstyle="select: label"/>), the Type of the Sequence attribute defines whether the Sequence attribute itself must be present, and the Attribute Description of the Sequence attribute may define whether and how many Items shall be present in the Sequence. The Types of the attributes of the Data Set included in the Sequence, including any conditionality, are specified within the scope of each Data Set, i.e., for each Item present in the Sequence.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The Type and Attribute Description of the Sequence determines whether Items are present; conditionality constraints on Data Elements of the Items cannot force an Item to be present.</para>
            </listitem>
            <listitem>
              <para>Historically, many IODs declared Type 1 and Type 2 Data Elements of the Sequence to be Type 1C and Type 2C, respectively, with the condition that an Item is present. This is exactly the same as simply defining them as Type 1 and Type 2.</para>
            </listitem>
            <listitem>
              <para>In particular, the conditionality constraint "Required if Sequence is sent" on the Type 1C or Type 2C Data Elements subsidiary to a Type 2 or 3 Sequence attribute does not imply that an Item must be present in the Sequence. These conditions are meant to be equivalent to "Required if a Sequence Item is present", and the conditionality is not strictly necessary. Any Type 2 or Type 3 Sequence attribute may be sent with zero length.</para>
            </listitem>
            <listitem>
              <para>In particular, the conditionality constraint "Required if &lt;name-of-parent-sequence-attribute&gt; is sent" on the Type 1C or Type 2C Data Elements subsidiary to a Type 2 or 3 Sequence attribute does not imply that an Item must be present in the Sequence. These conditions are meant to be equivalent to "Required if a Sequence Item is present", and the conditionality is not strictly necessary. Any Type 2 or Type 3 Sequence attribute may be sent with zero length.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
    </section>
    <section xml:id="sect_7.5" label="7.5" status="2">
      <title>Nesting of Data Sets</title>
      <para>The VR identified "SQ" shall be used for Data Elements with a Value consisting of a Sequence of zero or more Items, where each Item contains a set of Data Elements. SQ provides a flexible encoding scheme that may be used for simple structures of repeating sets of Data Elements, or the encoding of more complex Information Object Definitions often called folders. SQ Data Elements can also be used recursively to contain multi-level nested structures.</para>
      <para>Items present in an SQ Data Element shall be an ordered set where each Item may be referenced by its ordinal position. Each Item shall be implicitly assigned an ordinal position starting with the value 1 for the first Item in the Sequence, and incremented by 1 with each subsequent Item. The last Item in the Sequence shall have an ordinal position equal to the number of Items in the Sequence.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>This clause implies that item ordering is preserved during transfer and storage.</para>
          </listitem>
          <listitem>
            <para>An IOD or Module Definition may choose to not use this ordering property of a Data Element with VR of SQ. This is simply done by not specifying any specific semantics to the ordering of Items, or by not specifying usage of the referencing of Items by ordering position.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>The definition of the Data Elements encapsulated in each Item is provided by the specification of the Data Element (or associated Attribute) of Value Representation SQ. Items in a sequence of Items may or may not contain the same set of Data Elements. Data Elements with a VR of SQ may contain multiple Items but shall always have a Value Multiplicity of one (i.e., a single Sequence).</para>
      <para>There are three special SQ related Data Elements that are not ruled by the VR encoding rules conveyed by the Transfer Syntax. They shall be encoded as Implicit VR. These special Data Elements are Item (FFFE,E000), Item Delimitation Item (FFFE,E00D), and Sequence Delimitation Item (FFFE,E0DD). However, the Data Set within the Value Field of the Data Element Item (FFFE,E000) shall be encoded according to the rules conveyed by the Transfer Syntax.</para>
      <section xml:id="sect_7.5.1" label="7.5.1" status="3">
        <title>Item Encoding Rules</title>
        <para>Each Item of a Data Element of Value Representation SQ shall be encoded as a DICOM Standard Data Element with a specific Data Element Tag of Value (FFFE,E000). The Item Tag is followed by a 4 byte Item Length field encoded in one of the following two ways:</para>
        <orderedlist numeration="loweralpha">
          <listitem>
            <para>Explicit Length: The number of bytes (even) contained in the Sequence Item Value (following but not including the Item Length Field) is encoded as a 32-bit unsigned integer value (see <xref linkend="sect_7.1" xrefstyle="select: label"/>). This length shall include the total length of all Data Elements conveyed by this Item. This Item Length shall be equal to 00000000H if the Item contains no Data Set.</para>
          </listitem>
          <listitem>
            <para>Undefined Length: The Item Length Field shall contain the value FFFFFFFFH to indicate an undefined Item length. It shall be used in conjunction with an Item Delimitation Data Element. This Item Delimitation Data Element has a Data Element Tag of (FFFE,E00D) and shall follow the Data Elements encapsulated in the Item. No Value shall be present in the Item Delimitation Data Element and its Length shall be 00000000H. An Item containing no Data Set is encoded by an Item Delimitation Data Element only.</para>
          </listitem>
        </orderedlist>
        <para>The encoder of a Data Set may choose either one of the two ways of encoding. Both ways of encoding shall be supported by decoders of Data Sets. Data Element Tags (FFFF,eeee) are reserved by this standard and shall not be used.</para>
        <para>Each Item Value shall contain a DICOM Data Set composed of Data Elements. Within the context of each Item, these Data Elements shall be ordered by increasing Data Element Tag value and appear only once (as Data Set is defined in <xref linkend="sect_7.1" xrefstyle="select: label"/>). There is no relationship between the ordering of the Data Elements contained within an Item and the ordering of the Data Element Tag of SQ Value Representation that contains that Item. One or more Data Elements in an Item may be of Value Representation SQ, thus allowing for recursion.</para>
        <para>Data Elements with a group of 0000, 0002 and 0006 shall not be present within Sequence Items.</para>
        <note>
          <para>The use of Transfer Syntax UID (0002,0010) in particular is forbidden, since were it to differ from the Transfer Syntax of the enclosing Data Set then a change in encoding would be implied, which is not allowed.</para>
        </note>
        <para><xref linkend="sect_7.8" xrefstyle="select: label"/> specifies rules for incorporating Private Data Elements into Sequence Items.</para>
      </section>
      <section xml:id="sect_7.5.2" label="7.5.2" status="3">
        <title>Delimitation of The Sequence of Items</title>
        <para>Delimitation of the last Item of a Sequence of Items, encapsulated in a Data Element of Value Representation SQ, shall be in one of the two following ways:</para>
        <orderedlist numeration="loweralpha">
          <listitem>
            <para>Explicit Length: The number of bytes (even) contained in the Data Element Value (following but not including the Data Element Length Field) is encoded as a 32-bit unsigned integer value (see <xref linkend="sect_7.1" xrefstyle="select: label"/>). This length shall include the total length resulting from the sequence of zero or more items conveyed by this Data Element. This Data Element Length shall be equal to 00000000H if the sequence of Items contains zero Items.</para>
          </listitem>
          <listitem>
            <para>Undefined Length: The Data Element Length Field shall contain a Value FFFFFFFFH to indicate an Undefined Sequence length. It shall be used in conjunction with a Sequence Delimitation Item. A Sequence Delimitation Item shall be included after the last Item in the sequence. Its Item Tag shall be (FFFE,E0DD) with an Item Length of 00000000H. No Value shall be present. A Sequence containing zero Items is encoded by a Sequence Delimitation Item only.</para>
          </listitem>
        </orderedlist>
        <para>The encoder of a Sequence of Items may choose either one of the two ways of encoding. Both ways of encoding shall be supported by decoders of the Sequence of Items.</para>
        <note>
          <para>The Sequence Delimitation Item Tag (FFFE,E0DD) is different from the Item Delimitation Tag (FFFE,E00D) introduced above in that it indicates the end of a Sequence of Items whose Length was left undefined. If an undefined length Item is the last Item of a Sequence of Items of undefined length, then an Item Delimitation Tag will be followed by a Sequence Delimitation Tag.</para>
        </note>
        <para>For an example of an SQ Data Element of Explicit Length encapsulating Items of Explicit Length see <xref linkend="table_7.5-1" xrefstyle="select: label"/>.</para>
        <para>For an example of an SQ Data Element of Undefined Length encapsulating Items of Explicit Length see <xref linkend="table_7.5-2" xrefstyle="select: label"/>.</para>
        <para>For an example of an SQ Data Element of Undefined Length encapsulating Items of both Explicit and Undefined Length see <xref linkend="table_7.5-3" xrefstyle="select: label"/>.</para>
        <table frame="box" rules="all" xml:id="table_7.5-1" label="7.5-1">
          <caption>Example of a Data Element with Implicit VR Defined as a Sequence of Items (VR = SQ) with Three Items of Explicit Length</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Length</emphasis>
                </para>
              </th>
              <th align="left" colspan="9" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Value</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="2">
                <para>(gggg, eeee) with VR of SQ</para>
              </td>
              <td align="center" colspan="1" rowspan="2">
                <para>0000 0F00H</para>
              </td>
              <th align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">First Item</emphasis>
                </para>
              </th>
              <td align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">Second Item</emphasis>
                </para>
              </td>
              <td align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">Third Item</emphasis>
                </para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 04F8H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 04F8H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 04F8H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>04F8H bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>04F8H bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>04F8H bytes</para>
              </td>
            </tr>
          </tbody>
        </table>
        <table frame="box" rules="all" xml:id="table_7.5-2" label="7.5-2">
          <caption>Example of a Data Element with Explicit VR Defined as a Sequence of Items (VR = SQ) of Undefined Length, Containing Two Items of Explicit Length</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Value Representation</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Length</emphasis>
                </para>
              </th>
              <td align="left" colspan="8" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Value</emphasis>
                </para>
              </td>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="2">
                <para>(gggg, eeee) with VR of SQ</para>
              </td>
              <td align="center" colspan="1" rowspan="2">
                <para>SQ</para>
              </td>
              <td align="center" colspan="1" rowspan="2">
                <para>0000H Reserved</para>
              </td>
              <td align="center" colspan="1" rowspan="2">
                <para>FFFF FFFFH undefined length</para>
              </td>
              <td align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">First Item</emphasis>
                </para>
              </td>
              <td align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">Second Item</emphasis>
                </para>
              </td>
              <td align="left" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Sequence Delimitation Item</emphasis>
                </para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 98A5 2C68H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length B321 762CH</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Seq. Delim. Tag (FFFE, E0DD)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 0000H</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>2 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>98A5 2C68H bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>B321 762CH bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <para>The Data Set within the Item Values in <xref linkend="table_7.5-2" xrefstyle="select: label"/> have VRs Explicitly defined.</para>
        </note>
        <table frame="box" rules="all" xml:id="table_7.5-3" label="7.5-3">
          <caption>Example of a Data Element with Implicit VR Defined as a Sequence of Items (VR = SQ) of Undefined Length, Containing Two Items Where One Item is of Explicit Length and the Other Item is of Undefined Length</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Tag</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Data Element Length</emphasis>
                </para>
              </th>
              <td align="center" colspan="10" rowspan="1">
                <para>
                  <emphasis role="left">Data Element Value</emphasis>
                </para>
              </td>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="2">
                <para>(gggg, eeee) with VR of SQ</para>
              </td>
              <td align="center" colspan="1" rowspan="2">
                <para>FFFF FFFFH undefined length</para>
              </td>
              <td align="left" colspan="3" rowspan="1">
                <para>
                  <emphasis role="bold">First Item</emphasis>
                </para>
              </td>
              <td align="left" colspan="5" rowspan="1">
                <para>
                  <emphasis role="bold">Second Item</emphasis>
                </para>
              </td>
              <td align="left" colspan="2" rowspan="1">
                <para>
                  <emphasis role="bold">Sequence Delimitation Item</emphasis>
                </para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 17B6H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Tag (FFFE, E000)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length FFFF FFFFH undefined length</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Value Data Set</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Delim. Tag (FFFE, E00D)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Length 0000 0000H</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Seq. Delim. Tag (FFFE, E0DD)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Item Length 0000 0000H</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>17B6H bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>undefined length</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>4 bytes</para>
              </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section xml:id="sect_7.5.3" label="7.5.3" status="3">
        <title>Sequence Inheritance</title>
        <para>An encapsulated Data Set shall only include the Specific Character Set (0008,0005) data element if the Attribute Specific Character Set is defined in the IOD for that sequence of items.</para>
        <note>
          <para>An encapsulated Data Set does not include the Specific Character Set data element unless the Specific Character Set Attribute is defined as part of the IOD for that sequence.</para>
        </note>
        <para>If an encapsulated Data Set includes the Specific Character Set Attribute, it shall apply only to the encapsulated Data Set. If the Attribute Specific Character Set is not explicitly included in an encapsulated Data Set, then the Specific Character Set value of the encapsulating Data Set applies.</para>
      </section>
    </section>
    <section xml:id="sect_7.6" label="7.6" status="2">
      <title>Repeating Groups</title>
      <para>Multiple Overlay Planes and Curves are often associated with a single Image (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). Standard Data Elements with even Group Numbers (5000-501E,eeee) represent Curves, while elements with even Group Numbers (6000-601E,eeee) represent Overlay Planes. Both of these ranges of Group numbers are known as Repeating Groups. This use of group numbers is a remnant of versions of this standard prior to V3.0 that associated a semantic meaning with particular Groups.</para>
      <para>In each of these ranges of Group Numbers, Standard Data Elements that have identical Element Numbers have the same meaning within each Group (and the same VR, VM, and Data Element Type). The notation (50xx,eeee) and (60xx,eeee) are used for the Group Number in Data Element Tags when referring to a common Data Element across these groups (see <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>). Groups (50xx,eeee) and (60xx,eeee) are called Repeating Groups because of these characteristics.</para>
      <para>Repeating Groups shall only be allowed in the even Groups (6000-601E,eeee) and even Groups (5000-501E,eeee) cases. In the future, Data Elements with VRs of SQ shall be used to serve a similar purpose.</para>
      <note>
        <para>Private Groups in the odd Groups (5001-501F,eeee) and (6001-601F,eeee) may still be used, but there is no implication of repeating semantics, nor any implied shadowing of the standard repeating groups.</para>
      </note>
    </section>
    <section xml:id="sect_7.7" label="7.7" status="2">
      <title>Retired Data Elements</title>
      <para>Certain Data Elements are no longer supported beginning with Version 3.0 of this standard. These Data Elements are retired and are denoted as such (RET) in the VR column in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>. Implementations may continue to support these Data Elements for the purpose of backward compatibility with versions of this standard prior to V3.0, but this is not a requirement of this standard. If a retired Data Element is used it must contain valid data as specified in versions of this standard prior to V3.0. Any other use of a retired Data Element, and its associated Data Element Tag, is reserved by this standard. Retired Data Element Tags shall not be redefined in later versions of this standard.</para>
    </section>
    <section xml:id="sect_7.8" label="7.8" status="2">
      <title>Private Data Elements</title>
      <para>Implementations may require communication of information that cannot be contained in Standard Data Elements. Private Data Elements are intended to be used to contain such information. Such Private Data Elements shall not change the semantics of the Information Object Definition or SOP Class Definition.</para>
      <para>Private Data Elements have the same structure as Standard Data Elements specified earlier in <xref linkend="sect_7.1" xrefstyle="select: label"/> (i.e., Data Element Tag field, optional VR field, length field, and value field). The Group Number used in the Element Tag of Private Data Elements shall be an odd number. Private Data Elements shall be contained in the Data Set in increasing numeric order of Data Element Tag. The Value Field of a Private data element shall have one of the VRs specified by this standard in <xref linkend="sect_6.2" xrefstyle="select: label"/>.</para>
      <para>For each Information Object Definition or SOP Class Definition, certain Data Elements are required (Data Element Type 1, 1C, 2, or 2C) as specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> and <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>. Private Data Elements shall not be used in place of required Standard Data Elements.</para>
      <section xml:id="sect_7.8.1" label="7.8.1" status="3">
        <title>Private Data Element Tags</title>
        <para>It is possible that multiple implementers may define Private Elements with the same (odd) group number. To avoid conflicts, Private Elements shall be assigned Private Data Element Tags according to the following rules.</para>
        <orderedlist numeration="loweralpha">
          <listitem>
            <para>Private Creator Data Elements numbered (gggg,0010-00FF) (gggg is odd) shall be used to reserve a block of Elements with Group Number gggg for use by an individual implementer. The implementer shall insert an identification code in the first unused (unassigned) Element in this series to reserve a block of Private Elements. The VR of the private identification code shall be LO (Long String) and the VM shall be equal to 1.</para>
          </listitem>
          <listitem>
            <para>Private Creator Data Element (gggg,0010), is a Type 1 Data Element that identifies the implementer reserving element (gggg,1000-10FF), Private Creator Data Element (gggg,0011) identifies the implementer reserving elements (gggg,1100-11FF), and so on, until Private Creator Data Element (gggg,00FF) identifies the implementer reserving elements (gggg,FF00-FFFF).</para>
          </listitem>
          <listitem>
            <para>Encoders of Private Data Elements shall be able to dynamically assign private data to any available (unreserved) block(s) within the Private group, and specify this assignment through the blocks corresponding Private Creator Data Element(s). Decoders of Private Data shall be able to accept reserved blocks with a given Private Creator identification code at any position within the Private group specified by the blocks corresponding Private Creator Data Element.</para>
            <note>
              <orderedlist numeration="arabic">
                <listitem>
                  <para>The versions of this standard prior to V3.0 described shadow groups. These were groups with a group number one greater than the standard groups. Elimination of conflicts in Private Data Element Tags have made this distinction obsolete and this terminology has been retired.</para>
                </listitem>
                <listitem>
                  <para>The versions of this standard prior to V3.0 specified private group element numbers (gggg,10FF-7FFF) reserved for manufacturers and private group element numbers (gggg, 8100-FFFF) reserved for users. Elimination of conflicts in Private Data Element Tags has made this distinction obsolete and this specification has been retired.</para>
                </listitem>
                <listitem>
                  <para>The requirements of this section do not allow any use of elements in the ranges (gggg,0001-000F) and (gggg,0100-0FFF) where gggg is odd.</para>
                </listitem>
              </orderedlist>
            </note>
          </listitem>
          <listitem>
            <para>Elements with Tags (0001,xxxx), (0003,xxxx), (0005,xxxx), and (0007,xxxx) shall not be used.</para>
          </listitem>
        </orderedlist>
        <para>Since each Item within a sequence is a self contained Data Set (see <xref linkend="sect_7.5" xrefstyle="select: label"/> on the nesting of Data Sets via Sequences of Items), any Item that contains Private Data Elements shall also have Private Creator Data Elements reserving blocks of Elements for those Private Data Elements. The scope of the reservation is just within the Item. Items do not inherit the Private Data Element reservations made by Private Creator Data Elements in the Data Set in which the Item is nested.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>If a sequence is itself a Private Data Element and the Items within the sequence also have Private Data Elements, then there will be Private Creator Data Elements both outside the sequence and within the sequence Items.</para>
            </listitem>
            <listitem>
              <para>Different Items may reserve the same block of Private Data Elements for different private creators. This is necessary to allow the nesting of Data Sets collected from multiple sources into folders.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_7.8.2" label="7.8.2" status="3">
        <title>Encoding of Private Elements</title>
        <para>The Value Representations used for Private Data Elements shall be the same as those VRs specified for Standard Data Elements in <xref linkend="sect_6.2" xrefstyle="select: label"/>. The encoding shall conform to the requirements for those VRs and shall be in accordance with the negotiated Transfer Syntax. A Private Data Element with SQ VR (a Private Data Sequence) may include Items with both Standard and Private Data Elements. Standard Data Elements used within a Private Data Sequence shall use the VRs as defined in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/> for those data elements.</para>
        <para>The semantics of Standard Data Elements within a Private Data Sequence, and the definition of Attribute Values, are implementation dependent.</para>
        <para>For a Standard Extended SOP Class the Attributes Pixel Data (07FE,0010), Waveform Data (5400,1010), and Overlay Data (60xx,3000) shall not be included within a Private Sequence Item, nor within a standard Sequence Item nested directly or indirectly within a Private Sequence Item.</para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="chapter_8" label="8" status="1">
    <title>Encoding of Pixel, Overlay and Waveform Data</title>
    <section xml:id="sect_8.1" label="8.1" status="2">
      <title>Pixel and Overlay Data, and Related Data Elements</title>
      <para>The Pixel Data Element (7FE0,0010) and Overlay Data Element (60xx,3000) shall be used for the exchange of encoded graphical image data. These elements along with additional Data Elements, specified as Attributes of the Image Information Entities defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>, shall be used to describe the way in which the Pixel Data and Overlay Data are encoded and shall be interpreted. Finally, depending on the negotiated Transfer Syntax (see <xref linkend="chapter_10" xrefstyle="template: Section %n"/> and <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>), Pixel Data may be compressed.</para>
      <para>The Pixel Data Element (7FE0,0010) and Overlay Data Element (60xx,3000) have a VR of OW or OB, depending on the negotiated Transfer Syntax (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>). The only difference between OW and OB being that OB, a string of bytes, shall be unaffected by Byte Ordering (see <xref linkend="sect_7.3" xrefstyle="select: label"/>).</para>
      <section xml:id="sect_8.1.1" label="8.1.1" status="3">
        <title>Pixel Data Encoding of Related Data Elements</title>
        <para>Encoded Pixel Data of various bit depths shall be accommodated. The following three Data Elements shall define the Pixel structure:</para>
        <itemizedlist>
          <listitem>
            <para>Bits Allocated (0028,0100)</para>
          </listitem>
          <listitem>
            <para>Bits Stored (0028,0101)</para>
          </listitem>
          <listitem>
            <para>High Bit (0028,0102)</para>
          </listitem>
        </itemizedlist>
        <para>Each Pixel Cell shall contain a single Pixel Sample Value. The size of the Pixel Cell shall be specified by Bits Allocated (0028,0100). Bits Stored (0028,0101) defines the total number of these allocated bits that will be used to represent a Pixel Sample Value. Bits Stored (0028,0101) shall never be larger than Bits Allocated (0028,0100). High Bit (0028,0102) specifies where the high order bit of the Bits Stored (0028,0101) is to be placed with respect to the Bits Allocated (0028,0100) specification. Bits not used for Pixel Sample Values can be used for overlay planes described further in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
        <note>
          <para>For example, in Pixel Data with 16 bits (2 bytes) allocated, 12 bits stored, and bit 15 specified as the high bit, one pixel sample is encoded in each 16-bit word, with the 4 least significant bits of each word not containing Pixel Data. See <xref linkend="chapter_D" xrefstyle="template: Annex %n"/> for other examples of the basic encoding schemes.</para>
        </note>
        <para>Restrictions are placed on acceptable Values for Bits Allocated (0028,0100), Bits Stored (0028,0101), and High Bit (0028,0102) and are specified in the Information Object Definitions in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>. Also, the Value Field containing Pixel Data, like all other Value Fields in DICOM, shall be an even number of bytes in length. This means that the Value Field may need to be padded with data that is not part of the image and shall not be considered significant. If needed, the padding bits shall be appended to the end of the Value Field, and shall be used only to extend the data to the next even byte increment of length.</para>
        <para>In a multi-frame object that is transmitted in Native Format, the individual frames are not padded. The individual frames shall be concatenated and padding bits (if necessary) apply to the complete Value Field.</para>
        <note>
          <para>Receiving applications should be aware that some older applications may send Pixel Data with excess padding, which was not explicitly prohibited in earlier versions of the Standard. Applications should be prepared to accept such Pixel Data elements, but may delete the excess padding. In no case should a sending application place private data in the padding data.</para>
        </note>
        <para>The field of bits representing the value of a Pixel Sample shall be a binary 2's complement integer or an unsigned integer, as specified by the Data Element Pixel Representation (0028,0103). The sign bit shall be the High Bit in a Pixel Sample Value that is a 2's complement integer. The minimum actual Pixel Sample Value encountered in the Pixel Data is specified by Smallest Image Pixel Value (0028,0106) while the maximum value is specified by Largest Image Pixel Value (0028,0107).</para>
      </section>
      <section xml:id="sect_8.1.2" label="8.1.2" status="3">
        <title>Overlay Data Encoding of Related Data Elements</title>
        <para>Encoded Overlay Planes always have a bit depth of 1, and are encoded separately from the Pixel Data in Overlay Data (60xx,3000). The following two Data Elements shall define the Overlay Plane structure:</para>
        <itemizedlist>
          <listitem>
            <para>Overlay Bits Allocated (60xx,0100)</para>
          </listitem>
          <listitem>
            <para>Overlay Bit Position (60xx,0102)</para>
          </listitem>
        </itemizedlist>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>There is no Data Element analogous to Bits Stored (0028,0101) since Overlay Planes always have a bit depth of 1.</para>
            </listitem>
            <listitem>
              <para>Restrictions on the allowed values for these Data Elements are defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>. Formerly overlay data stored in unused bits of Pixel Data (7FE0,0010) was described, and these attributes had meaningful values but this usage has been retired. See PS3.5-2004. For overlays encoded in Overlay Data Element (60xx,3000), Overlay Bits Allocated (60xx,0100) is always 1 and Overlay Bit Position (60xx,0102) is always 0.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>For Overlay Data Element (60xx,3000), the Value Representation OW is most often required. The Value Representation OB may also be used for Overlay Data in cases where the Value Representation is explicitly conveyed (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
        <note>
          <para>The DICOM default Transfer Syntax (Implicit VR Little Endian) does not explicitly convey Value Representation and therefore the VR of OB may not be used for Pixel Data when using the default Transfer Syntax.</para>
        </note>
        <para>Overlay Data is encoded as the direct concatenation of the bits of a single Overlay Plane, where the first bit of an Overlay Plane is encoded in the least significant bit, immediately followed by the next bit of the Overlay Plane in the next most significant bit. When the Overlay Data crosses a word boundary in the OW case, or a byte boundary in the OB case, it shall continue to be encoded, least significant bit to most significant bit, in the next word, or byte, respectively (see <xref linkend="chapter_D" xrefstyle="template: Annex %n"/>). For Overlay Data encoded with the Value Representation OW, the byte ordering of the resulting 2-byte words is defined by the Little Endian or Big Endian Transfer Syntaxes negotiated at the Association Establishment (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
        <note>
          <para>For Overlay Data encoded with the Value Representation OB, the Overlay Data encoding is unaffected by Little Endian or Big Endian byte ordering.</para>
        </note>
      </section>
    </section>
    <section xml:id="sect_8.2" label="8.2" status="2">
      <title>Native or Encapsulated Format Encoding</title>
      <para>Pixel data conveyed in the Pixel Data Element (7FE0,0010) may be sent either in a Native (uncompressed) Format or in an Encapsulated Format (e.g., compressed) defined outside the DICOM standard.</para>
      <para>If Pixel Data is sent in a Native Format, the Value Representation OW is most often required. The Value Representation OB may also be used for Pixel Data in cases where Bits Allocated has a value less than or equal to 8, but only with Transfer Syntaxes where the Value Representation is explicitly conveyed (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
      <note>
        <para>The DICOM default Transfer Syntax (Implicit VR Little Endian) does not explicitly convey Value Representation and therefore the VR of OB may not be used for Pixel Data when using the default Transfer Syntax.</para>
      </note>
      <para>Native format Pixel Cells are encoded as the direct concatenation of the bits of each Pixel Cell, the least significant bit of each Pixel Cell is encoded in the least significant bit of the encoded word or byte, immediately followed by the next most significant bit of each Pixel Cell in the next most significant bit of the encoded word or byte, successively until all bits of the Pixel Cell have been encoded, then immediately followed by the least significant bit of the next Pixel Cell in the next most significant bit of the encoded word or byte. The number of bits of each Pixel Cell is defined by the Bits Allocated (0028,0100) Data Element Value. When a Pixel Cell crosses a word boundary in the OW case, or a byte boundary in the OB case, it shall continue to be encoded, least significant bit to most significant bit, in the next word, or byte, respectively (see <xref linkend="chapter_D" xrefstyle="template: Annex %n"/>). For Pixel Data encoded with the Value Representation OW, the byte ordering of the resulting 2-byte words is
  defined by the Little Endian or Big Endian Transfer Syntaxes negotiated at the Association Establishment (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>).</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>For Pixel Data encoded with the Value Representation OB, the Pixel Data encoding is unaffected by Little Endian or Big Endian byte ordering.</para>
          </listitem>
          <listitem>
            <para>If encoding Pixel Data with a Value for Bits Allocated (0028,0100) not equal to 16 be sure to read and understand <xref linkend="chapter_D" xrefstyle="template: Annex %n"/>.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>If sent in an Encapsulated Format (i.e., other than the Native Format) the Value Representation OB is used. The Pixel Cells are encoded according to the encoding process defined by one of the negotiated Transfer Syntaxes (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>). The encapsulated pixel stream of encoded pixel data is segmented into one or more Fragments, each of which conveys its own explicit length. The sequence of Fragments of the encapsulated pixel stream is terminated by a delimiter, thus allowing the support of encoding processes where the resulting length of the entire pixel stream is not known until it is entirely encoded. This Encapsulated Format supports both Single-Frame and Multi-Frame images (as defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
      <note>
        <para>Depending on the transfer syntax, a frame may be entirely contained within a single fragment, or may span multiple fragments to support buffering during compression or to avoid exceeding the maximum size of a fixed length fragment. A recipient can detect fragmentation of frames by comparing the number of fragments (the number of Items minus one for the Frame Offset Table) with the number of frames. Some performance optimizations may be available to a recipient in the absence of fragmentation of frames, but an implementation that fails to support such fragmentation does not conform to the Standard.</para>
      </note>
      <section xml:id="sect_8.2.1" label="8.2.1" status="3">
        <title>JPEG Image Compression</title>
        <para>DICOM provides a mechanism for supporting the use of JPEG Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a number of Transfer Syntaxes that reference the JPEG Standard and provide a number of lossless (bit preserving) and lossy compression schemes.</para>
        <note>
          <para>The context where the usage of lossy compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for JPEG lossy compression is also beyond the scope of this standard.</para>
        </note>
        <para>In order to facilitate interoperability of implementations conforming to the DICOM Standard that elect to use one or more of the Transfer Syntaxes for JPEG Image Compression, the following policy is specified:</para>
        <itemizedlist>
          <listitem>
            <para>Any implementation that conforms to the DICOM Standard and has elected to support any one of the Transfer Syntaxes for lossless JPEG Image Compression, shall support the following lossless compression: The subset (first-order horizontal prediction [Selection Value 1) of JPEG Process 14 (DPCM, non-hierarchical with Huffman coding) (see <xref linkend="chapter_F" xrefstyle="template: Annex %n"/>).</para>
          </listitem>
          <listitem>
            <para>Any implementation that conforms to the DICOM Standard and has elected to support any one of the Transfer Syntaxes for 8-bit lossy JPEG Image Compression, shall support the JPEG Baseline Compression (coding Process 1).</para>
          </listitem>
          <listitem>
            <para>Any implementation that conforms to the DICOM Standard and has elected to support any one of the Transfer Syntaxes for 12-bit lossy JPEG Image Compression, shall support the JPEG Compression Process 4.</para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The DICOM conformance statement shall differentiate whether or not the implementation is capable of simply receiving or receiving and processing JPEG encoded images (see <olink targetdoc="PS3.2" targetptr="PS3.2" xrefstyle="select: labelnumber"/>).</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support JPEG Compressed Pixel Data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream. The Pixel Data characteristics included in the JPEG Interchange Format shall be used to decode the compressed data stream.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>These requirements were formerly specified in terms of the "uncompressed pixel data from which the compressed data stream was derived". However, since the form of the "original" uncompressed data stream could vary between different implementations, this requirement is now specified in terms of consistency with what is encapsulated.</para>
              <para>When decompressing, should the characteristics explicitly specified in the compressed data stream (e.g., spatial subsampling or number of components or planar configuration) be inconsistent with those specified in the DICOM Data Elements, those explicitly specified in the compressed data stream should be used to control the decompression. The DICOM data elements, if inconsistent, can be regarded as suggestions as to the form in which an uncompressed Data Set might be encoded.</para>
            </listitem>
            <listitem>
              <para>Those characteristics not explicitly specified in the compressed data stream (e.g., the color space of the compressed components, which is not specified in the JPEG Interchange Format), or implied by the definition of the compression scheme (e.g., always unsigned in JPEG), can therefore be determined from the DICOM Data Element in the enclosing Data Set. For example a Photometric Interpretation of "YBR_FULL_422" would describe the color space that is commonly used to lossy compress images using JPEG. It is unusual to use an RGB color space for lossy compression, since no advantage is taken of correlation between the red, green and blue components (e.g., of luminance), and poor compression is achieved.</para>
            </listitem>
            <listitem>
              <para>The JPEG Interchange Format is distinct from the JPEG File Interchange Format (JFIF). The JPEG Interchange Format is defined in <xref linkend="biblio_ISOIEC10918-1"/> section 4.9.1, and refers to the inclusion of decoding tables, as distinct from the "abbreviated format" in which these tables are not sent (and the decoder is assumed to already have them). The JPEG Interchange Format does NOT specify the color space. The JPEG File Interchange Format, not part of the original JPEG standard, but defined in ECMA TR-098, and under development as ISO 101918-5, is often used to store JPEG bit streams in consumer format files, and does include the ability to specify the color space of the components. THE JFIF APP0 marker segment is NOT required to be present in DICOM encapsulated JPEG bit streams, and should not be relied upon to recognize the color space. Its presence is not forbidden (unlike the JP2 information for JPEG 2000 Transfer Syntaxes), but it is recommended that it be absent.</para>
            </listitem>
            <listitem>
              <para>Should the compression process be incapable of encoding a particular form of pixel data representation (e.g., JPEG cannot encode signed integers, only unsigned integers), then ideally only the appropriate form should be "fed" into the compression process. However, for certain characteristics described in DICOM Data Elements but not explicitly described in the compressed data stream (such as Pixel Representation), then the DICOM Data Element should be considered to describe what has been compressed (e.g., the pixel data really is to be interpreted as signed if Pixel Representation so specifies).</para>
            </listitem>
            <listitem>
              <para>DICOM Data Elements should not describe characteristics that are beyond the capability of the compression scheme used. For example, JPEG lossy processes are limited to 12 bits, hence the value of Bits Stored should be 12 or less. Bits Allocated is irrelevant, and is likely to be constrained by the Information Object Definition in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> to values of 8 or 16. Also, JPEG compressed data streams are always color-by-pixel and should be specified as such (a decoder can essentially ignore this element however as the value for JPEG compressed data is already known).</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_8.2.2" label="8.2.2" status="3">
        <title>Run Length Encoding Compression</title>
        <para>DICOM provides a mechanism for supporting the use of Run Length Encoding (RLE) Compression, which is a byte oriented lossless compression scheme through the encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/> of this Standard). <xref linkend="chapter_G" xrefstyle="template: Annex %n"/> defines RLE Compression and its Transfer Syntax.</para>
        <note>
          <para>The RLE Compression algorithm described in <xref linkend="chapter_G" xrefstyle="template: Annex %n"/> is the compression used in the TIFF 6.0 specification known as the "PackBits" scheme.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support RLE Compressed Pixel Data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the compressed data.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>These requirements were formerly specified in terms of the "uncompressed pixel data from which the compressed data was derived". However, since the form of the "original" uncompressed data stream could vary between different implementations, this requirement is now specified in terms of consistency with what is encapsulated.</para>
            </listitem>
            <listitem>
              <para>Those characteristics not implied by the definition of the compression scheme (e.g., always color-by-plane in RLE), can therefore be determined from the DICOM Data Element in the enclosing Data Set. For example a Photometric Interpretation of "YBR FULL" would describe the color space that is commonly used to losslessly compress images using RLE. It is unusual to use an RGB color space for RLE compression, since no advantage is taken of correlation between the red, green and blue components (e.g., of luminance), and poor compression is achieved (note however that the conversion from RGB to YBR FULL is itself lossy. A new photometric interpretation may be proposed in the future that allows lossless conversion from RGB and also results in better RLE compression ratios).</para>
            </listitem>
            <listitem>
              <para>DICOM Data Elements should not describe characteristics that are beyond the capability of the compression scheme used. For example, RLE compressed data streams (using the algorithm mandated in the DICOM Standard) are always color-by-plane.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_8.2.3" label="8.2.3" status="3">
        <title>JPEG-LS Image Compression</title>
        <para>DICOM provides a mechanism for supporting the use of JPEG-LS Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a number of Transfer Syntaxes that reference the JPEG-LS Standard and provide a number of lossless (bit preserving) and lossy (near-lossless) compression schemes.</para>
        <note>
          <para>The context where the usage of lossy (near-lossless) compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for JPEG-LS lossy (near-lossless) compression is also beyond the scope of this standard.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support JPEG-LS Compressed Pixel Data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream. The Pixel Data characteristics included in the JPEG-LS Interchange Format shall be used to decode the compressed data stream.</para>
        <note>
          <para>See also the notes in <xref linkend="sect_8.2.1" xrefstyle="select: label"/>.</para>
        </note>
      </section>
      <section xml:id="sect_8.2.4" label="8.2.4" status="3">
        <title>JPEG 2000 Image Compression</title>
        <para>DICOM provides a mechanism for supporting the use of JPEG 2000 Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a number of Transfer Syntaxes that reference the JPEG 2000 Standard and provide lossless (bit preserving) and lossy compression schemes.</para>
        <note>
          <para>The context where the usage of lossy compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for JPEG 2000 lossy compression are also beyond the scope of this standard.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support JPEG 2000 Compressed Pixel Data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream. The Pixel Data characteristics included in the JPEG 2000 bit stream shall be used to decode the compressed data stream.</para>
        <note>
          <para>These requirements are specified in terms of consistency with what is encapsulated, rather than in terms of the uncompressed pixel data from which the compressed data stream may have been derived.</para>
        </note>
        <para>When decompressing, should the characteristics explicitly specified in the compressed data stream be inconsistent with those specified in the DICOM Data Elements, those explicitly specified in the compressed data stream should be used to control the decompression. The DICOM data elements, if inconsistent, can be regarded as suggestions as to the form in which an uncompressed Data Set might be encoded.</para>
        <para>The JPEG 2000 bit stream specifies whether or not a reversible or irreversible multi-component (color) transformation, if any, has been applied. If no multi-component transformation has been applied, then the components shall correspond to those specified by the DICOM Attribute Photometric Interpretation (0028,0004). If the JPEG 2000 Part 1 reversible multi-component transformation has been applied then the DICOM Attribute Photometric Interpretation (0028,0004) shall be YBR_RCT. If the JPEG 2000 Part 1 irreversible multi-component transformation has been applied then the DICOM Attribute Photometric Interpretation (0028,0004) shall be YBR_ICT.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>For example, single component may be present, and the Photometric Interpretation (0028,0004) may be MONOCHROME2.</para>
            </listitem>
            <listitem>
              <para>Though it would be unusual, would not take advantage of correlation between the red, green and blue components, and would not achieve effective compression, a Photometric Interpretation of RGB could be specified as long as no multi-component transformation was specified by the JPEG 2000 bit stream.</para>
            </listitem>
            <listitem>
              <para>Despite the application of a multi-component color transformation and its reflection in the Photometric Interpretation attribute, the "color space" remains undefined. There is currently no means of conveying "standard color spaces" either by fixed values (such as sRGB) or by ICC profiles. Note in particular that the JP2 file header is not sent in the JPEG 2000 bitstream that is encapsulated in DICOM.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>The JPEG 2000 bitstream is capable of encoding both signed and unsigned pixel values, hence the value of Pixel Representation (0028,0103) may be either 0 or 1 depending on what has been encoded (as specified in the SIZ marker segment in the precision and sign of component parameter).</para>
        <para>The value of Planar Configuration (0028,0006) is irrelevant since the manner of encoding components is specified in the JPEG 2000 standard, hence it shall be set to 0.</para>
      </section>
      <section xml:id="sect_8.2.5" label="8.2.5" status="3">
        <title>MPEG2 MP@ML Image Compression</title>
        <para>DICOM provides a mechanism for supporting the use of MPEG2 MP@ML Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a Transfer Syntax that references the MPEG2 MP@ML Standard.</para>
        <note>
          <para>MPEG2 compression is inherently lossy. The context where the usage of lossy compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for MPEG2 MP@ML are also beyond the scope of this standard.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support MPEG2 MP@ML compressed pixel data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream, with some specific exceptions noted here. The Pixel Data characteristics included in the MPEG2 MP@ML bit stream shall be used to decode the compressed data stream.</para>
        <note>
          <para>These requirements are specified in terms of consistency with what is encapsulated, rather than in terms of the uncompressed pixel data from which the compressed data stream may have been derived.</para>
        </note>
        <para>When decompressing, should the characteristics explicitly specified in the compressed data stream be inconsistent with those specified in the DICOM Data Elements, those explicitly specified in the compressed data stream should be used to control the decompression. The DICOM data elements, if inconsistent, can be regarded as suggestions as to the form in which an uncompressed Data Set might be encoded.</para>
        <para>The MPEG2 MP@ML bit stream specifies whether or not a reversible or irreversible multi-component (color) transformation, if any, has been applied. If no multi-component transformation has been applied, then the components shall correspond to those specified by the DICOM Attribute Photometric Interpretation (0028,0004). MPEG2 MP@ML applies an irreversible multi-component transformation, so DICOM Attribute Photometric Interpretation (0028,0004) shall be YBR_PARTIAL_420 in the case of multi-component data, and MONOCHROME2 in the case of single component data (even though the MPEG2 bit stream itself is always encoded as three components, one luminance and two chrominance).</para>
        <note>
          <para>MPEG2 proposes some video formats. Each of the standards specified is used in a different market, including: ITU-R BT.470-2 System M for SD NTSC and ITU-R BT.470-2 System B/G for SD PAL/SECAM. A PAL based system should therefore be based on ITU-BT.470 System B for each of Color Primaries, Transfer Characteristic (gamma) and matrix coefficients and should take a value of 5 as defined on in ISO/IEC 13818-2: 1995 (E).</para>
        </note>
        <para>The value of Planar Configuration (0028,0006) is irrelevant since the manner of encoding components is specified in the MPEG2 MP@ML standard, hence it shall be set to 0.</para>
        <para>In summary:</para>
        <itemizedlist>
          <listitem>
            <para>Samples per Pixel (0028,0002) shall be 3</para>
          </listitem>
          <listitem>
            <para>Photometric Interpretation (0028,0004) shall be YBR_PARTIAL_420</para>
          </listitem>
          <listitem>
            <para>Bits Allocated (0028,0100) shall be 8</para>
          </listitem>
          <listitem>
            <para>Bits Stored (0028,0101) shall be 8</para>
          </listitem>
          <listitem>
            <para>High Bit (0028,0102) shall be 7</para>
          </listitem>
          <listitem>
            <para>Pixel Representation (0028,0103) shall be 0</para>
          </listitem>
          <listitem>
            <para>Planar Configuration (0028,0006) shall be 0</para>
          </listitem>
          <listitem>
            <para>Rows (0028,0010), Columns (0028,0011), Cine Rate (0018,0040) and Frame Time (0018,1063) or Frame Time Vector (0018,1065) shall be consistent with the limitations of MP@ML, as specified in <xref linkend="table_8-1" xrefstyle="select: label"/>.</para>
          </listitem>
        </itemizedlist>
        <table frame="box" rules="all" xml:id="table_8-1" label="8-1">
          <caption>MPEG2 MP@ML Image Transfer Syntax Rows and Columns Attributes</caption>
          <thead>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>Video Type</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Spatial resolution</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Frame Rate</para>
                <para>(see Note 4)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Frame Time</para>
                <para>(see Note 5)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Maximum Rows</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Maximum Columns</para>
              </td>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>525-line NTSC</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Full</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>30</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>33.33 ms</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>480</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>625-line PAL</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Full</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>25</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>40.0 ms</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>576</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>Although different combinations of values for Rows and Columns values are possible while respecting the maximum values listed above, it is recommended that the typical 4:3 ratio of image width to height be maintained in order to avoid image deformation by MPEG2 decoders. A common way to maintain the ratio of width to height is to pad the image with black areas on either side.</para>
            </listitem>
            <listitem>
              <para>"Half" definition of pictures (240x352 and 288x352 for NTSC and PAL, respectively) are always supported by decoders.</para>
            </listitem>
            <listitem>
              <para>MP@ML allows for various different display and pixel aspect ratios, including the use of square pixels, and the use of non-square pixels with display aspect ratios of 4:3 and 16:9. DICOM specifies no additional restrictions beyond what is provided for in MP@ML. All permutations allowed by MP@ML are valid and are require to be supported by all DICOM decoders.</para>
            </listitem>
            <listitem>
              <para>The actual frame rate for NTSC MPEG2 is approximately 29.97 frames/sec.</para>
            </listitem>
            <listitem>
              <para>The nominal Frame Time is supplied for the purpose of inclusion on the DICOM Cine Module Attributes, and should be calculated from the actual frame rate.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>One fragment shall contain the whole MPEG2 stream.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>If a video stream exceeds the maximum length of one fragment, it may be sent as multiple SOP Instances, but each SOP Instance will contain an independent and playable bit stream, and not depend on the encoded bit stream in other (previous) instances. The manner in which such separate instances are related is not specified in the standard, but mechanisms such as grouping into the same Series, and references to earlier instances using Referenced Image Sequence may be used.</para>
            </listitem>
            <listitem>
              <para>This constraint limits the length of the compressed bit stream to no longer than 2<superscript>32</superscript>-2 bytes.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>The Basic Offset Table shall be empty (present but zero length).</para>
        <note>
          <para>The Basic Offset Table is not used because MPEG2 contains its own mechanism for describing navigation of frames. To enable decoding of only a part of the sequence, MPEG2 manages a header in any group of pictures (GOP) containing a time_code - a 25-bit integer containing the following: drop_frame_flag, time_code_hours, time_code_minutes, marker_bit, time_code_seconds and time_code_pictures.</para>
        </note>
        <para>Any audio components present within the MPEG bit stream shall comply with the following restrictions:</para>
        <itemizedlist>
          <listitem>
            <para>CBR MPEG-1 LAYER III (MP3) Audio Standard</para>
          </listitem>
          <listitem>
            <para>up to 24 bits</para>
          </listitem>
          <listitem>
            <para>32 kHz, 44.1 kHz or 48 kHz for the main channel (the complementary channels can be sampled at the half rate, as defined in the Standard)</para>
          </listitem>
          <listitem>
            <para>one main mono or stereo channel, and optionally one or more complementary channel(s)</para>
          </listitem>
        </itemizedlist>
        <note>
          <para>Although MPEG describes each channel as including up to 5 signals (e.g., for surround effects), it is recommended to limit each of the two channels to 2 signals each one (stereo).</para>
        </note>
      </section>
      <section xml:id="sect_8.2.6" label="8.2.6" status="3">
        <title>MPEG2 MP@HL Image Compression</title>
        <para>MPEG2 Main Profile at High Level (MP@HL) corresponds to what is commonly known as HDTV ('High Definition Television'). DICOM provides a mechanism for supporting the use of MPEG2 MP@HL Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a Transfer Syntax that references the MPEG2 MP@HL Standard.</para>
        <note>
          <para>MPEG2 compression is inherently lossy. The context where the usage of lossy compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for MPEG2 MP@HL are also beyond the scope of this standard.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support MPEG2 MP@HL compressed pixel data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream, with some specific exceptions noted here. The Pixel Data characteristics included in the MPEG2 MP@HL bit stream shall be used to decode the compressed data stream.</para>
        <note>
          <para>These requirements are specified in terms of consistency with what is encapsulated, rather than in terms of the uncompressed pixel data from which the compressed data stream may have been derived.</para>
        </note>
        <para>When decompressing, should the characteristics explicitly specified in the compressed data stream be inconsistent with those specified in the DICOM Data Elements, those explicitly specified in the compressed data stream should be used to control the decompression. The DICOM data elements, if inconsistent, can be regarded as suggestions as to the form in which an uncompressed Data Set might be encoded.</para>
        <para>The requirements are:</para>
        <itemizedlist>
          <listitem>
            <para>Planar Configuration (0028,0006) shall be 0</para>
            <note>
              <para>The value of Planar Configuration (0028,0006) is irrelevant since the manner of encoding components is specified in the MPEG2 standard, hence it is set to 0.</para>
            </note>
          </listitem>
          <listitem>
            <para>Samples per Pixel (0028,0002) shall be 3</para>
          </listitem>
          <listitem>
            <para>Photometric Interpretation (0028,0004) shall be YBR_PARTIAL_420 or MONOCHROME2</para>
          </listitem>
          <listitem>
            <para>Bits Allocated (0028,0100) shall be 8</para>
          </listitem>
          <listitem>
            <para>Bits Stored (0028,0101) shall be 8</para>
          </listitem>
          <listitem>
            <para>High Bit (0028,0102) shall be 7</para>
          </listitem>
          <listitem>
            <para>Pixel Representation (0028,0103) shall be 0</para>
          </listitem>
          <listitem>
            <para>Rows (0028,0010) shall be either 720 or 1080</para>
          </listitem>
          <listitem>
            <para>Columns (0028,0011) shall be 1280 if Rows is 720, or shall be 1920 if Rows is 1080.</para>
          </listitem>
          <listitem>
            <para>The value of MPEG2 aspect_ratio_information shall be 0011 in the encapsulated MPEG2 data stream corresponding to a 'Display Aspect Ratio' (DAR) of 16:9.</para>
          </listitem>
          <listitem>
            <para>The DICOM attribute Pixel Aspect Ratio (0028,0034) shall be absent. This corresponds to a 'Sampling Aspect Ratio' (SAR) of 1:1.</para>
          </listitem>
          <listitem>
            <para>Cine Rate (0018,0040) and Frame Time (0018,1063) or Frame Time Vector (0018,1065) shall be consistent with the limitations of MP@HL, as specified in <xref linkend="table_8-2" xrefstyle="select: label"/>.</para>
          </listitem>
        </itemizedlist>
        <table frame="box" rules="all" xml:id="table_8-2" label="8-2">
          <caption>MPEG2 MP@HL Image Transfer Syntax Frame Rate Attributes</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Video Type</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Spatial resolution layer</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Frame Rate (see Note 2)</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Frame Time (see Note 3)</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>30 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>30</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>33.33 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>25 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>25</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>40.0 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>60 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>60</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>16.17 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>50 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>50</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>20.00 ms</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The requirements on rows and columns are to maximize interoperability between software environments and commonly available hardware MPEG2 encoder/decoder implementations. Should the source picture have a lower value, it should be re-formatted accordingly by scaling and/or pixel padding prior to MPEG2 encoding.</para>
            </listitem>
            <listitem>
              <para>The frame rate of the acquiring camera for '30 Hz HD' MPEG2 may be either 30 or 30/1.001 (approximately 29.97) frames/sec. Similarly, the frame rate in the case of 60 Hz may be either 60 or 60/1.001 (approximately 59.94) frames/sec This may lead to small inconsistencies between the video timebase and real time.</para>
            </listitem>
            <listitem>
              <para>The Frame Time (0018,1063) may be calculated from the frame rate of the acquiring camera. A frame time of 33.367 ms corresponds to 29.97 frames per second.</para>
            </listitem>
            <listitem>
              <para>The value of chroma_format for this profile and level is defined by MPEG as 4:2:0.</para>
            </listitem>
            <listitem>
              <para>Examples of screen resolutions supported by MPEG2 MP@HL are shown in Table 8-y. Frame rates of 50 Hz and 60 Hz (progressive) at the maximum resolution of 1080 by 1920 are not supported by MP@HL. Interlace at the maximum resolution is supported at a field rate of 50 Hz or 60 Hz, which corresponds to a frame rate of 25 Hz or 30 Hz respectively as described in Table 8-y.</para>
            </listitem>
            <listitem>
              <para>An MPEG2 MP@HL decoder is able to decode bit streams conforming to lower levels. These include the 1080 by 1440 bit streams of MP@H-14, and the Main Level bit streams used in the existing MPEG2 MP@ML transfer syntax in the Visible Light IOD.</para>
            </listitem>
            <listitem>
              <para>MP@H-14 is not supported by this transfer syntax.</para>
            </listitem>
            <listitem>
              <para>The restriction of DAR to 16:9 is required to ensure interoperability because of limitations in commonly available hardware chip set implementations for MPEG2 MP@HL.</para>
            </listitem>
          </orderedlist>
        </note>
        <table frame="box" rules="all" xml:id="table_8-3" label="8-3">
          <caption>Examples of MPEG2 MP@HL Screen Resolution</caption>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Rows</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Columns</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Frame rate</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Video Type</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Progressive or Interlace</emphasis>
              </para>
            </th>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1080</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1920</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1080</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1920</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>29.97, 30</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>30 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1080</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1920</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>I</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1080</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1920</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>29.97, 30</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>30 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>I</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>720</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1280</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>25 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>720</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1280</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>29.97, 30,</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>30 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>720</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1280</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>50</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>50 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>720</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1280</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>59.94, 60</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>60 Hz HD</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>P</para>
            </td>
          </tr>
        </table>
        <para>One fragment shall contain the whole MPEG2 bit stream.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>If a video stream exceeds the maximum length of one fragment (approximately 4 GB), it may be sent as multiple SOP Instances, but each SOP Instance will contain an independent and playable bit stream, and not depend on the encoded bit stream in other (previous) instances. The manner in which such separate instances are related is not specified in the standard, but mechanisms such as grouping into the same Series, and references to earlier instances using Referenced Image Sequence may be used.</para>
            </listitem>
            <listitem>
              <para>This constraint limits the length of the compressed bit stream to no longer than 2<superscript>32</superscript>-2 bytes.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>The Basic Offset Table in the Pixel Data (7FE0,0010) shall be empty (present but zero length).</para>
        <note>
          <para>The Basic Offset Table is not used because MPEG2 contains its own mechanism for describing navigation of frames. To enable decoding of only a part of the sequence, MPEG2 manages a header in any group of pictures (GOP) containing a time_code - a 25-bit integer containing the following: drop_frame_flag, time_code_hours, time_code_minutes, marker_bit, time_code_seconds and time_code_pictures.</para>
        </note>
        <para>Any audio components present within the MPEG2 MP@HL bit stream shall comply with the restrictions as for MPEG2 MP@ML as stated in <xref linkend="sect_8.2.5" xrefstyle="select: label"/>.</para>
      </section>
      <section xml:id="sect_8.2.7" label="8.2.7" status="3">
        <title>MPEG-4 AVC/H.264 High Profile / Level 4.1 Video Compression</title>
        <para>MPEG-4 AVC/H.264 High Profile / Level 4.1 corresponds to what is commonly known as HDTV ('High Definition Television'). DICOM provides a mechanism for supporting the use of MPEG-4 AVC/H.264 Image Compression through the Encapsulated Format (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>). <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines a Transfer Syntax that references the MPEG-4 AVC/H.264 Standard.</para>
        <note>
          <para>MPEG-4 AVC/H.264 compression @ High Profile compression is inherently lossy. The context where the usage of lossy compression of medical images is clinically acceptable is beyond the scope of the DICOM Standard. The policies associated with the selection of appropriate compression parameters (e.g., compression ratio) for MPEG-4 AVC/H.264 HiP@Level4.1 are also beyond the scope of this standard.</para>
        </note>
        <para>The use of the DICOM Encapsulated Format to support MPEG-4 AVC/H.264 compressed pixel data requires that the Data Elements that are related to the Pixel Data encoding (e.g., Photometric Interpretation, Samples per Pixel, Planar Configuration, Bits Allocated, Bits Stored, High Bit, Pixel Representation, Rows, Columns, etc.) shall contain values that are consistent with the characteristics of the compressed data stream, with some specific exceptions noted here. The Pixel Data characteristics included in the MPEG-4 AVC/H.264 bit stream shall be used to decode the compressed data stream.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>These requirements are specified in terms of consistency with what is encapsulated, rather than in terms of the uncompressed pixel data from which the compressed data stream may have been derived.</para>
            </listitem>
            <listitem>
              <para>When decompressing, should the characteristics explicitly specified in the compressed data stream be inconsistent with those specified in the DICOM Data Elements, those explicitly specified in the compressed data stream should be used to control the decompression. The DICOM data elements, if inconsistent, can be regarded as suggestions as to the form in which an uncompressed Data Set might be encoded.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>The requirements are:</para>
        <itemizedlist>
          <listitem>
            <para>Planar Configuration (0028,0006) shall be 0</para>
          </listitem>
          <listitem>
            <para>Samples per Pixel (0028,0002) shall be 3</para>
          </listitem>
          <listitem>
            <para>Photometric Interpretation (0028,0004) shall be YBR_PARTIAL_420</para>
          </listitem>
          <listitem>
            <para>Bits Allocated (0028,0100) shall be 8</para>
          </listitem>
          <listitem>
            <para>Bits Stored (0028,0101) shall be 8</para>
          </listitem>
          <listitem>
            <para>High Bit (0028,0102) shall be 7</para>
          </listitem>
          <listitem>
            <para>Pixel Representation (0028,0103) shall be 0</para>
          </listitem>
          <listitem>
            <para>The value of MPEG-4 AVC/H.264 sample aspect_ratio_idc shall be 1 in the encapsulated MPEG-4 AVC/H.264 bit stream if aspect_ratio_info_present_flag is 1.</para>
          </listitem>
          <listitem>
            <para>Pixel Aspect Ratio (0028,0034) shall be absent. This corresponds to a 'Sampling Aspect Ratio' (SAR) of 1:1.</para>
          </listitem>
          <listitem>
            <para>The possible values for Rows (0028,0010), Columns (0028,0011), Cine Rate (0018,0040), and Frame Time (0018,1063) or Frame Time Vector (0018,1065) depend on the used transfer syntax.</para>
            <itemizedlist>
              <listitem>
                <para>For MPEG-4 AVC/H.264 High Profile / Level 4.1 transfer syntax, the values for these data elements shall be compliant with the High Profile / Level 4.1 of the MPEG-4 AVC/H.264 standard (ISO/IEC 1449-10:2009) and restricted to a square pixel aspect ratio.</para>
              </listitem>
              <listitem>
                <para>For MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 transfer syntax, the values for these data elements shall be as specified in <xref linkend="table_8-4" xrefstyle="select: label"/>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <table frame="box" rules="all" xml:id="table_8-4" label="8-4">
          <caption>Values Permitted for MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Rows</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Columns</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Frame rate</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Video Type</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Progressive or Interlace</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1080</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1920</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>25</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>25 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>I</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1080</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1920</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>29.97</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>30 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>I</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1080</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1920</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1080</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1920</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>23.976</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1280</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>50</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>50 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1280</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>59.94,</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>60 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1280</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>720</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1280</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>23.976</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>24 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>P</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The value of Planar Configuration (0028,0006) is irrelevant since the manner of encoding components is specified in the MPEG-4 AVC/H.264 standard, hence it is set to 0.</para>
            </listitem>
            <listitem>
              <para>The limitation on rows and columns are to maximize interoperability between software environments and commonly available hardware MPEG-4 AVC/H.264 encoder/decoder implementations. Source pictures that have a lower value should be re-formatted by scaling and/or pixel padding prior to MPEG-4 AVC/H.264 encoding.</para>
            </listitem>
            <listitem>
              <para>The frame rate of the acquiring camera for '30 Hz HD' MPEG-4 AVC/H.264 may be either 30 or 30/1.001 (approximately 29.97) frames/sec. Similarly, the frame rate in the case of 60 Hz may be either 60 or 60/1.001 (approximately 59.94) frames/sec. This may lead to small inconsistencies between the video timebase and real time. The relationship between frame rate and frame time is shown in Table 8-5.</para>
            </listitem>
            <listitem>
              <para>The Frame Time (0018,1063) may be calculated from the frame rate of the acquiring camera. A frame rate of 29.97 frames per second corresponds to a frame time of 33.367 ms.</para>
            </listitem>
            <listitem>
              <para>The value of chroma_format for this profile and level is defined by MPEG as 4:2:0.</para>
            </listitem>
            <listitem>
              <para>Example screen resolutions supported by MPEG-4 AVC/H.264 High Profile / Level 4.1 can be taken from Table 8-4. Frame rates of 50 Hz and 60 Hz (progressive) at the maximum resolution of 1080 by 1920 are not supported by MPEG-4 AVC/H.264 High Profile / Level 4.1. Interlace at the maximum resolution is supported at a field rate of 50 Hz or 60 Hz, which corresponds to a frame rate of 25 Hz or 30 Hz respectively. Smaller resolutions may be used as long as they comply with the square pixel aspect ratio. An example is XGA resolution with an image resolution of 768 by 1024 pixels. For smaller resolutions there are higher frame rates possible. For example it may be up to 80 Hz for XGA.</para>
            </listitem>
            <listitem>
              <para>The display aspect ratio is defined implicitly by the pixel resolution of the video picture. Only square pixel aspect ratio is allowed. MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 will only support resolutions that result in a 16:9 display aspect ratio</para>
            </listitem>
            <listitem>
              <para>The permitted screen resolutions for the MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 are listed in Table 8-4. Only HD resolutions and no progressive frame rates for 25 or 29.97 frames per seconds are supported. Frame rates of 50 Hz and 60 Hz (progressive) at the maximum resolution of 1080 by 1920 are not supported.</para>
            </listitem>
          </orderedlist>
        </note>
        <table frame="box" rules="all" xml:id="table_8-5" label="8-5">
          <caption>MPEG-4 AVC/H.264 High Profile / Level 4.1 Image Transfer Syntax Frame Rate Attributes</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Video Type</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Spatial resolution layer</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Frame Rate (see Note 2)</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Frame Time (see Note 3)</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>30 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>30</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>33.33 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>25 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>25</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>40.0 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>60 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>60</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>16.17 ms</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>50 Hz HD</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>Single level, Enhancement</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>50</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>20.00 ms</para>
              </td>
            </tr>
          </tbody>
        </table>
        <para>One fragment shall contain the whole MPEG-4 AVC/H.264 bit stream.</para>
        <note>
          <para>If a video stream exceeds the maximum length of one fragment (approximately 4 GB), it may be sent as multiple SOP Instances, but each SOP Instance will contain an independent and playable bit stream, and not depend on the encoded bit stream in other (previous) instances. The manner in which such separate instances are related is not specified in the standard, but mechanisms such as grouping into the same Series, and references to earlier instances using Referenced Image Sequence may be used.</para>
        </note>
        <para>The PTS/DTS of the transport stream shall be used in the MPEG coding. Audio components shall be interleaved in either LPCM or AC-3 audio format and shall comply with the following restrictions:</para>
        <itemizedlist>
          <listitem>
            <para>LPCM</para>
            <itemizedlist>
              <listitem>
                <para>Maximum bit rate: 4.608 Mbps</para>
              </listitem>
              <listitem>
                <para>Sampling frequency: 48, 96 kHz</para>
              </listitem>
              <listitem>
                <para>Bits per sample: 16, 20 or 24 bits</para>
              </listitem>
              <listitem>
                <para>Number of channels: 2 channels</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>AC-3</para>
            <itemizedlist>
              <listitem>
                <para>Maximum bit rate: 640kbps</para>
              </listitem>
              <listitem>
                <para>Sampling frequency: 48kHz</para>
              </listitem>
              <listitem>
                <para>Bits per sample: 16 bits</para>
              </listitem>
              <listitem>
                <para>Number of channels: 2 or 5.1 channels</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <note>
          <para>AC-3 is standardized in <xref linkend="biblio_ETSI_TS_102_366"/></para>
        </note>
      </section>
    </section>
    <section xml:id="sect_8.3" label="8.3" status="2">
      <title>Waveform Data and Related Data Elements</title>
      <para>The DICOM protocol provides for the exchange of encoded time-based signals, or waveforms, encoded in the Waveform Data Element (5400,1010).</para>
      <note>
        <para>Per <xref linkend="sect_7.6" xrefstyle="select: label"/>, an IOD supporting multiple sets of Waveform Data will encapsulate Data Element (5400,1010) within a Sequence.</para>
      </note>
      <para>Encoded Waveform Data of various bit depths is accommodated through the Waveform Bits Allocated (5400,1004) Data Element. This element defines the size of each waveform data sample within the Waveform Data (5400,1010). Allowed values are 8 and 16 bits.</para>
      <para>The Value Representation of the Waveform Data (5400,1010) shall be OW; OB shall be used in cases where Waveform Bits Allocated has a value of 8, but only with Transfer Syntaxes where the Value Representation is explicitly conveyed.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>Under the Default Transfer Syntax, OB and OW VRs have the identical byte transfer order.</para>
          </listitem>
          <listitem>
            <para>Conversion of a SOP Instance from the Default Transfer Syntax to an Explicit VR Transfer Syntax (uncompressed) requires the interpretation of the Waveform Bits Allocated (5400,1004) Data Element, to determine the proper VR of the Waveform Data.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>The following data elements related to Waveform Data shall be encoded with the same VR as Waveform Data: Channel Minimum Value (5400,0110), Channel Maximum Value (5400,0112) and Waveform Padding Value (5400,100A).</para>
    </section>
    <section xml:id="sect_8.4" label="8.4" status="2">
      <title>Pixel Data Provider Service</title>
      <para>Specific Transfer Syntaxes allow for the pixel data of the message to be replaced with a reference to a pixel data provider service. The pixel data provider service that is referenced supplies the pixel data using a network protocol that is defined outside DICOM.</para>
      <section xml:id="sect_8.4.1" label="8.4.1" status="3">
        <title>JPIP Referenced Pixel Data</title>
        <para>DICOM provides a mechanism for supporting the use of JPEG 2000 Interactive Protocol through the inclusion of a URL reference to a pixel data provider service. <xref linkend="chapter_A" xrefstyle="template: Annex %n"/> defines two Transfer Syntaxes that utilize URL references to a JPIP pixel data provider service.</para>
        <para>The use of the these Transfer Syntaxes requires that the Pixel Data Provider URL specify a URL that will represent the JPIP request including the specific target information. Additional parameters required by the application may be appended to the URL when accessing the pixel data provider.</para>
        <note>
          <para>For example, a JPIP request for a 200 by 200 pixel rendition of the entire image can be constructed from the Pixel Data Provider URL as follows:</para>
        </note>
        <para>Pixel Data Provider URL (0028,7FE0) = http://server.xxx/jpipserver.cgi?target=imgxyz.jp2</para>
        <para>URL Generated by the application = http://server.xxx/jpipserver.cgi?target=imgxyz.jp2&amp;fsiz=200,200</para>
        <para>The JPIP client shall only request a JPEG 2000 bit stream.</para>
        <para>The JPIP server shall return a Content-type of image/jp2, image/jpp-stream or image/jpt-stream, all of which shall be supported by the JPIP client.</para>
        <para>The Number of Frames (0028,0008) attribute, if present in the Data Set, identifies the number of frames available for this image. Each frame is accessible as a separate JPIP code stream. Code streams referenced in the URL Target shall be sequentially numbered starting with stream 1.</para>
        <note>
          <para>For example, a JPIP request for a 200 by 200 pixel rendition of frame 17 of a multi-frame image can be constructed from Pixel Data Provider URL as follows:</para>
          <para>Pixel Data Provider URL (0028,7FE0) = http://server.xxx/multiframeimage.jp2</para>
          <para>URL Generated by the application = http://server.xxx/multiframeimage.jp2?fsiz=200,200&amp;stream=17</para>
          <para>A valid stream query parameter value is always less than or equal to the value in the Number of Frames (0028,0008).</para>
        </note>
        <para>The syntax of the Pixel Data Provider URL (0028,7FE0) is defined in ISO/IEC 15444-9 Annex C (Client Request). That standard respects the URI recommendations IETF RFC2396. The transport protocol shall be HTTP or HTTPS.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>According to ISO/IEC 15444-9, "Each JPIP request is directed to a specific representation of a specific original named resource or a specific portion of that resource. That resource may be a physically stored file or object, or may be something that is created virtually by the server upon request."</para>
              <para>"The Target request field specifies the original named resource to which the request is directed. It is specified using a PATH, which could be a simple string or a URI. If the Target field is not specified and the request is carried over HTTP, then the JPIP request shall be directed to the resource specified through the path component of the JPIP request URL."</para>
            </listitem>
            <listitem>
              <para>Transport over UDP or other protocols is not supported.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
    </section>
  </chapter>
  <chapter xml:id="chapter_9" label="9" status="1">
    <title>Unique Identifiers (UIDs)</title>
    <para>Unique Identifiers (UIDs) provide the capability to uniquely identify a wide variety of items. They guarantee uniqueness across multiple countries, sites, vendors and equipment. Different classes of objects, instance of objects and information entities can be distinguished from one another across the DICOM universe of discourse irrespective of any semantic context.</para>
    <note>
      <para>For example the same UID value cannot be used to identify both a study instance (Study Instance UID) and a series instance (Series Instance UID) within that study or a different study. Implementers also need to be cautioned against building new UID values by derivation (for example by adding a suffix) from a UID assigned by another implementation.</para>
    </note>
    <para>The UID identification scheme is based on the OSI Object Identification (numeric form) as defined by the ISO 8824 standard. All Unique Identifiers, used within the context of the DICOM Standard, are registered values as defined by ISO 9834-1 to ensure global uniqueness. The uses of such UIDs are defined in the various Parts of the DICOM Standard.</para>
    <para>Each UID is composed of two parts, an &lt;org root&gt; and a &lt;suffix&gt;:</para>
    <itemizedlist mark="none">
      <listitem>
        <para>UID = &lt;org root&gt;.&lt;suffix&gt;</para>
      </listitem>
    </itemizedlist>
    <para>The &lt;org root&gt; portion of the UID uniquely identifies an organization, (i.e., manufacturer, research organization, NEMA, etc.), and is composed of a number of numeric components as defined by ISO 8824. The &lt;suffix&gt; portion of the UID is also composed of a number of numeric components, and shall be unique within the scope of the &lt;org root&gt;. This implies that the organization identified in the &lt;org root&gt; is responsible for guaranteeing &lt;suffix&gt; uniqueness by providing registration policies. These policies shall guarantee &lt;suffix&gt; uniqueness for all UIDs created by that organization. Unlike the &lt;org root&gt;, which may be common for UIDs in an organization, the &lt;suffix&gt; shall take different unique values between different UIDs that identify different objects.</para>
    <para>The &lt;org root&gt; "1.2.840.10008" is reserved for DICOM defined items (such as DICOM Transfer Syntaxes) and shall not be used for privately defined items (such as an Image Instance).</para>
    <para>Although a specific implementation may choose some particular structure for its generated UIDs, it should never assume that a UID carries any semantics. Thus, a UID shall not be "parsed" to find a particular value or component. Component definition (for the suffix) is implementation specific and may change as long as uniqueness is maintained. Parsing UIDs may jeopardize the ability to inter-operate as implementations evolve.</para>
    <para>Example of UID structure is given in <xref linkend="chapter_C" xrefstyle="template: Annex %n"/>.</para>
    <section xml:id="sect_9.1" label="9.1" status="2">
      <title>UID Encoding Rules</title>
      <para>The DICOM UID encoding rules are defined as follows:</para>
      <itemizedlist>
        <listitem>
          <para>Each component of a UID is a number and shall consist of one or more digits. The first digit of each component shall not be zero unless the component is a single digit.</para>
          <note>
            <para>Registration authorities may distribute components with non-significant leading zeroes. The leading zeroes should be ignored when being encoded (i.e.,"00029" would be encoded "29").</para>
          </note>
        </listitem>
        <listitem>
          <para>Each component numeric value shall be encoded using the characters 0-9 of the Basic G0 Set of the International Reference Version of ISO 646:1990 (the DICOM default character repertoire).</para>
        </listitem>
        <listitem>
          <para>Components shall be separated by the character "." (2EH).</para>
        </listitem>
        <listitem>
          <para>If ending on an odd byte boundary, except when used for network negotiation (see <olink targetdoc="PS3.8" targetptr="PS3.8" xrefstyle="select: labelnumber"/>), one trailing NULL (00H), as a padding character, shall follow the last component in order to align the UID on an even byte boundary.</para>
        </listitem>
        <listitem>
          <para>UIDs, shall not exceed 64 total characters, including the digits of each component, separators between components, and the NULL (00H) padding character if needed.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="sect_9.2" label="9.2" status="2">
      <title>Unique Identifier Registration</title>
      <para>Each UID used in DICOM shall be defined and registered in one of the following two ways:</para>
      <itemizedlist>
        <listitem>
          <para>DICOM defined and registered UIDs</para>
        </listitem>
        <listitem>
          <para>Privately defined and registered UIDs</para>
        </listitem>
      </itemizedlist>
      <para>Both UIDs use the same encoding rules as defined in <xref linkend="sect_9.1" xrefstyle="select: label"/>. See <xref linkend="chapter_C" xrefstyle="template: Annex %n"/> for a more detailed description of the UID registration process.</para>
      <section xml:id="sect_9.2.1" label="9.2.1" status="3">
        <title>DICOM Defined and Registered Unique Identifiers</title>
        <para>A limited number of registered DICOM Defined UIDs are used within the DICOM Standard. The organization responsible for the definition and registration of such DICOM UIDs is NEMA.</para>
        <para>The registration process will rely on the publication of the DICOM Registered UIDs in <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>.</para>
      </section>
      <section xml:id="sect_9.2.2" label="9.2.2" status="3">
        <title>Privately Defined Unique Identifiers</title>
        <para>Privately Defined UIDs are commonly used within DICOM. However, such UIDs will not be registered by NEMA. Organizations that define private UIDs are responsible for properly registering their UIDs (at least obtain a registered &lt;Org Root&gt;) as defined for OSI Object Identifiers (ISO 9834-1). The private organization defining the UID shall accept the responsibility of ensuring its uniqueness.</para>
      </section>
    </section>
  </chapter>
  <chapter xml:id="chapter_10" label="10" status="1">
    <title>Transfer Syntax</title>
    <para>A Transfer Syntax is a set of encoding rules able to unambiguously represent one or more Abstract Syntaxes. In particular, it allows communicating Application Entities to negotiate common encoding techniques they both support (e.g., byte ordering, compression, etc.). A Transfer Syntax is an attribute of a Presentation Context, one or more of which are negotiated at the establishment of an Association between DICOM Application Entities. This Association negotiation is specified in <olink targetdoc="PS3.8" targetptr="PS3.8" xrefstyle="select: labelnumber"/> and discussed in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>.</para>
    <para>The selection of a Transfer Syntax applies to the encoding rules for the Data Set portion of a DICOM Message only. All DICOM Standard and Private Transfer Syntaxes implicitly specify a fixed encoding for the Command Set portion of a DICOM Message as Specified in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>.</para>
    <para>This part of the DICOM Standard defines standard DICOM Transfer Syntaxes and assigns a unique Transfer Syntax Name to each one. The standard DICOM Transfer Syntaxes are specified in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>. The DICOM notation for Transfer Syntax names is the notation used for UIDs (see <xref linkend="chapter_9" xrefstyle="template: Section %n"/>).</para>
    <para>The organization responsible for the definition and registration of DICOM Transfer Syntaxes is NEMA. NEMA guarantees uniqueness for all DICOM Transfer Syntax Names.</para>
    <para>Privately defined Transfer Syntax Names may also be used; however, they will not be registered by NEMA. Organizations that define private Transfer Syntax Names shall follow the registration process defined in <xref linkend="sect_9.2" xrefstyle="select: label"/>.</para>
    <section xml:id="sect_10.1" label="10.1" status="2">
      <title>DICOM Default Transfer Syntax</title>
      <para>DICOM defines a default Transfer Syntax, the DICOM Implicit VR Little Endian Transfer Syntax (UID = "1.2.840.10008.1.2 "), which shall be supported by every conformant DICOM Implementation. This implies that:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>If an Application Entity issues an A-ASSOCIATE request, it shall offer the DICOM Implicit VR Little Endian Transfer Syntax in at least one of the Presentation Contexts associated with each offered Abstract Syntax.</para>
          <note>
            <para>Offering Abstract Syntax (AS1) in two Presentation Contexts with Transfer Syntaxes (TS1) and (TS2) is not valid, but offering AS1-TS1, AS1-TS2 and AS1-TSD is valid because the DICOM Default Little Endian Transfer Syntax (TSD) is present in at least one of the Presentation Contexts that are based on Abstract Syntax (AS1).</para>
          </note>
        </listitem>
        <listitem>
          <para>If an Application Entity receives an A-ASSOCIATE indication corresponding to a request that follows the requirements specified in <xref linkend="sect_10.1" xrefstyle="select: label"/> (a), every Presentation Context related to a given Abstract Syntax cannot be rejected in an A-ASSOCIATE response for the reason that none of the Transfer Syntaxes are supported.</para>
        </listitem>
      </orderedlist>
      <para>Both of these requirements, (a) and (b), are waived when the Application Entity sending the pixel data has only access to the pixel data in lossy compressed form and a Transfer Syntax that uses a pixel data reference is not offered.</para>
      <para>Requirement (b) to accept the default Transfer Syntax is waived if a Transfer Syntax that uses a pixel data reference is offered.</para>
      <note>
        <para>In other words, every sending AE is required to be able to convert any Data Set it is going to transmit into the default Transfer Syntax, regardless of the form in which it originally received or stored the Data Set, except in the single case of when it received it in a lossy compressed form. In that exceptional case, the sending AE is permitted to propose only the lossy compressed Transfer Syntax appropriate to the lossy form that was received.</para>
        <para>In particular, this waiver does not apply to Data Sets received in a lossless compressed form, which means that any AE receiving a Data Set in a lossless compressed Transfer Syntax that needs to re-send the Data Set is required to be able to decompress it in order to support (at least) the default Transfer Syntax.</para>
      </note>
    </section>
    <section xml:id="sect_10.2" label="10.2" status="2">
      <title>Transfer Syntax for a DICOM Default of Lossless JPEG Compression</title>
      <para>DICOM defines a default for lossless JPEG Image Compression, which uses a subset of coding Process 14 with a first-order prediction (Selection Value 1). It is identified by Transfer Syntax UID = "1.2.840.10008.1.2.4.70" and shall be supported by every DICOM implementation that chooses to support one or more of the lossless JPEG compression processes. This implies that:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>If an Application Entity issues an A-ASSOCIATE request where any offered Abstract Syntaxes is associated in one or more Presentation Context with a JPEG lossless compression Transfer Syntax, at least one of the Presentation Contexts that include this Abstract Syntax, shall include the DICOM Default Lossless JPEG Compression Transfer Syntax and the DICOM Default Transfer Syntax (uncompressed).</para>
          <note>
            <para>Offering Abstract Syntax (AS1) in two Presentation Contexts with Transfer Syntaxes JPEG lossless (JL1) and (JL2) is not valid, but offering AS1-JL1, AS1-JL2, AS1-TSD, and AS1-JLD is valid because the DICOM Default JPEG Lossless Transfer Syntax (JLD) and the DICOM Default Transfer Syntax (TSD) are present in at least one of the Presentation Contexts that are based on Abstract Syntax (AS1).</para>
          </note>
        </listitem>
        <listitem>
          <para>If an Application Entity that supports one or more lossless JPEG Transfer Syntax receives an A-ASSOCIATE indication corresponding to a request that follows the requirements specified in <xref linkend="sect_10.2" xrefstyle="select: label"/> (a), every Presentation Context related to a given Abstract Syntax cannot be rejected in an A-ASSOCIATE response for the reason that the DICOM Default lossless JPEG Transfer Syntax is not supported.</para>
        </listitem>
      </orderedlist>
    </section>
    <section xml:id="sect_10.3" label="10.3" status="2">
      <title>Transfer Syntaxes for a DICOM Default of Lossy JPEG Compression</title>
      <para>DICOM defines defaults for Lossy JPEG Image Compression, one for 8-bit images and the other for 12-bit images. JPEG coding Process 1 (identified by Transfer Syntax UID = "1.2.840.10008.1.2.4.50 ") is used for 8-bit images. JPEG coding Process 4 (identified by Transfer Syntax UID = "1.2.840.10008.1.2.4.51 ") is used for 12-bit images. This implies that:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>If an Application Entity issues an A-ASSOCIATE request where any offered Abstract Syntaxes is associated in one or more Presentation Context(s) with a JPEG lossy compression Transfer Syntax, at least one of the Presentation Contexts that include this Abstract Syntax, shall include the appropriate DICOM Default Lossy JPEG Compression Transfer Syntax.</para>
          <note>
            <para>Offering Abstract Syntax (AS1) in two Presentation Contexts with Transfer Syntaxes JPEG lossy (JL1) and (JL2) is not valid, but offering AS1-JL1, AS1-JL2 and AS1-JLD is valid because the DICOM Default JPEG Lossy Transfer Syntax (JLD) is present in at least one of the Presentation Contexts that are based on Abstract Syntax (AS1).2. The DICOM Default Transfer Syntax (uncompressed) may be offered if the sender has access to the original pixel data in an uncompressed or lossless compressed form.</para>
          </note>
        </listitem>
        <listitem>
          <para>If an Application Entity that supports one or more Lossy JPEG Transfer Syntaxes receives an A-ASSOCIATE indication corresponding to a request that follows the requirements specified in <xref linkend="sect_10.3" xrefstyle="select: label"/> (a), every Presentation Context related to a given Abstract Syntax cannot be rejected in an A-ASSOCIATE response for the reason that the DICOM Default lossy JPEG Transfer Syntax is not supported.</para>
        </listitem>
      </orderedlist>
    </section>
    <section xml:id="sect_10.4" label="10.4" status="2">
      <title>Transfer Syntax For DICOM RLE Compression</title>
      <para>DICOM defines the RLE Compression (see <xref linkend="chapter_G" xrefstyle="template: Annex %n"/>). This implies that:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>If an Application Entity issues an A-ASSOCIATE request where any offered Abstract Syntaxes is associated in one or more Presentation Contexts(s) with RLE compression Transfer Syntax, at least one of the Presentation Contexts that include this Abstract Syntax, shall include the DICOM Default Transfer Syntax (uncompressed).</para>
        </listitem>
      </orderedlist>
    </section>
    <section xml:id="sect_10.5" label="10.5" status="2">
      <title>Transfer Syntax For A DICOM Default of Lossless and Lossy (Near-lossless) JPEG-LS Compression</title>
      <para>One Transfer Syntax is specified for JPEG-LS Lossless Image Compression, and one Transfer Syntax is specified for JPEG-LS Lossy (Near-Lossless) Image Compression. The JPEG-LS Lossless Transfer Syntax shall be supported as a baseline if the JPEG-LS Lossy (Near-Lossless) Transfer Syntax is supported.</para>
    </section>
    <section xml:id="sect_10.6" label="10.6" status="2">
      <title>Transfer Syntax For JPEG 2000 Compression</title>
      <para>One Transfer Syntax is specified for JPEG 2000 Image Compression (Lossless Only), and one Transfer Syntax is specified for JPEG 2000 Image Compression. Either of these may be negotiated separately and there is no default or baseline specified (other than described in <xref linkend="sect_10.1" xrefstyle="select: label"/>).</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>All JPEG 2000 codecs are required by ISO/IEC 15444-1 to support both reversible and irreversible wavelet and multi-component transformations. The reason for specifying two separate Transfer Syntaxes in DICOM is to allow an application to request the transfer of images in a lossless manner when possible. The JPEG 2000 Image Compression Transfer Syntax allows for either lossless or lossy compression to be used at the sender's discretion.</para>
          </listitem>
          <listitem>
            <para>No baseline using other compression schemes is required.</para>
          </listitem>
          <listitem>
            <para>When the pixel data has been received in the JPEG 2000 Image Compression Transfer Syntax, since it may have been lossy compressed, the waiver of the requirement in <xref linkend="sect_10.1" xrefstyle="select: label"/> to support the DICOM default Transfer Syntax still applies.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>In addition, one Transfer Syntax is specified for JPEG 2000 Multi-component Image Compression (Lossless Only) with Multi-Component Transformation Extensions, and one Transfer Syntax is specified for JPEG 2000 Multi-component Image Compression with Multi-Component Transformation Extensions. Either of these may be negotiated separately and there is no default or baseline specified (other than described in <xref linkend="sect_10.1" xrefstyle="select: label"/>).</para>
      <note>
        <para>JPEG 2000 codecs that support the Part 2 JPEG 2000 Multi-Component Transformation Extensions are required to support all the multi-component extensions as described in Annex J of ISO/IEC 15444-2. This includes both array based transformations and the 9-7 and 5-3 wavelet transformations that are also used in Part 1 of JPEG 2000. This also includes component reordering, component collections and application of more than one multi-component transformation in succession.</para>
      </note>
    </section>
    <section xml:id="sect_10.7" label="10.7" status="2">
      <title>Transfer Syntax For MPEG2 MP@ML Image Compression</title>
      <para>One Transfer Syntax is specified for MPEG2 MP@ML Image Compression.</para>
    </section>
    <section xml:id="sect_10.8" label="10.8" status="2">
      <title>Transfer Syntax For JPIP Referenced Pixel Data</title>
      <para>Two Transfer Syntaxes are specified for JPIP Referenced Pixel Data.</para>
      <para>The persistence of the references in objects transferred with one of these transfer syntaxes is not defined. That is, applications should make no assumptions as to the timeframe when the referenced pixel data will be available. Due to the indeterminate time that the URL remains valid, it may be inappropriate to cache the URL. Because the pixel data may not have been retrieved in its entirety or full fidelity, it may be inappropriate to use this transfer syntax for the purpose of permanent storage or to reference such instances in Storage Commitment and Performed Procedure Step service classes.</para>
      <para>These transfer syntaxes shall not be used for media storage defined by <olink targetdoc="PS3.10" targetptr="PS3.10" xrefstyle="select: labelnumber"/>.</para>
    </section>
    <section xml:id="sect_10.9" label="10.9" status="2">
      <title>Transfer Syntax For MPEG2 MP@HL Image Compression</title>
      <para>One Transfer Syntax is specified for MPEG2 MP@HL Image Compression.</para>
    </section>
    <section xml:id="sect_10.10" label="10.10" status="2">
      <title>Transfer Syntax For MPEG-4 AVC/H.264 HIP@Level 4.1 Image Compression</title>
      <para>One Transfer Syntax is specified for MPEG-4 AVC/H.264 High Profile / Level 4.1 Image Compression and one Transfer Syntax is specified for MPEG-4 AVC/H.264 BD-compliant High Profile / Level 4.1. Transfer Syntax MPEG-4 AVC/H.264 High Profile / Level 4.1 corresponds to the ITU-T H.264 standard's profile and level specifications. Transfer Syntax MPEG-4 AVC/H.264 BD-compliant High Profile / Level 4.1 corresponds to a restricted set of spatial and temporal resolutions described Table 8-4. This Transfer Syntax limits the ITU-T H.264 High Profile / Level 4.1 to HD video formats that are supported by Blu-ray™ (BDRWP 2.B).</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_A" label="A" status="1">
    <title>Transfer Syntax Specifications (Normative)</title>
    <section xml:id="sect_A.1" label="A.1" status="2">
      <title>DICOM Implicit VR Little Endian Transfer Syntax</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set. This implies that when a DICOM Data Set is being encoded with the DICOM Implicit VR Little Endian Transfer Syntax the following requirements shall be met:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>The Data Elements contained in the Data Set structure shall be encoded with Implicit VR (without a VR Field) as specified in <xref linkend="sect_7.1.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the overall Data Set structure (Data Element Tags, Value Length, and Value) shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the Data Elements of the Data Set shall be as follows according to their Value Representations:</para>
          <itemizedlist>
            <listitem>
              <para>For all Value Representations defined in this part, except for the Value Representations OB and OW, the encoding shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>For the Value Representations OB and OW, the encoding shall meet the following specification depending on the Data Element Tag:</para>
            </listitem>
            <listitem>
              <para>Data Element (7FE0,0010) Pixel Data has the Value Representation OW and shall be encoded in Little Endian.</para>
            </listitem>
            <listitem>
              <para>Data Element (60xx,3000) Overlay Data has the Value Representation OW and shall be encoded in Little Endian.</para>
            </listitem>
            <listitem>
              <para>Data Element (5400,1010) Waveform Data shall have Value Representation OW and shall be encoded in Little Endian.</para>
            </listitem>
            <listitem>
              <para>Data Elements (0028,1201), (0028,1202), (0028,1203), (0028,1204) Red, Green, Blue, Alpha Palette Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
              <note>
                <para>Previous versions of the Standard either did not specify the encoding of Data Elements (0028,1201), (0028,1202), (0028,1203) in this Part, but specified a VR of US or SS in PS3.6-1993, or specified OW in this Part but a VR of US, SS or OW in PS3.6-1996. The actual encoding of the values and their byte order would be identical in each case.</para>
              </note>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>Data Elements (0028,1101), (0028,1102),(0028,1103) Red, Green, Blue Palette Lookup Table Descriptor have the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
            </listitem>
            <listitem>
              <para>Data Elements (0028,1221),(0028,1222),(0028,1223) Segmented Red, Green, Blue Palette Color Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
            </listitem>
            <listitem>
              <para>Data Element (0028,3006) LUT Data has the Value Representation US or OW and shall be encoded in Little Endian.</para>
              <note>
                <para>Previous versions of the Standard did not specify the encoding of these Data Elements in this Part, but specified a VR of US or SS in PS3.6-1998. A VR of OW has been added to support explicit VR transfer syntaxes. Moreover this element is always unsigned, therefore the VR of SS has been removed. The actual encoding of the values and their byte order would be identical in each case.</para>
              </note>
            </listitem>
          </itemizedlist>
          <itemizedlist>
            <listitem>
              <para>Data Element (0028,3002) LUT Descriptor has the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
            </listitem>
            <listitem>
              <para>Data Element (0028,1408) Blending Lookup Table Data has the Value Representation OW and shall be encoded in Little Endian.</para>
            </listitem>
            <listitem>
              <para>Data Elements (0066,0025) Vertex Point Index List, (0066,0024) Edge Point Index List, (0066,0023) Triangle Point Index List and (0066,0029) Primitive Point Index List have the Value Representation OW and shall be encoded in Little Endian and are always interpreted as unsigned.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
      <note>
        <para>Encoding of Curve Data and Audio Sample Data was previously defined but has been retired. See PS3.5-2004.</para>
      </note>
      <para>This DICOM Implicit VR Little Endian Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2".</para>
    </section>
    <section xml:id="sect_A.2" label="A.2" status="2">
      <title>DICOM Little Endian Transfer Syntax (Explicit VR)</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set. This implies that when a DICOM Data Set is being encoded with the DICOM Little Endian Transfer Syntax the following requirements shall be met:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>The Data Elements contained in the Data Set structure shall be encoded with Explicit VR (with a VR Field) as specified in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the overall Data Set structure (Data Element Tags, Value Length, and Value) shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the Data Elements of the Data Set shall be as follows according to their Value Representations:</para>
          <itemizedlist>
            <listitem>
              <para>For all Value Representations defined in this part, except for the Value Representations OB and OW, the encoding shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>For the Value Representations OB and OW, the encoding shall meet the following specification depending on the Data Element Tag:</para>
              <itemizedlist>
                <listitem>
                  <para>Data Element (7FE0,0010) Pixel Data</para>
                  <itemizedlist>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value greater than 8 shall have Value Representation OW and shall be encoded in Little Endian;</para>
                    </listitem>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value less than or equal to 8 shall have the Value Representation OB or OW and shall be encoded in Little Endian.</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (60xx,3000) Overlay Data</para>
                  <itemizedlist>
                    <listitem>
                      <para>shall have the Value Representation OB or OW and shall be encoded in Little Endian.</para>
                      <note>
                        <para>Previous versions of the Standard specified that the choice of OB or OW VR was based on whether or not Overlay Bits Allocated (60xx,0100) was greater than, or less than or equal to, 8. However, since only one bit plane can be encoded in each Overlay Data Element (60xx,3000), no value of Overlay Bits Allocated other than 1 makes sense. Such a restriction is now present in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
                      </note>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (5400,1010) Waveform Data has the Value Representation specified in its Explicit VR Field. The component points shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1201), (0028,1202), (0028,1203), (0028,1204) Red, Green, Blue, Alpha Palette Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
                  <note>
                    <para>Previous versions of the Standard either did not specify the encoding of Data Elements (0028,1201), (0028,1202), (0028,1203) in this Part, but specified a VR of US or SS in PS3.6-1993, or specified OW in this Part but a VR of US, SS or OW in PS3.6-1996. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1101), (0028,1102),(0028,1103) Red, Green, Blue Palette Lookup Table Descriptor have the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1221), (0028,1222), (0028,1223) Segmented Red, Green, Blue Palette Color Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3006) LUT Data has the Value Representation US or OW and shall be encoded in Little Endian.</para>
                  <note>
                    <para>Previous versions of the Standard did not specify the encoding of these Data Elements in this Part, but specified a VR of US or SS in PS3.6-1998. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits. Hence a VR of OW has been added. Moreover this element is always unsigned, therefore the VR of SS has been removed. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3002) LUT Descriptor has the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,1408) Blending Lookup Table Data has the Value Representation OW and shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0066,0025) Vertex Point Index List, (0066,0024) Edge Point Index List, (0066,0023) Triangle Point Index List and (0066,0029) Primitive Point Index List have the Value Representation OW and shall be encoded in Little Endian and are always interpreted as unsigned.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>For Data encoded with the Value Representation OB, the Data encoding is unaffected by Little Endian or Big Endian byte ordering.</para>
          </listitem>
          <listitem>
            <para>Encoding of Curve Data and Audio Sample Data was previously defined but has been retired. See PS3.5-2004.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>This DICOM Explicit VR Little Endian Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2.1".</para>
    </section>
    <section xml:id="sect_A.3" label="A.3" status="2">
      <title>DICOM Big Endian Transfer Syntax (Explicit VR)</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set. This implies that when a DICOM Data Set is being encoded with the DICOM Big Endian Transfer Syntax the following requirements shall be met:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>The Data Elements contained in the Data Set structure shall be encoded with Explicit VR (with a VR Field) as specified in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the overall Data Set structure (Data Element Tags, Value Length, and Value) shall be in Big Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the Data Elements of the Data Set shall be as follows according to their Value Representations:</para>
          <itemizedlist>
            <listitem>
              <para>For all Value Representations defined in this part, except for the Value Representations OB and OW, the encoding shall be in Big Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>For the Value Representations OB and OW, the encoding shall meet the following specification depending on the Data Element Tag:</para>
              <itemizedlist>
                <listitem>
                  <para>Data Element (7FE0,0010) Pixel Data</para>
                  <itemizedlist>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value greater than 8 shall have Value Representation OW and shall be encoded in Big Endian;</para>
                    </listitem>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value less than or equal to 8 shall have the Value Representation OB or OW and shall be encoded in Big Endian.</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (60xx,3000) Overlay Data</para>
                  <itemizedlist>
                    <listitem>
                      <para>shall have the Value Representation OB or OW and shall be encoded in Big Endian.</para>
                      <note>
                        <para>Previous versions of the Standard specified that the choice of OB or OW VR was based on whether or not Overlay Bits Allocated (60xx,0100) was greater than, or less than or equal to, 8. However, since only one bit plane can be encoded in each Overlay Data Element (60xx,3000), no value of Overlay Bits Allocated other than 1 makes sense. Such a restriction is now present in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
                      </note>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (5400,1010) Waveform Data has the Value Representation specified in its Explicit VR Field. The component points shall be encoded in Big Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1201), (0028,1202), (0028,1203), (0028,1204) Red, Green, Blue, Alpha Palette Lookup Table Data have the Value Representation OW and shall be encoded in Big Endian.</para>
                  <note>
                    <para>Previous versions of the Standard either did not specify the encoding of Data Elements (0028,1201), (0028,1202), (0028,1203) in this Part, but specified a VR of US or SS in PS3.6-1993, or specified OW in this Part but a VR of US, SS or OW in PS3.6-1996. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1101), (0028,1102),(0028,1103) Red, Green, Blue Palette Lookup Table Descriptor have the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Big Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1221), (0028,1222), (0028,1223) Segmented Red, Green, Blue Palette Color Lookup Table Data have the Value Representation OW and shall be encoded in Big Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3006) LUT Data has the Value Representation US or OW and shall be encoded in Big Endian.</para>
                  <note>
                    <para>Previous versions of the Standard did not specify the encoding of these Data Elements in this Part, but specified a VR of US or SS in PS3.6-1998. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits. Hence a VR of OW has been added. Moreover this element is always unsigned, therefore the VR of SS has been removed. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3002) LUT Descriptor has the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Big Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,1408) Blending Lookup Table Data has the Value Representation OW and shall be encoded in Big Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0066,0025) Vertex Point Index List, (0066,0024) Edge Point Index List, (0066,0023) Triangle Point Index List and (0066,0029) Primitive Point Index List have the Value Representation OW and shall be encoded in Little Endian and are always interpreted as unsigned.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>For Data encoded with the Value Representation OB, the Data encoding is unaffected by Little Endian or Big Endian byte ordering.</para>
          </listitem>
          <listitem>
            <para>Encoding of Curve Data and Audio Sample Data was previously defined but has been retired. See PS3.5-2004.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>This DICOM Explicit VR Big Endian Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2.2".</para>
    </section>
    <section xml:id="sect_A.4" label="A.4" status="2">
      <title>Transfer Syntaxes For Encapsulation of Encoded Pixel Data</title>
      <para>These Transfer Syntaxes apply to the encoding of the entire DICOM Data Set, even though the image Pixel Data (7FE0,0010) portion of the DICOM Data Set is the only portion that is encoded by an encapsulated format. This implies that when a DICOM Message is being encoded according to an encapsulation Transfer Syntax the following requirements shall be met:</para>
      <orderedlist>
        <listitem>
          <para>The Data Elements contained in the Data Set structure shall be encoded with Explicit VR (with a VR Field) as specified in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the overall Data Set structure (Data Element Tags, Value Length, etc.) shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the Data Elements of the Data Set shall be as follows according to their Value Representations:</para>
          <itemizedlist>
            <listitem>
              <para>For all Value Representations defined in this part of the DICOM Standard, except for the Value Representations OB and OW, the encoding shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>For the Value Representations OB and OW, the encoding shall meet the following specification depending on the Data Element Tag:</para>
              <itemizedlist>
                <listitem>
                  <para>Data Element (7FE0,0010) Pixel Data may be encapsulated or native.</para>
                  <para>It shall be encapsulated if present in the top-level Data Set (i.e., not nested within a Sequence Data Element).</para>
                  <note>
                    <para>The distinction between fixed value length (native) and undefined value length (encapsulated) is present so that the top level Data Set Pixel Data can be compressed (and hence encapsulated), but the Pixel Data within an Icon Image Sequence may or may not be compressed.</para>
                  </note>
                  <para>If native, it shall have a defined Value Length, and be encoded as follows:</para>
                  <itemizedlist>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value greater than 8 shall have Value Representation OW and shall be encoded in Little Endian;</para>
                    </listitem>
                    <listitem>
                      <para>where Bits Allocated (0028,0100) has a value less than or equal to 8 shall have the Value Representation OB or OW and shall be encoded in Little Endian.</para>
                    </listitem>
                  </itemizedlist>
                  <note>
                    <para>That is, as if the transfer syntax were Explicit VR Little Endian.</para>
                  </note>
                  <para>If encapsulated, it has the Value Representation OB and is a sequence of bytes resulting from one of the encoding processes. It contains the encoded pixel data stream fragmented into one or more Item(s). This Pixel Data Stream may represent a Single or Multi-frame Image. See <xref linkend="table_A.4-1" xrefstyle="select: label"/> and <xref linkend="table_A.4-2" xrefstyle="select: label"/>.</para>
                  <itemizedlist>
                    <listitem>
                      <para>The Length of the Data Element (7FE0,0010) shall be set to the Value for Undefined Length (FFFFFFFFH).</para>
                    </listitem>
                    <listitem>
                      <para>Each Data Stream Fragment encoded according to the specific encoding process shall be encapsulated as a DICOM Item with a specific Data Element Tag of Value (FFFE,E000). The Item Tag is followed by a 4 byte Item Length field encoding the explicit number of bytes of the Item.</para>
                      <note>
                        <para>Whether more than one fragment per frame is permitted or not is defined per Transfer Syntax.</para>
                      </note>
                    </listitem>
                    <listitem>
                      <para>All items containing an encoded fragment shall be made of an even number of bytes greater or equal to two. The last fragment of a frame may be padded, if necessary, to meet the sequence item format requirements of the DICOM Standard.</para>
                      <note>
                        <orderedlist numeration="arabic">
                          <listitem>
                            <para>Any necessary padding may be added in the JPEG or JPEG-LS compressed data stream as per ISO 10918-1 and ISO 14495-1 such that the End of Image (EOI) marker ends on an even byte boundary, or may be appended after the EOI marker, depending on the implementation.</para>
                          </listitem>
                          <listitem>
                            <para>ISO 10918-1 and ISO 14495-1 define the ability to add any number of padding bytes FFH before any marker (all of which also begin with FFH). It is strongly recommended that FFH padding bytes not be added before the Start of Image (SOI) marker.</para>
                          </listitem>
                        </orderedlist>
                      </note>
                    </listitem>
                    <listitem>
                      <para>The first Item in the Sequence of Items before the encoded Pixel Data Stream shall be a Basic Offset Table item. The Basic Offset Table Item Value, however, is not required to be present:</para>
                      <itemizedlist>
                        <listitem>
                          <para>When the Item Value is not present, the Item Length shall be zero (00000000H) (see <xref linkend="table_A.4-1" xrefstyle="select: label"/>).</para>
                        </listitem>
                        <listitem>
                          <para>When the Item Value is present, the Basic Offset Table Item Value shall contain concatenated 32-bit unsigned integer values that are byte offsets to the first byte of the Item Tag of the first fragment for each frame in the Sequence of Items. These offsets are measured from the first byte of the first Item Tag following the Basic Offset Table item (see <xref linkend="table_A.4-2" xrefstyle="select: label"/>).</para>
                          <note>
                            <orderedlist numeration="arabic">
                              <listitem>
                                <para>For a Multi-Frame Image containing only one frame or a Single Frame Image, the Basic Offset Table Item Value may be present or not. If present it will contain a single 00000000H value.</para>
                              </listitem>
                              <listitem>
                                <para>Decoders of encapsulated pixel data, whether Single Frame or Multi-Frame, need to accept both an empty Basic Offset Table (zero length) and a Basic Offset Table filled with 32 bit offset values.</para>
                              </listitem>
                            </orderedlist>
                          </note>
                        </listitem>
                      </itemizedlist>
                    </listitem>
                    <listitem>
                      <para>This Sequence of Items is terminated by a Sequence Delimiter Item with the Tag (FFFE,E0DD) and an Item Length Field of Value (00000000H) (i.e., no Value Field shall be present).</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (60xx,3000) Overlay Data</para>
                  <itemizedlist>
                    <listitem>
                      <para>shall have the Value Representation OB or OW and shall be encoded in Little Endian.</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>Data Element (5400,1010) Waveform Data has the Value Representation specified in its Explicit VR Field. The component points shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1201), (0028,1202), (0028,1203), (0028,1204) Red, Green, Blue, Alpha Palette Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
                  <note>
                    <para>Previous versions of the Standard either did not specify the encoding of Data Elements 0028,1201), (0028,1202), (0028,1203) in this Part, but specified a VR of US or SS in PS3.6-1993, or specified OW in this Part but a VR of US, SS or OW in PS3.6-1996. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1101), (0028,1102),(0028,1103) Red, Green, Blue Palette Lookup Table Descriptor have the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0028,1221), (0028,1222), (0028,1223) Segmented Red, Green, Blue Palette Color Lookup Table Data have the Value Representation OW and shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3006) LUT Data has the Value Representation US or OW and shall be encoded in Little Endian.</para>
                  <note>
                    <para>Previous versions of the Standard did not specify the encoding of these Data Elements in this Part, but specified a VR of US or SS in PS3.6-1998. However, an explicit VR of US or SS cannot be used to encode a table of 2<superscript>16</superscript> elements, since the Value Length is restricted to 16 bits. Hence a VR of OW has been added. Moreover this element is always unsigned, therefore the VR of SS has been removed. The actual encoding of the values and their byte order would be identical in each case, though the explicitly encoded VR field would be different.</para>
                  </note>
                </listitem>
                <listitem>
                  <para>Data Element (0028,3002) LUT Descriptor has the Value Representation SS or US (depending on rules specified in the IOD in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>), and shall be encoded in Little Endian. The first and third values are always interpreted as unsigned, regardless of the Value Representation.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,1408) Blending Lookup Table Data has the Value Representation OW and shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Elements (0066,0025) Vertex Point Index List, (0066,0024) Edge Point Index List, (0066,0023) Triangle Point Index List and (0066,0029) Primitive Point Index List have the Value Representation OW and shall be encoded in Little Endian and are always interpreted as unsigned.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>For Data encoded with the Value Representation OB, the Data encoding is unaffected by Little Endian or Big Endian byte ordering.</para>
          </listitem>
          <listitem>
            <para>Encoding of Curve Data and Audio Sample Data was previously defined but has been retired. See PS3.5-2004.</para>
          </listitem>
        </orderedlist>
      </note>
      <table frame="box" rules="all" xml:id="table_A.4-1" label="A.4-1">
        <caption>Example for Elements of an Encoded Single-Frame Image Defined as a Sequence of Three Fragments Without Basic Offset Table Item Value</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Pixel Data Element Tag</emphasis>
              </para>
            </th>
            <th align="center" colspan="2" rowspan="1">
              <para>
                <emphasis role="bold">Value Representation</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Length</emphasis>
              </para>
            </th>
            <th align="left" colspan="5" rowspan="1">
              <para>
                <emphasis role="bold">Data Element</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="3">
              <para>(7FE0, 0010) with VR of OB</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>OB</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>0000H Reserved</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>FFFF FFFFH undefined length</para>
            </td>
            <th align="left" colspan="2" rowspan="1">
              <para><emphasis role="bold">Basic Offset Table with NO Item Value</emphasis></para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">First Fragment (Single Frame) of Pixel Data</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0000H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 04C6H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>04C6H bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <table frame="box" rules="all" xml:id="table_A.4-1b" label="A.4-1b">
        <caption>Example for Elements of an Encoded Single-Frame Image Defined as a Sequence of Three Fragments Without Basic Offset Table Item Value (continued)</caption>
        <thead>
          <tr valign="top">
            <th align="left" colspan="8" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Continued</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">Second Fragment (Single Frame) of Pixel Data</emphasis></para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">Third Fragment (Single Frame) of Pixel Data</emphasis></para>
            </th>
            <th align="left" colspan="2" rowspan="1">
              <para><emphasis role="bold">Sequence Delimiter Item</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Sequence Delim. Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 024AH</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0628H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE,E0DD)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 000H</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>024AH bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0628Hbytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <table frame="box" rules="all" xml:id="table_A.4-2" label="A.4-2">
        <caption>Examples of Elements for an Encoded Two-Frame Image Defined as a Sequence of Three Fragments with Basic Table Item Values</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Pixel Data Element Tag</emphasis>
              </para>
            </th>
            <th align="center" colspan="2" rowspan="1">
              <para>
                <emphasis role="bold">Value Representation</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Length</emphasis>
              </para>
            </th>
            <th align="left" colspan="6" rowspan="1">
              <para>
                <emphasis role="bold">Data Element</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="3">
              <para>(7FE0, 0010) with VR of OB</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>OB</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>0000H Reserved</para>
            </td>
            <td align="left" colspan="1" rowspan="3">
              <para>FFFF FFFFH undefined length</para>
            </td>
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">Basic Offset Table with Item Value</emphasis></para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">First Fragment (Frame 1) of Pixel Data</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0008H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0000H 0000 0646H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 02C8H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0008H bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>02C8H bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <table frame="box" rules="all" xml:id="table_A.4-2b" label="A.4-2b">
        <caption>Examples of Elements for an Encoded Two-Frame Image Defined as a Sequence of Three Fragments with Basic Table Item Values (continued)</caption>
        <thead>
          <tr valign="top">
            <th align="left" colspan="8" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Continued</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">Second Fragment (Frame 1) of Pixel Data</emphasis></para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para><emphasis role="bold">Third Fragment (Frame 2) of Pixel Data</emphasis></para>
            </th>
            <th align="left" colspan="2" rowspan="1">
              <para><emphasis role="bold">Sequence Delimiter Item</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Value</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Sequence Delimiter Tag</emphasis></para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para><emphasis role="bold">Item Length</emphasis></para>
            </th>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 036EH</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E000)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0BC8H</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Compressed Fragment</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>(FFFE, E0DD)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0000 0000H</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>036EH bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>0BC8H bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <section xml:id="sect_A.4.1" label="A.4.1" status="3">
        <title>JPEG Image Compression</title>
        <para>The International Standards Organization ISO/IEC JTC1 has developed an International Standard, ISO/IS-10918-1 (JPEG Part 1) and an International Draft Standard, ISO/IS-10918-2 (JPEG Part 2), known as the JPEG Standard, for digital compression and coding of continuous-tone still images (see <xref linkend="chapter_F" xrefstyle="template: Annex %n"/> for further details).</para>
        <para>A DICOM Transfer Syntax for JPEG Image Compression shall be identified by a UID value, appropriate to its JPEG coding process, chosen from <xref linkend="table_A.4-3" xrefstyle="select: label"/>.</para>
        <table frame="box" rules="all" xml:id="table_A.4-3" label="A.4-3">
          <caption>DICOM Transfer Syntax UIDs for JPEG</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">DICOM Transfer Syntax UID</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">JPEG coding process</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">JPEG description</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1.2.840.10008.1.2.4.50</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>1</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>baseline</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1.2.840.10008.1.2.4.51</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>2(8-bit),4(12-bit)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>extended</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1.2.840.10008.1.2.4.57</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>14</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>lossless, non-hierarchical</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="center" colspan="1" rowspan="1">
                <para>1.2.840.10008.1.2.4.70</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>14</para>
                <para>(Selection Value 1)</para>
              </td>
              <td align="center" colspan="1" rowspan="1">
                <para>lossless, non-hierarchical, first-order prediction</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <para>DICOM identifies, to increase the likelihood of successful association, three Transfer Syntaxes for Default JPEG Compression Image processes (see <xref linkend="sect_8.2.1" xrefstyle="select: label"/> and <xref linkend="chapter_10" xrefstyle="template: Section %n"/>).</para>
        </note>
        <para>If the object allows multi-frame images in the pixel data field, then each frame shall be encoded separately. Each fragment shall contain encoded data from a single-frame image.</para>
        <note>
          <para>Though a fragment may not contain encoded data from more than one frame, the encoded data from one frame may span multiple fragments. See note in <xref linkend="sect_8.2" xrefstyle="select: label"/>.</para>
        </note>
        <para>For all images, including all frames of a multi-frame image, the JPEG Interchange Format shall be used (the table specification shall be included).</para>
        <note>
          <para>This refers to the ISO 10918-1 "interchange format", not the DIS 10918-5 JPEG File Interchange Format (JFIF).</para>
        </note>
        <para>If images with Photometric Interpretation (0028,0004) YBR_FULL_422 or YBR_PARTIAL_422, are encoded with JPEG coding Process 1 (non hierarchical with Huffman coding), identified by DICOM Transfer Syntax UID "1.2.840.10008.1.2.4.50"the minimum compressible unit is YYCBCR, where Y, CB, and CR are 8 by 8 blocks of pixel values. The data stream encodes two Y blocks followed by the corresponding CB and CR blocks.</para>
      </section>
      <section xml:id="sect_A.4.2" label="A.4.2" status="3">
        <title>RLE Compression</title>
        <para><xref linkend="chapter_G" xrefstyle="template: Annex %n"/> defines a RLE Compression Transfer Syntax. This transfer Syntax is identified by the UID value "1.2.840.10008.1.2.5". If the object allows multi-frame images in the pixel data field, then each frame shall be encoded separately. Each frame shall be encoded in one and only one Fragment (see <xref linkend="sect_8.2" xrefstyle="select: label"/>).</para>
      </section>
      <section xml:id="sect_A.4.3" label="A.4.3" status="3">
        <title>JPEG-LS Image Compression</title>
        <para>The International Standards Organization ISO/IEC JTC1 has developed an International Standard, ISO/IS-14495-1 (JPEG-LS Part 1), for digital compression and coding of continuous-tone still images (see <xref linkend="chapter_F" xrefstyle="template: Annex %n"/> for further details).</para>
        <para>A DICOM Transfer Syntax for JPEG-LS Image Compression shall be identified by a UID value, appropriate to its JPEG-LS coding process.</para>
        <para>Two Transfer Syntaxes are specified for JPEG-LS:</para>
        <orderedlist>
          <listitem>
            <para>A Transfer Syntax with a UID of "1.2.840.10008.1.2.4.80 ", which specifies the use of the lossless mode of JPEG-LS. In this mode the absolute error between the source and reconstructed images will be zero.</para>
          </listitem>
          <listitem>
            <para>A Transfer Syntax with a UID of "1.2.840.10008.1.2.4.81 ", which specifies the use of the near-lossless mode of JPEG-LS. In this mode, the absolute error between the source and reconstructed images will be constrained to a finite value that is conveyed in the compressed bit stream. Note that this process can, at the discretion of the encoder, be used to compress images with an error constrained to a value of zero, resulting in no loss of information.</para>
          </listitem>
        </orderedlist>
        <para>If the object allows multi-frame images in the pixel data field, then each frame shall be encoded separately. Each fragment shall contain encoded data from a single-frame image.</para>
        <note>
          <para>Though a fragment may not contain encoded data from more than one frame, the encoded data from one frame may span multiple fragments. See note in <xref linkend="sect_8.2" xrefstyle="select: label"/>.</para>
        </note>
        <para>For all images, including all frames of a multi-frame image, the JPEG-LS Interchange Format shall be used (all parameter specifications shall be included).</para>
      </section>
      <section xml:id="sect_A.4.4" label="A.4.4" status="3">
        <title>JPEG 2000 Image Compression</title>
        <para>The International Standards Organization ISO/IEC JTC1 has developed an International Standard, ISO/IS 15444-1 (JPEG 2000 Part 1), for digital compression and coding of continuous-tone still images (see <xref linkend="chapter_F" xrefstyle="template: Annex %n"/> for further details).</para>
        <para>A DICOM Transfer Syntax for JPEG 2000 Image Compression shall be identified by a UID value, appropriate to the choice of JPEG 2000 coding process.</para>
        <para>Two Transfer Syntaxes are specified for JPEG 2000 Part 1:</para>
        <orderedlist numeration="arabic">
          <listitem>
            <para>A Transfer Syntax with a UID of "1.2.840.10008.1.2.4.90 ", which specifies the use of the lossless (reversible) mode of JPEG 2000 Part 1 (ISO/IEC 15444-1) (i.e., the use of a reversible wavelet transformation and a reversible color component transformation, if applicable, and no quantization).</para>
          </listitem>
          <listitem>
            <para>A Transfer Syntax with a UID of "1.2.840.10008.1.2.4.91", which specifies the use of either:</para>
            <orderedlist numeration="loweralpha">
              <listitem>
                <para>the lossless (reversible) mode of JPEG 2000 Part 1 (ISO/IEC 15444-1) (i.e., the use of a reversible wavelet transformation and a reversible color component transformation, if applicable, and no quantization or code stream truncation), or</para>
              </listitem>
              <listitem>
                <para>the lossy (irreversible) mode of JPEG 2000 Part 1 (ISO/IEC 15444-1) (i.e., the use of an irreversible wavelet transformation and an irreversible color component transformation, if applicable, and optionally quantization, or the use of a reversible wavelet transformation and a reversible color component transformation, if applicable, followed by code stream truncation).</para>
              </listitem>
            </orderedlist>
            <para>The choice reversible versus irreversible is at the discretion of the sender (SCU or FSC/FSU).</para>
            <note>
              <para>When using the irreversible wavelet transformation and an irreversible color component transformation, if applicable, even if no quantization is performed, some loss will always occur due to the finite precision of the calculation of the wavelet and multi-component transformations.</para>
            </note>
          </listitem>
        </orderedlist>
        <para>Only the features defined in JPEG 2000 Part 1 (ISO/IEC 15444-1) are permitted for these two Transfer Syntaxes. Additional features and extensions that may be defined in other parts of JPEG 2000 shall not be included in the compressed bitstream unless they can be decoded or ignored without loss of fidelity by all Part 1 compliant implementations.</para>
        <para>If the object allows multi-frame images in the pixel data field, then for these JPEG 2000 Part 1 Transfer Syntaxes, each frame shall be encoded separately. Each fragment shall contain encoded data from a single frame.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>That is, the processes defined in ISO/IEC 15444-1 shall be applied on a per-frame basis. The proposal for encapsulation of multiple frames in a non-DICOM manner in so-called "Motion-JPEG" or "M-JPEG" defined in 15444-3 is not used.</para>
            </listitem>
            <listitem>
              <para>Though a fragment may not contain encoded data from more than one frame, the encoded data from one frame may span multiple fragments. See note in <xref linkend="sect_8.2" xrefstyle="select: label"/>.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>For all images, including all frames of a multi-frame image, the JPEG 2000 bitstream specified in ISO/IEC 15444-1 shall be used. The optional JP2 file format header shall NOT be included.</para>
        <note>
          <para>The role of the JP2 file format header is fulfilled by the non-pixel data attributes in the DICOM Data Set.</para>
        </note>
        <para>The International Standards Organization ISO/IEC JTC1 has also developed JPEG 2000 Part 2 (ISO/IEC 15444-2), which includes Extensions to the compression techniques described in Part 1 of the JPEG 200 Standard. Annex J of JPEG 2000 Part 2 describes extensions to the ICT and RCT multiple component transformations allowed in Part 1. Two types of multiple component transformations are defined in Annex J of Part 2 of JPEG 2000:</para>
        <orderedlist numeration="arabic">
          <listitem>
            <para>Array based multiple component transforms that form linear combinations of components to reduce the correlation between components. Array based transforms include prediction based transformations such as DPCM as well as more complicated transformations such as the KLT. These array based transformations can be implemented reversibly or irreversibly.</para>
          </listitem>
          <listitem>
            <para>Wavelet based multiple component transformations using the same two wavelet filters as used in Part 1 of JPEG 2000 (5-3 reversible wavelet and 9-7 irreversible wavelet).</para>
          </listitem>
        </orderedlist>
        <para>Annex J of JPEG 2000 Part 2 also describes a flexible mechanism to allow these techniques to be applied in sequence. Furthermore, it provides mechanisms that allow components to be re-ordered and grouped into component collections. Different multiple component transformation can then be applied to each component collection.</para>
        <para>Two additional Transfer Syntaxes are specified for Part 2 JPEG 2000:</para>
        <orderedlist numeration="arabic">
          <listitem>
            <para>A Transfer Syntax with a UID of 1.2.840.10008.1.2.4.92, which specifies the use of the lossless (reversible) mode of JPEG 2000 Part 2 (ISO/IEC 15444-2) multiple component transformation extensions, as defined in Annex J of JPEG 2000 Part 2 (i.e., the use of a reversible wavelet transformation and a reversible multiple component transformation, and no quantization or code stream truncation).</para>
          </listitem>
          <listitem>
            <para>A Transfer Syntax with a UID of 1.2.840.10008.1.2.4.93, which specifies the use of either:</para>
            <orderedlist numeration="loweralpha">
              <listitem>
                <para>the lossless (reversible) mode of JPEG 2000 Part 2 (ISO/IEC 15444-2) multiple component transformation extensions, as defined in Annex J of JPEG 2000 Part 2 (i.e., the use of a reversible wavelet transformation and a reversible multiple component transformation, and no quantization), or</para>
              </listitem>
              <listitem>
                <para>the lossy (irreversible) mode of JPEG 2000 Part 2 (ISO/IEC 15444-2) multiple component transformation extensions, as defined in Annex J of JPEG 2000 Part 2 (i.e., the use of an irreversible wavelet transformation and an irreversible multiple component transformation, and optionally quantization, or the use of an reversible wavelet transformation and a reversible multiple component transformation, followed by code stream truncation).</para>
              </listitem>
            </orderedlist>
          </listitem>
        </orderedlist>
        <para>Only the multiple component transformation extensions defined in Annex J of JPEG 2000 Part 2 (ISO/IEC 15444-2) are permitted for these two Transfer Syntaxes. Additional features and extensions that may be defined in other Annexes of JPEG 2000 Part 2 shall not be included in the compressed bitstream.</para>
        <note>
          <para>the arbitrary wavelet transformations, as defined in Annex H of JPEG 2000 Part 2 (ISO/IEC 15444-2) are not allowed for these two Transfer Syntaxes. The only wavelet transformations that are allowed to be used as multiple component transformations are the reversible 5-3 wavelet transformation and the irreversible 9-7 wavelet transformation, as defined in Annex F of JPEG 2000 Part 1 (ISO/IEC 15444-1).</para>
        </note>
        <para>If the object allows multi-frame images in the pixel data field, then, for these JPEG 2000 Part 2 Transfer Syntaxes, the frames in the object are first processed using the multi-component transformation. After the multiple component transformation has been applied, the transformed frames are encoded using the process described in JPEG 2000 Part 1.</para>
        <para>Optionally, the frames can be grouped into one or more component collections. The multiple component transformations are then applied to each component collection independently. The use of component collections can be used to reduce computational complexity and to improve access to specific frames on the decoder. If component collections are used, each fragment shall contain encoded data from a single component collection.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The 3<superscript>rd</superscript> dimension transformations that are described in this Supplement are treated in Part 2 of JPEG 2000 as direct extensions to the color component transformations (RGB to YUV) that are described in Part 1 of JPEG 2000. For this reason, each image or frame in the sequence is called a "component". Although the term component is used as a generic term to identify an element of the 3<superscript>rd</superscript> dimension, no restriction is made or implied that the transformations in this Supplement apply only to multi-component (or multiple color channel) data. To compress a volumetric data set using this transfer syntax, each frame of the DICOM image is treated as a component of a multi-component image.</para>
            </listitem>
            <listitem>
              <para>The progressive nature of the JPEG 2000 code stream allows for the decompression of the image before the complete image has been transferred. If a Storage SCP truncates the code stream by aborting the association, the instance has not been completely transferred and hence should not persist unless different UIDs are assigned (even though it may have been transiently used for display purposes).</para>
            </listitem>
            <listitem>
              <para>It has been shown that the use of component collections does not significantly affect the compression efficiency (for details, see <link xl:href="http://medical.nema.org/Dicom/minutes/WG-04/2004/2004-02-18/3D_compression_RSNA_2003_ver2.pdf"/>).</para>
            </listitem>
            <listitem>
              <para>Though a fragment may not contain encoded data from more than one component collection, the encoded data from one component collection may span multiple fragments.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_A.4.5" label="A.4.5" status="3">
        <title>MPEG2 Image Compression</title>
        <para>The International Standards Organization ISO/IEC MPEG2 has developed an International Standard, ISO/IEC 13818-2 'Information Technology - Generic coding of moving pictures and associated audio information: video -- part 2', referred to as "MPEG-2".</para>
        <para>A DICOM Transfer Syntax for MPEG2 Image Compression shall be identified by a UID value of either:</para>
        <itemizedlist>
          <listitem>
            <para>1.2.840.10008.1.2.4.100corresponding to MPEG2 MP@ML option of the ISO/IEC MPEG2 Video standard</para>
          </listitem>
          <listitem>
            <para>1.2.840.10008.1.2.4.101 corresponding to the MPEG2 MP@HL option of the ISO/IEC MPEG2 Video standard.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="sect_A.4.6" label="A.4.6" status="2">
        <title>MPEG-4 AVC/H.264 HIP@Level4.1 Video Compression</title>
        <para>The International Standards Organization ISO/IEC MPEG4 has developed an International Standard, ISO/IEC 14496-10 (MPEG-4 Part 10), for the video compression of generic coding of moving pictures and associated audio information. This standard is jointly maintained and has identical technical content as the ITU-T H.264 standard.</para>
        <para>A DICOM Transfer Syntax for MPEG-4 AVC/H.264 Image Compression shall be identified by a UID value of either:</para>
        <itemizedlist>
          <listitem>
            <para>1.2.840.10008.1.2.4.102 corresponding to the MPEG-4 AVC/H.264 High Profile / Level 4.1 of the ITU-T H.264 Video standard</para>
          </listitem>
          <listitem>
            <para>1.2.840.10008.1.2.4.103 corresponding to the MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1 of the ITU-T H.264 Video standard with the temporal and spatial resolution restrictions defined in <xref linkend="table_8-4" xrefstyle="select: label"/>.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
     <section xml:id="sect_A.5" label="A.5" status="2">
      <title>DICOM Deflated Little Endian Transfer Syntax (Explicit VR)</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set.</para>
      <para>The entire Data Set is first encoded according to the rules specified in <xref linkend="sect_A.2" xrefstyle="select: label"/>.</para>
      <para>The entire byte stream is then compressed using the "Deflate" algorithm defined in Internet RFC 1951.</para>
      <para>If the deflate algorithm produces an odd number of bytes then a single trailing NULL byte shall be added after the last byte of the deflated bit stream.</para>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>The Pixel Data (7FE0,0010) is not handled in any special manner. The pixel data is first encoded as sequential uncompressed frames without encapsulation, and then is handled as part of the byte stream fed to the "deflate" compressor in the same manner as the value of any other attribute.</para>
          </listitem>
          <listitem>
            <para>This transfer syntax is particularly useful for compression of objects without pixel data, such as structured reports. It is not particularly effective at image compression, since any benefit obtained from compressing the non-pixel data is offset by less effective compression of the much larger pixel data.</para>
          </listitem>
          <listitem>
            <para>A freely available reference implementation of the "deflate" compressor may be found in the zlib package, which may be downloaded from <link xl:href="http://www.zlib.net/"/>.</para>
          </listitem>
          <listitem>
            <para>Although the encoded stream may be padded by a trailing NULL byte, the end of the deflated bit stream will be indicated by the delimiter that will occur before the padding.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>In order to facilitate interoperability of implementations conforming to the DICOM Standard that elect to use this Transfer Syntax, the following policy is specified:</para>
      <itemizedlist>
        <listitem>
          <para>Any implementation that has elected to support the Deflated Explicit VR Little Endian Transfer Syntax for any Abstract Syntax, shall also support the Explicit VR Little Endian Transfer for that Abstract Syntax</para>
        </listitem>
      </itemizedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>This requirement to support the (uncompressed) Explicit VR Little Endian Transfer Syntax is in order to ensure full-fidelity exchange of VR information in the case that the Association Acceptor does not support the Deflated Explicit VR Little Endian Transfer Syntax. The requirement specified in <xref linkend="sect_10.1" xrefstyle="select: label"/> of this part, that the Default Implicit VR Little Endian Transfer Syntax be supported by all implementations except those that only have access to lossy compressed pixel data, is not waived. In other words, an implementation must support all three transfer syntaxes.</para>
          </listitem>
          <listitem>
            <para>There are no such "baseline" requirements on media, since such requirements are at the discretion of the Media Application Profile. Furthermore, sufficient object "management" information should be present in the DICOMDIR even if an individual application cannot decompress an instance encoded with the deflated transfer syntax.</para>
          </listitem>
        </orderedlist>
      </note>
      <para>This DICOM Deflated Explicit VR Little Endian Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2.1.99".</para>
    </section>
    <section xml:id="sect_A.6" label="A.6" status="2">
      <title>DICOM JPIP Referenced Transfer Syntax (Explicit VR)</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set. This implies that when a DICOM Data Set is being encoded with the DICOM Little Endian Transfer Syntax the following requirements shall be met:</para>
      <orderedlist numeration="loweralpha">
        <listitem>
          <para>The Data Elements contained in the Data Set structure shall be encoded with Explicit VR (with a VR Field) as specified in <xref linkend="sect_7.1.2" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the overall Data Set structure (Data Element Tags, Value Length, and Value) shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
        </listitem>
        <listitem>
          <para>The encoding of the Data Elements of the Data Set shall be as follows according to their Value Representations:</para>
          <itemizedlist>
            <listitem>
              <para>For all Value Representations defined in this part, except for the Value Representations OB and OW, the encoding shall be in Little Endian as specified in <xref linkend="sect_7.3" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>For the Value Representations OB and OW, the encoding shall meet the following specification depending on the Data Element Tag:</para>
              <itemizedlist>
                <listitem>
                  <para>Data Element (7FE0,0010) Pixel Data shall not be present, but rather pixel data shall be referenced via Data Element (0028,7FE0) Pixel Data Provider URL</para>
                </listitem>
                <listitem>
                  <para>Overlay data, if present, shall only be encoded in the Overlay Data attribute (60xx,3000), which shall have the Value Representation OB or OW and shall be encoded in Little Endian.</para>
                </listitem>
                <listitem>
                  <para>Data Element (0028,0004) Photometric Interpretation shall be limited to the values: MONOCHROME1, MONOCHROME2, YBR_ICT and YBR_RCT.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
      <para>This DICOM JPIP Referenced Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2.4.94 ".</para>
    </section>
    <section xml:id="sect_A.7" label="A.7" status="2">
      <title>DICOM JPIP Referenced Deflate Transfer Syntax (Explicit VR)</title>
      <para>This Transfer Syntax applies to the encoding of the entire DICOM Data Set.</para>
      <para>The entire Data Set is first encoded according to the rules specified in <xref linkend="sect_A.6" xrefstyle="select: label"/>.</para>
      <para>The entire byte stream is then compressed using the "Deflate" algorithm defined in Internet RFC 1951.</para>
      <para>This DICOM JPIP Referenced Deflate Transfer Syntax shall be identified by a UID of Value "1.2.840.10008.1.2.4.95".</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_B" label="B" status="1">
    <title>Creating a Privately Defined Unique Identifier (Informative)</title>
    <para>Privately defined Unique Identifiers (UIDs) are used in DICOM to uniquely identify items such as Specialized or Private SOP Classes, Image SOP Instances, Study SOP Instances, etc.</para>
    <section xml:id="sect_B.1" label="B.1" status="2">
      <title>Organizationally Derived UID</title>
      <para>A UID may be formed using a registered root (see <xref linkend="chapter_C" xrefstyle="template: Annex %n"/>) and an organization specific suffix. The manner in which the suffix of such an organizationally derived UID is defined is not constrained by the DICOM Standard. Only the guarantee of its uniqueness by the defining organization is required by DICOM.</para>
      <para>The following example presents a particular choice made by a specific organization in defining its suffix to guarantee uniqueness of a SOP Instance UID.</para>
      <programlisting><![CDATA[
  "1.2.840.xxxxx.3.152.235.2.12.187636473"
   \___________/ \______________________/
       root     .         suffix
]]></programlisting>
      <para>In this example, the root is:</para>
      <itemizedlist>
        <listitem>
          <para>1 Identifies ISO</para>
        </listitem>
        <listitem>
          <para>2 Identifies ANSI Member Body</para>
        </listitem>
        <listitem>
          <para>840 Country code of a specific Member Body (U.S. for ANSI)</para>
        </listitem>
        <listitem>
          <para>xxxxx Identifies a specific Organization.(assigned by ANSI)</para>
        </listitem>
      </itemizedlist>
      <para>In this example the first two components of the suffix relate to the identification of the device:</para>
      <itemizedlist>
        <listitem>
          <para>3 Manufacturer defined device type</para>
        </listitem>
        <listitem>
          <para>152 Manufacturer defined serial number</para>
        </listitem>
      </itemizedlist>
      <para>The remaining four components of the suffix relate to the identification of the image:</para>
      <itemizedlist>
        <listitem>
          <para>235 Study number</para>
        </listitem>
        <listitem>
          <para>2 Series number</para>
        </listitem>
        <listitem>
          <para>12 Image number</para>
        </listitem>
        <listitem>
          <para>187636473 Encoded date and time stamp of image acquisition</para>
        </listitem>
      </itemizedlist>
      <para>In this example, the organization has chosen these components to guarantee uniqueness. Other organizations may choose an entirely different series of components to uniquely identify its images. For example it may have been perfectly valid to omit the Study Number, Series Number and Image Number if the time stamp had a sufficient precision to ensure that no two images might have the same date and time stamp.</para>
      <para>Because of the flexibility allowed by the DICOM Standard in creating organizationally derived UIDs, implementations should not depend on any assumed structure of UIDs and should not attempt to parse UIDs to extract the semantics of some of its components.</para>
    </section>
    <section xml:id="sect_B.2" label="B.2" status="2">
      <title>UUID Derived UID</title>
      <para>ISO/IEC 9834-8 / ITU-T X.667 defines a method by which a UID may be constructed from the root "2.25." followed by a decimal representation of a Universally Unique Identifier (UUID). That decimal representation treats the 128 bit UUID as an integer, and may thus be up to 39 digits long (leading zeros must be suppressed).</para>
      <note>
        <para>ISO/IEC 9834-8 / ITU-T X.667 is available at <link xl:href="http://www.itu.int/rec/T-REC-X.667/en"/>.</para>
      </note>
      <para>A UUID derived UID may be appropriate for dynamically created UIDs, such as SOP Instance UIDs, but is usually not appropriate for UIDs determined during application software design, such as private SOP Class or Transfer Syntax UIDs, or Implementation Class UIDs.</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_C" label="C" status="1">
    <title>DICOM Unique Identifier Registration Process (Informative)</title>
    <para>This registration process applies to a number of unique identifiers that share the same properties, structure and registration process. It applies to the following identifiers:</para>
    <itemizedlist>
      <listitem>
        <para>The Values assigned to DICOM Data Elements of Value Representation VR = UID (see <xref linkend="table_6.2-1" xrefstyle="select: label"/>). Such Data Elements are defined in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>, <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>, <olink targetdoc="PS3.6" targetptr="PS3.6" xrefstyle="select: labelnumber"/>, and <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/>.</para>
      </listitem>
      <listitem>
        <para>The DICOM Abstract Syntaxes Names. Abstract Syntax Names are defined in <olink targetdoc="PS3.4" targetptr="PS3.4" xrefstyle="select: labelnumber"/>.</para>
      </listitem>
      <listitem>
        <para>The DICOM Transfer Syntax Names. Transfer Syntax Names are defined in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>.</para>
      </listitem>
      <listitem>
        <para>The DICOM Application Context Names. Application Context Names are defined in <olink targetdoc="PS3.7" targetptr="PS3.7" xrefstyle="select: labelnumber"/></para>
      </listitem>
    </itemizedlist>
    <para>UID structure is based on the numeric form of the OSI Object Identifier as defined by ISO 8824. Values shall be registered as defined by ISO 9834-1 to ensure global uniqueness.</para>
    <para>The DICOM Standard assigns Values to a number of such unique identifiers. The organization responsible for their registration is NEMA, which guarantees uniqueness.</para>
    <para>For privately registered identifiers, NEMA will not act as registration authority. Related organizations shall obtain their proper registration as defined for OSI Object Identifiers by ISO 9834-1 to ensure global uniqueness. National Standards Organizations representing a number of countries (e.g., UK, France, Japan, USA, etc.) for the International Standards Organization act as a registration authority by delegation from ISO, as defined by ISO 9834-1.</para>
    <note>
      <orderedlist numeration="arabic">
        <listitem>
          <para>For example, in the USA ANSI assigns, for a fee, Organization Identifiers to any requesting organization. Such an identifier may be used by the identified organization as a root to which it may add a suffix made of one or more components. The identified organization accepts the responsibility to properly register these suffixes to ensure uniqueness.</para>
        </listitem>
        <listitem>
          <para>Following are two typical examples of obtaining a UID &lt;org root&gt;. These examples are not intended to illustrate all the possible methods for obtaining a UID &lt;org root&gt;, see ISO 8824 and ISO 9834-1 for complete specifications. Organization identifiers may be obtained from various ISO member bodies (e.g., IBN in Belgium, ANSI in the United States, AFNOR in France, BSI in Great Britain, DIN in Germany, COSIRA in Canada).</para>
          <para>The first example shows the case of an &lt;org root&gt; issued by an ISO Member Body (ANSI in the USA in this example). The &lt;org root&gt; is composed of an identifier for ISO, a member body branch identifier, a country code and an organization ID. Note that there is no requirement that an implementation using an ANSI issued &lt;org root&gt; be made or located in the USA. The &lt;org root&gt; is made up of the following components: 1.2.840.xxxxx</para>
          <itemizedlist>
            <listitem>
              <para>1 identifies ISO</para>
            </listitem>
            <listitem>
              <para>2 identifies the ISO member body branch</para>
            </listitem>
            <listitem>
              <para>840 identifies the country code of a specific ISO member body (U.S. for ANSI)</para>
            </listitem>
            <listitem>
              <para>xxxxx identifies a specific organization as registered by the ISO member body ANSI.</para>
            </listitem>
          </itemizedlist>
          <para>The second example shows the case of an &lt;org root&gt; issued by ISO (is delegated to BSI) to an international organization. It is composed of an identifier for ISO, an international organization branch identifier, and an International Code Designator. The value of the&lt;org root&gt; is assigned by an international registration authority that may be used by many different UIDs defined by the same international organization. The &lt;org root&gt; is made up of the following components: 1.3.yyyy</para>
          <itemizedlist>
            <listitem>
              <para>1 identifies ISO</para>
            </listitem>
            <listitem>
              <para>3 identifies the international organization branch</para>
            </listitem>
            <listitem>
              <para>yyyy identifies a specific organization as registered by an International Code Designator registration authority (see ISO 6523).</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Example components of a &lt;suffix&gt; for unique identification of an image could include:</para>
          <itemizedlist>
            <listitem>
              <para>product</para>
            </listitem>
            <listitem>
              <para>system identifier</para>
            </listitem>
            <listitem>
              <para>study, series and image numbers</para>
            </listitem>
            <listitem>
              <para>study, series and image date &amp; times.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist>
    </note>
  </chapter>
  <chapter xml:id="chapter_D" label="D" status="1">
    <title>Examples of Various Pixel Data and Overlay Encoding Schemes (Informative)</title>
    <section xml:id="sect_D.1" label="D.1" status="2">
      <title>Detailed Example of Pixel Data Encoding</title>
      <para>As specified in <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>, Image Pixel Data is stored within the Value of the Pixel Data Element (7FE0,0010). The order in which Pixel Data for an image plane is encoded is from left to right and top to bottom, a row at a time (see Figure <xref linkend="figure_D-1" xrefstyle="select: labelnumber"/>).</para>
      <para>
        <figure xml:id="figure_D-1" label="D-1" pgwide="1">
          <title>An Image Pixel Plane</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-1.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image004.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>An individual pixel may consist of one or more Pixel Sample Values (e.g., color or multi-planar images). Each Pixel Sample Value can be expressed as either a binary 2's complement integer or a binary unsigned integer, as specified by the Pixel Representation Data Element (0028, 0103). The number of bits in each Pixel Sample Value is specified by Bits Stored (0028,0101). For 2's complement integer Pixel Samples the sign bit is the most significant bit of the Pixel Sample Value.</para>
      <para>A Pixel Cell is the container for a Pixel Sample Value and optionally additional bits. These additional bits can be used for overlay planes, or to place Pixels on certain boundaries (byte, word, etc.). A Pixel Cell exists for every individual Pixel Sample Value in the Pixel Data. The size of the Pixel Cells is specified by Bits Allocated (0028,0100) and is greater than or equal to the Bits Stored (0028,0101). The placement of the Pixel Sample Values within the Pixel Cells is specified by High Bit (0028,0102).</para>
      <para>Any restrictions on the characteristics of a Pixel Cell and the Pixel Sample Value contained therein are specific to the Information Object Definition (e.g., Image Object) containing the Pixel Data Element (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
      <para>The Pixel Data Element, as specified by the DICOM Default Transfer Syntax in <xref linkend="sect_10.1" xrefstyle="select: label"/>, has a Value Representation of OW (Other Word String). The Pixel Data in DICOM 3.0, as it was in ACR-NEMA 2.0, is packed (see Figure <xref linkend="figure_D-2" xrefstyle="select: labelnumber"/>). One way to visualize this packed encoding is to imagine encoding the Pixel Cells as a concatenated stream of bits from the least significant bit of the first Pixel Cell up through the most significant bit of the last Pixel Cell. Within this stream, the most significant bit of any Pixel Cell is followed by the least significant bit of the next Pixel Cell. The Pixel Data can then be broken up into a stream of physical 16-bit words, each of which is subject to the byte ordering constraints of the Transfer Syntax.</para>
      <para>All other (non-default) DICOM Transfer Syntaxes make use of explicit VR encoding. For these Transfer Syntaxes, all Pixel Data where Bits Allocated is less than or equal to 8 may be encoded with an explicit VR of OB (see <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>). As in the OW case, Pixel Cells are packed together, but in this case the Pixel Data is broken up into a stream of physical 8-bit words.</para>
      <note>
        <para>For Pixel Data encoded with an explicit VR of OB, the encoding of the Pixel Data is unaffected by Little Endian or Big Endian byte ordering.</para>
      </note>
      <para>
        <figure xml:id="figure_D-2" label="D-2" pgwide="1">
          <title>Encoding (Packing) of Arbitrary Pixel Data with a VR of OW</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-2.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image006.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>IODs tend to specify Pixel Cells so that they begin and end on byte or word boundaries and such that the Pixel Sample Value contained within also fits 'neatly' within a cell. However, this does not have to be the case.</para>
      <para>We now carry forward two examples of Pixel Data encoding using the Value representation of OW for the purposes of clarification. Example 1 will be a valid example for a CT Image Information Object, while Example 2 will be for a hypothetical information object (see Figure <xref linkend="figure_D-3" xrefstyle="select: labelnumber"/>).</para>
      <para>
        <figure xml:id="figure_D-3" label="D-3" pgwide="1">
          <title>Example Pixel Cells</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-3.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image008.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>Figure D-4 shows Pixel Data constructed of these example Pixel Cells as they are packed into a stream of 16-bit words.</para>
      <para>
        <figure xml:id="figure_D-4" label="D-4" pgwide="1">
          <title>Example Pixel Cells Packed into 16-bit Words (VR = OW)</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-4.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image010.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>Byte ordering becomes a consideration when we represent the Pixel Data physically, in memory, a file, or on a network.</para>
      <para>In the memory of a byte-addressable Big Endian machine, the highest order byte (bits 8 - 15) in each 16-bit word has a binary address of x...x0. While in a byte-addressable Little Endian machine, the lowest order byte (bits 0 - 7) in each 16-bit word has a binary address of x...x0. Figure D-5 pictures our example Pixel Data streams as they would be addressed in the memory of both a Big Endian and a Little Endian machine.</para>
      <para>
        <figure xml:id="figure_D-5" label="D-5" pgwide="1">
          <title>Example Pixel Cells Byte Ordered in Memory (VR = OW)</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-5.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image012.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>Byte ordering is also specified as part of the negotiated Transfer Syntax used in the exchange of a DICOM message. Sixteen bit words are transmitted across the network (a byte at a time) least significant byte first in the case of a Little Endian Transfer Syntax and most significant byte first when using a Big Endian Transfer Syntax (see Figure <xref linkend="figure_D-6" xrefstyle="select: labelnumber"/>).</para>
      <para>
        <figure xml:id="figure_D-6" label="D-6" pgwide="1">
          <title>Sample Pixel Data Byte Streams (VR = OW)</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-6.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image014.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>As a last pair of examples, for Pixel Data having the Value Representation OW and the following attributes: 8 bits allocated, 8 bits stored, and a high bit of 7; the resulting byte streams pictured in <xref linkend="figure_D-7" xrefstyle="select: label"/> are as they would be transmitted across a network and/or stored on media. For Pixel Data having the same attributes, but having the explicit Value Representation OB; the resulting byte streams are unaffected by byte ordering and are pictured in <xref linkend="figure_D-8" xrefstyle="select: label"/>.</para>
      <para>
        <figure xml:id="figure_D-7" label="D-7" pgwide="1">
          <title>Sample Pixel Data Byte Streams for 8-bits Allocated and 8-bits Stored (VR = OW)</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-7.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image016.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        <figure xml:id="figure_D-8" label="D-8" pgwide="1">
          <title>Sample Pixel Data Byte Streams for 8-bits Allocated and 8-bits Stored (Explicit VR = OB)</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D-8.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image018.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
    </section>
    <section xml:id="sect_D.2" label="D.2" status="2">
      <title>Various Additional Examples of Pixel and Overlay Data Cells</title>
      <para>The following examples further illustrate the use of the data elements for Bits Allocated (0028,0100), Bits Stored (0028,0101) and High Bit (0028,0102) in the encoding of Pixel and Overlay Data. All examples show sample Pixel Cells before being encoded in byte streams (and before being affected by a particular Transfer Syntax).</para>
      <para>
        <figure xml:id="figure_D.2-1" label="D.2-1" pgwide="1">
          <title>Example 1 of Pixel and Overlay Data Cells</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D.2-1.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image020.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        <figure xml:id="figure_D.2-2" label="D.2-2" pgwide="1">
          <title>Example 2 of Pixel and Overlay Data Cells</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D.2-2.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image022.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        <figure xml:id="figure_D.2-3" label="D.2-3" pgwide="1">
          <title>Example 3 of Pixel and Overlay Data Cells</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D.2-3.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image024.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <para>
        <figure xml:id="figure_D.2-4" label="D.2-4" pgwide="1">
          <title>Example 4 of Overlay Data Cells</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="figures/PS3.5_D.2-4.svg"/>
              <!--<imagedata fileref="part05_fromword_files/image026.png"/>-->
            </imageobject>
          </mediaobject>
        </figure>
      </para>
      <note>
        <para>In this example, the Overlay Bits are numbered in the same manner that Pixel Cells are numbered in the other examples in this Annex. That is Overlay Bit 1 is the first bit of the Overlay Plane, encoded from left to right and top to bottom, a row at a time.</para>
      </note>
    </section>
  </chapter>
  <chapter xml:id="chapter_E" label="E" status="1">
    <title>DICOM Default Character Repertoire (Normative)</title>
    <para>The default repertoire for character strings in DICOM is the Basic G0 Set of the International Reference Version of ISO 646:1990 (ISO IR-6). In addition, the four Control Characters LF, FF, CR, and ESC are supported. These control characters are a subset of the C0 set defined in ISO 646:1990 and ISO 6429:1990.</para>
    <para>The byte encoding of the default character repertoire is pictured in Table E-1. This table can be used to derive both ISO column/row byte values and hex values for encoded representations (see <xref linkend="sect_6.1.1" xrefstyle="select: label"/>).</para>
    <table frame="box" rules="all" xml:id="table_E-1" label="E-1">
      <caption>DICOM Default Character Repertoire Encoding</caption>
      <thead>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>8</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>7</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>6</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>5</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>4</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>3</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>2</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>b<subscript>1</subscript>
      </para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>00</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>01</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>02</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>03</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>04</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>05</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>06</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>07</para>
          </td>
        </tr>
      </thead>
      <tbody>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>00</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>SP</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>@</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>P</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>`</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>p</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>01</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>!</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>A</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>Q</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>a</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>q</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>02</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>"</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>2</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>B</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>R</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>b</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>r</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>03</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>#</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>3</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>C</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>S</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>c</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>s</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>04</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>$</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>4</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>D</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>T</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>d</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>t</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>05</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>%</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>5</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>E</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>U</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>e</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>u</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>06</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>&amp;</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>6</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>F</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>V</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>f</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>v</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>07</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>'</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>7</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>G</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>W</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>g</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>w</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>08</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>(</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>8</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>H</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>X</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>h</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>x</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>09</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>)</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>9</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>I</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>Y</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>i</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>y</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>10</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>LF</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>*</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>:</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>J</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>Z</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>j</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>z</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>11</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>ESC</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>+</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>;</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>K</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>[</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>k</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>{</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>12</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>FF</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>,</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>&lt;</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>L</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>\</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>l</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>|</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>13</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>CR</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>-</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>=</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>M</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>]</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>m</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>}</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>14</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>.</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>&gt;</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>N</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>^</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>n</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>~</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>1</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>15</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1"/>
          <td align="center" colspan="1" rowspan="1">
            <para>/</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>?</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>O</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>_</para>
          </td>
          <td align="center" colspan="1" rowspan="1">
            <para>o</para>
          </td>
          <td align="center" colspan="1" rowspan="1"/>
        </tr>
      </tbody>
    </table>
  </chapter>
  <chapter xml:id="chapter_F" label="F" status="1">
    <title>Encapsulated Images As Part of A DICOM Message (Informative)</title>
    <para>The following remarks apply generally to communicating an encoded image within a message structure according to the DICOM Standard:</para>
    <para>a) In the course of including an encoded image in a DICOM message, the encoding is not changed. The encoded data stream is merely segmented and encapsulated according to the protocols of the DICOM Standard. After unpacking the DICOM message, the encoded data stream can be fully reconstructed at the receiving node.</para>
    <para>b) The object definition of the DICOM Standard is always determining format and other choices that a specific encoding implementation may offer. The encoded image must be consistent with the definition of the object of which the encoded image is part. For example:</para>
    <para>1) If the object is defined to contain 10-bit pixel data, it is assumed that the encoding process is one that accepts at least 10-bit data. Hence, there is no need for defining separate Transfer Syntaxes, e.g., for 8-bit or 12-bit implementations. Any 12-bit implementation is assumed to operate in an 8-bit process if the object is defined to contain 8-bit data.</para>
    <para>2) If the image of an object is interleaved, the encoding process must reproduce the interleaving.</para>
    <para>c) Specifications in the encoding file header must be consistent with the DICOM Message header, e.g., regarding the number of rows and columns.</para>
    <para>d) The byte order specification of an encoded file is not altered in the course of encapsulating it in a DICOM message.</para>
    <section xml:id="sect_F.1" label="F.1" status="2">
      <title>Encapsulated JPEG Encoded Images</title>
      <para>The International Standards Organization (ISO/IEC JTC1/SC2/WG10) has prepared an International Standard, ISO/IS-10918-1 (JPEG Part 1) and International Draft Standard ISO/IS-10918-2 (JPEG Part 2), for the digital compression and coding of continuous-tone still images. This standard is collectively known as the JPEG Standard.</para>
      <para>Part 1 of the JPEG Standard sets out requirements and implementation guidelines for the coded representation of compressed image data to be interchanged between applications. The processes and representations are intended to be generic in order to support the broad range of applications for color and grayscale still images for the purpose of communications and storage within computer systems. Part 2 of the JPEG Standard defines tests for determining whether implementations comply with the requirements of the various encoding and decoding processes specified in Part 1 of the JPEG Standard.</para>
      <para>The JPEG Standard specifies lossy and lossless code processes. The lossy coding is based on the discrete cosine transform (DCT), permitting data compression with an adjustable compression ratio. The lossless coding employs differential pulse code modulation (DPCM).</para>
      <para>The JPEG Standard permits a variety of coding processes for the coder and decoder. These processes differ in coding schemes for the quantified data and in sample precision. The coding processes are consecutively numbered as defined in the International Draft Standard ISO/IS-10918-2 (JPEG Part 2), and are summarized in <xref linkend="table_F.1-1" xrefstyle="select: label"/>. The simplest DCT-based coding process is referred to as Baseline Sequential with Huffman Coding for 8-bit Samples.</para>
      <table frame="box" rules="all" xml:id="table_F.1-1" label="F.1-1">
        <caption>JPEG Modes of Image Coding</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">No.</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Description</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Lossy</emphasis>
              </para>
              <para>
                <emphasis role="bold">LY</emphasis>
              </para>
              <para>
                <emphasis role="bold">Lossless</emphasis>
              </para>
              <para>
                <emphasis role="bold">LL</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Non-Hierarchical</emphasis>
              </para>
              <para>
                <emphasis role="bold">NH</emphasis>
              </para>
              <para>
                <emphasis role="bold">Hierarchical</emphasis>
              </para>
              <para>
                <emphasis role="bold">H</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Sequential</emphasis>
              </para>
              <para>
                <emphasis role="bold">S</emphasis>
              </para>
              <para>
                <emphasis role="bold">Progressive</emphasis>
              </para>
              <para>
                <emphasis role="bold">P</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Transform</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Coding</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Accepted Bits</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1</para>
              <para>2</para>
              <para>4</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>Baseline</para>
              <para>Extended</para>
              <para>Extended</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>LY</para>
              <para>LY</para>
              <para>LY</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>NH</para>
              <para>NH</para>
              <para>NH</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>S</para>
              <para>S</para>
              <para>S</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>DCT</para>
              <para>DCT</para>
              <para>DCT</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>Huffman</para>
              <para>Huffman</para>
              <para>Huffman</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>8</para>
              <para>8</para>
              <para>12</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>14</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>Lossless</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>LL</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>NH</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>S</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>DPCM</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>Huffman</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>2-16</para>
            </td>
          </tr>
        </tbody>
      </table>
      <para>The different coding processes specified in the JPEG Standard are closely related. By extending the capability of an implementation, increasingly more 'lower level' processes can also be executed by the implementation. This is shown in <xref linkend="table_F.1-2" xrefstyle="select: label"/> for Huffman Coding.</para>
      <para>Inclusion of a JPEG-coded image in a DICOM message is facilitated by the use of specific Transfer Syntaxes that are defined in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>. Independent of the JPEG coding processes, the same syntax applies. The only distinction for different processes in the syntax is the UID value. <xref linkend="table_F.1-5" xrefstyle="select: label"/> lists the UID values in the Transfer Syntax for the various JPEG coding processes for reference.</para>
      <table frame="box" rules="all" xml:id="table_F.1-2" label="F.1-2">
        <caption>Relationship Between the Lossy JPEG Huffman Coding Processes</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Process</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">1</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">2</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">4</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">1</emphasis>
              </para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">2</emphasis>
              </para>
            </td>
            <td align="center" colspan="1" rowspan="1"/>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">4</emphasis>
              </para>
            </td>
            <td align="center" colspan="1" rowspan="1"/>
            <td align="center" colspan="1" rowspan="1"/>
            <td align="center" colspan="1" rowspan="1">
              <para>*</para>
            </td>
          </tr>
        </tbody>
      </table>
      <para>* Coding process of column can execute coding process of row</para>
      <table frame="box" rules="all" xml:id="table_F.1-5" label="F.1-5">
        <caption>Identification of JPEG Coding Processes in DICOM</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">DICOM Transfer Syntax UID</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">JPEG process</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">JPEG description</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">capable of performing</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1.2.840.10008.1.2.4.50</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>baseline</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1.2.840.10008.1.2.4.51</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>2,4</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>extended</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>1,2,4</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1.2.840.10008.1.2.4.57</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>14</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>lossless NH</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>14</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>1.2.840.10008.1.2.4.70</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>14</para>
              <para>Selection Value 1</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>lossless NH, first-order prediction</para>
            </td>
            <td align="center" colspan="1" rowspan="1"/>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="sect_F.2" label="F.2" status="2">
      <title>Encapsulated JPEG-LS Encoded Images</title>
      <para>The International Standards Organization (ISO/IEC JTC1/SC2/WG10) has prepared an International Standard, ISO/IS-14495-1 (JPEG-LS Part 1), for the digital compression and coding of continuous-tone still images. This standard is known as the JPEG-LS Standard.</para>
      <para>Part 1 of the JPEG-LS Standard sets out requirements and implementation guidelines for the coded representation of compressed image data to be interchanged between applications. The processes and representations are intended to be generic in order to support the broad range of applications for color and grayscale still images for the purpose of communications and storage within computer systems.</para>
      <para>The JPEG-LS Standard specifies a single lossy (near-lossless) code process that can achieve lossless compression by constraining the absolute error value during encoding to zero. The lossless and lossy (near-lossless) coding is based on a predictive scheme with statistical modeling, in which differences between pixels and their surround are computed and their context modeled prior to coding, with a run-length escape mechanism. This scheme achieves consistently better compression in lossless mode than the lossless processes of JPEG defined in ISO 10918-1, with less complexity.</para>
      <para>Though a different coding process from those specified in ISO 10918-1 is used, the syntax of the encoded bit stream is closely related.</para>
      <para>A single JPEG-LS process is used for bit depths up to 16 bits.</para>
      <para>Inclusion of a JPEG-LS coded image in a DICOM message is facilitated by the use of specific Transfer Syntaxes that are defined in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>.</para>
    </section>
    <section xml:id="sect_F.3" label="F.3" status="2">
      <title>Encapsulated JPEG 2000 Encoded Images</title>
      <para>The International Standards Organization (ISO/IEC JTC1/SC2/WG10) has prepared an International Standard, ISO/IEC-15444 (JPEG 2000), for the digital compression and coding of continuous-tone still images. This standard is known as the JPEG 2000 Standard.</para>
      <para>The JPEG 2000 Standard sets out requirements and implementation guidelines for the coded representation of compressed image data to be interchanged between applications. The processes and representations are intended to be generic in order to support the broad range of applications for color and grayscale still images for the purpose of communications and storage within computer systems.</para>
      <para>Though a different coding process from those specified in ISO 10918-1 is used, the syntax of the encoded bit stream is closely related.</para>
      <para>A single JPEG 2000 process is used for bit depths up to 16 bits.</para>
      <para>Inclusion of a JPEG 2000 coded image in a DICOM message is facilitated by the use of specific Transfer Syntaxes that are defined in <xref linkend="chapter_A" xrefstyle="template: Annex %n"/>.</para>
    </section>
  </chapter>
  <chapter xml:id="chapter_G" label="G" status="1">
    <title>Encapsulated RLE Compressed Images (Normative)</title>
    <section xml:id="sect_G.1" label="G.1" status="2">
      <title>Summary</title>
      <para>This annex describes how to apply RLE Compression to an image or an individual frame of a multi-frame image. This method can be used for any image, independent of the values of the data elements that describe the image (i.e., Photometric Interpretation (0028,0004) and Bits Stored (0028,0101)).</para>
      <para>RLE Compression consists of the following steps:</para>
      <orderedlist numeration="arabic">
        <listitem>
          <para>The image is converted to a sequence of Composite Pixel Codes (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
        </listitem>
        <listitem>
          <para>The Composite Pixel Codes are used to generate a set of Byte Segments (see <xref linkend="sect_G.2" xrefstyle="select: label"/>).</para>
        </listitem>
        <listitem>
          <para>Each Byte Segment is RLE compressed to produce a RLE Segment (see <xref linkend="sect_G.4" xrefstyle="select: label"/>).</para>
        </listitem>
        <listitem>
          <para>The RLE Header is appended in front of the concatenated RLE Segments (see <xref linkend="sect_G.5" xrefstyle="select: label"/>).</para>
        </listitem>
      </orderedlist>
    </section>
    <section xml:id="sect_G.2" label="G.2" status="2">
      <title>Byte Segments</title>
      <para>A Byte Segment is a series of bytes generated by decomposing the Composite Pixel Code (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
      <para>If the Composite Pixel Code is not an integral number of bytes in size, sufficient Most Significant zero bits are added to make it an integral byte size. This is known as the Padded Composite Pixel Code.</para>
      <para>The first Segment is generated by stripping off the most significant byte of each Padded Composite Pixel Code and ordering these bytes sequentially. The second Segment is generated by repeating this process on the stripped Padded Composite Pixel Code continuing until the last Pixel Segment is generated by ordering the least significant byte of each Padded Component Pixel Code sequentially.</para>
      <note>
        <para>If Photometric Interpretation (0028, 0004) equals RGB and Bits Stored equals 8, then three Segments are generated. The first one holds all the Red values, the second all the Green values, and the third all the Blue values.</para>
      </note>
    </section>
    <section xml:id="sect_G.3" label="G.3" status="2">
      <title>The RLE Algorithm</title>
      <para>The RLE algorithm described in this section is used to compress Byte Segments into RLE Segments. There is a one-to-one correspondence between Byte Segments and RLE Segments. Each RLE segment must be an even number of bytes or padded at its end with zero to make it even.</para>
      <section xml:id="sect_G.3.1" label="G.3.1" status="3">
        <title>The RLE Encoder</title>
        <para>A sequence of identical bytes (Replicate Run) is encoded as a two-byte code:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>&lt; -count + 1 &gt; &lt;byte value&gt;, where</para>
            <itemizedlist mark="none">
              <listitem>
                <para>count = the number of bytes in the run, and</para>
              </listitem>
              <listitem>
                <para>2 &lt;= count &lt;= 128</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <para>and a non-repetitive sequence of bytes (Literal Run) is encoded as:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>&lt; count - 1 &gt; &lt;Literal sequence of bytes&gt;, where</para>
            <itemizedlist mark="none">
              <listitem>
                <para>count = number of bytes in the sequence, and</para>
              </listitem>
              <listitem>
                <para>1 &lt;= count &lt;= 128.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
        <para>The value of -128 may not be used to prefix a byte value.</para>
        <note>
          <para>It is common to encode a 2-byte repeat run as a Replicate Run except when preceded and followed by a Literal Run, in which case it's best to merge the three runs into a Literal Run.</para>
        </note>
        <para>Three-byte repeats shall be encoded as Replicate Runs. Each row of the image shall be encoded separately and not cross a row boundary.</para>
      </section>
      <section xml:id="sect_G.3.2" label="G.3.2" status="3">
        <title>The RLE Decoder</title>
        <para>Pseudo code for the RLE decoder is shown below:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Loop until the number of output bytes equals the uncompressed segment size</para>
            <itemizedlist mark="none">
              <listitem>
                <para>Read the next source byte into n</para>
              </listitem>
              <listitem>
                <para>If n&gt; =0 and n &lt;= 127 then</para>
                <itemizedlist mark="none">
                  <listitem>
                    <para>output the next n+1 bytes literally</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Elseif n &lt;= - 1 and n &gt;= -127 then</para>
                <itemizedlist mark="none">
                  <listitem>
                    <para>output the next byte -n+1 times</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Elseif n = - 128 then</para>
                <itemizedlist mark="none">
                  <listitem>
                    <para>output nothing</para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>Endif</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>Endloop</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section xml:id="sect_G.4" label="G.4" status="2">
      <title>Organization of RLE Compressed Frame</title>
      <para>The RLE Segments are ordered as described in <xref linkend="sect_G.2" xrefstyle="select: label"/>. They are preceded by the RLE Header, which contains offsets to the start of each RLE Segment. The RLE Header is described in G.5.</para>
      <para>The first RLE Segment immediately follows the RLE Header and the remaining RLE Segments immediately follow each other. This is illustrated in the diagram below.</para>
      <table frame="box" rules="all" xml:id="table_G.4-1" label="G.4-1">
        <caption>Organization of RLE Compressed Frame</caption>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>Header</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Segment 1</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Segment 2</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">. . .</emphasis>
              </para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">. . .</emphasis>
              </para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Segment n</para>
            </td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="sect_G.5" label="G.5" status="2">
      <title>RLE Header Format</title>
      <para>The RLE Header contains the number of RLE Segments for the image, and the starting offset of each of the RLE Segments. Each of these numbers is represented by a UL (unsigned long) value stored in little-endian format. The RLE Header is 16 long words in length. This allows it to describe a compressed image with up to 15 RLE Segments. All unused segments offsets shall be set to zero.</para>
      <para>Each of the starting locations for the RLE Segments are byte offsets relative to the beginning of the RLE Header. Since the RLE Header is 16 unsigned longs or 64 bytes, the offset of RLE Segment One is 64.</para>
      <para>The following diagram illustrates the ordering of the offsets within the RLE Header.</para>
      <table frame="box" rules="all" xml:id="table_G.5-1" label="G.5-1">
        <caption>Ordering of the Offsets Within the RLE Header</caption>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>number of RLE Segments</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>offset of RLE Segment 1 = 64</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>offset of RLE Segment 2</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>
              <emphasis role="bold">. . .</emphasis>
            </para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>
              <emphasis role="bold">. . .</emphasis>
            </para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>offset of RLE Segment n</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="center" colspan="1" rowspan="1">
            <para>0</para>
          </td>
        </tr>
      </table>
    </section>
    <section xml:id="sect_G.6" label="G.6" status="2">
      <title>Example of Elements For An Encoded YCbCr RLE Three-frame Image with Basic Offset Table</title>
      <para><xref linkend="table_G.6-1" xrefstyle="select: label"/> is an example of encoding of RLE Compressed Frames (described in <xref linkend="sect_G.4" xrefstyle="select: label"/>) with the basic offset table. <xref linkend="table_G.6-2" xrefstyle="select: label"/> is an example of Item Value data for one frame.</para>
      <table frame="box" rules="all" xml:id="table_G.6-1" label="G.6-1">
        <caption>Example of Elements for an Encoded YCbCr RLE Three-Frame Image with Basic Offset Table</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Pixel Data Element Tag</emphasis>
              </para>
            </th>
            <th align="center" colspan="2" rowspan="1">
              <para>
                <emphasis role="bold">Value Representation</emphasis>
              </para>
            </th>
            <th align="left" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Length</emphasis>
              </para>
            </th>
            <th align="center" colspan="6" rowspan="1">
              <para>
                <emphasis role="bold">Data Element</emphasis>
              </para>
            </th>
          </tr>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="left" colspan="3" rowspan="1">
              <para>Basic Offset Table with Item Value</para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para>First Fragment (Frame 1) of Pixel Data</para>
            </th>
          </tr>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Tag</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Length</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Value</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Tag</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Length</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Value</para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>(7FE0,0010) with VR of OB</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>OB</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000H</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>FFFF FFFFH undefined length</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>(FFFE,E000)</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 000CH</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 0000H 0000 02D0H 0000 0642H</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>(FFFE,E000)</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 02C8H</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Compressed Frame</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>000CH bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>02C8H bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <table frame="box" rules="all" xml:id="table_G.6-1b" label="G.6-1b">
        <caption>Example of Elements for an Encoded YCbCr RLE Three-Frame Image with Basic Offset Table (continued)</caption>
        <thead>
          <tr valign="top">
            <th align="left" colspan="8" rowspan="1">
              <para>
                <emphasis role="bold">Data Element Continued</emphasis>
              </para>
            </th>
          </tr>
          <tr valign="top">
            <th align="left" colspan="3" rowspan="1">
              <para>Second Fragment (Frame 2) of Pixel Data</para>
            </th>
            <th align="left" colspan="3" rowspan="1">
              <para>Third Fragment (Frame 3) of Pixel Data</para>
            </th>
            <th align="left" colspan="2" rowspan="1">
              <para>Sequence Delimiter Item</para>
            </th>
          </tr>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>Item Tag</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Length</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Value</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Tag</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Length</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Value</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Sequence Delimiter Tag</para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>Item Length</para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>(FFFE,E000)</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 036AH</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Compressed Frame</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>(FFFE,E000)</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 0BC8H</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>RLE Compressed Frame</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>(FFFE,E0DD)</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0000 0000H</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>2 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>036AH bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>0BC8H bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
            <td align="center" colspan="1" rowspan="1">
              <para>4 bytes</para>
            </td>
          </tr>
        </tbody>
      </table>
      <table frame="box" rules="all" xml:id="table_G.6-2" label="G.6-2">
        <caption>Example of Encoded YCbCr RLE Compressed Frame Item Value</caption>
        <thead>
        <tr valign="top">
          <th align="center" colspan="1" rowspan="1">
            <para>
              <emphasis role="bold">Offset</emphasis>
            </para>
          </th>
          <th align="center" colspan="1" rowspan="1">
            <para>
              <emphasis role="bold">Data</emphasis>
            </para>
          </th>
          <th align="center" colspan="1" rowspan="1">
            <para>
              <emphasis role="bold">Description of Data</emphasis>
            </para>
          </th>
          <td align="center" colspan="1" rowspan="1"/>
        </tr>
        </thead>
        <tbody>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0000H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0003H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>number of RLE Segments</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>(Header)</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0040H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>location of RLE Segment 1 (Y component)</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0140H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>location of RLE Segment 2 (C<subscript>B</subscript> component)</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 01C0H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>location of RLE Segment 3 (C<subscript>R</subscript> component)</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0000H</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>…..</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>…..</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0000H</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1"/>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0040H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>Y - RLE Segment Data</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>(DATA)</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1">
            <para>0000 0140H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>C<subscript>B</subscript> - RLE Segment Data</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>(DATA)</para>
          </td>
        </tr>
        <tr valign="top">
          <td align="left" colspan="1" rowspan="1">
            <para>0000 01C0H</para>
          </td>
          <td align="left" colspan="1" rowspan="1">
            <para>C<subscript>R</subscript> - RLE Segment Data</para>
          </td>
          <td align="left" colspan="1" rowspan="1"/>
          <td align="left" colspan="1" rowspan="1">
            <para>(DATA)</para>
          </td>
        </tr>
        </tbody>
      </table>
    </section>
  </chapter>
  <chapter xml:id="chapter_H" label="H" status="1">
    <title>Character Sets and Person Name Value Representation in the Japanese Language (Informative)</title>
    <section xml:id="sect_H.1" label="H.1" status="2">
      <title>Character Sets for the Japanese Language</title>
      <para>The purpose of this section is to explain the character sets for the Japanese language.</para>
      <section xml:id="sect_H.1.1" label="H.1.1" status="3">
        <title>JIS X 0201</title>
        <para>JIS X 0201 has the following code elements:</para>
        <itemizedlist>
          <listitem>
            <para>ISO-IR 13 Japanese katakana (phonetic) characters (94 characters)</para>
          </listitem>
          <listitem>
            <para>ISO-IR 14 Japanese romaji (alphanumeric) characters (94 characters)</para>
          </listitem>
        </itemizedlist>
        <para>JIS X 0201 defines a 7-bit romaji code table (ISO-IR 14), a 7-bit katakana code table (ISO-IR 13), and the combination of romaji and katakana as an 8-bit code table (ISO-IR 14 as G0, ISO-IR 13 as G1).</para>
        <para>The 7-bit romaji (ISO-IR 14) is identical to ASCII (ISO-IR 6) except that bit combination 05/12 represents a yen sign and bit combination 07/14 represents an over-line. These are national Graphic Character allocations in ISO 646.</para>
        <para>The Escape Sequence for ISO/IEC 2022 is shown for reference in <xref linkend="table_H.1-1" xrefstyle="select: label"/> (for the Defined Terms, see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>).</para>
        <table frame="box" rules="all" xml:id="table_H.1-1" label="H.1-1">
          <caption>ISO/IEC 2022 Escape Sequence for ISO-IR 13 and ISO-IR 14</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1"/>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO-IR 14</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO-IR 13</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>G0 set</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="italic">ESC 02/08 04/10</emphasis>
                  </emphasis>
                </para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/09</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>G1 set</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/09 04/10</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="italic">ESC 02/09 04/09</emphasis>
                  </emphasis>
                </para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para><xref linkend="table_H.1-1" xrefstyle="select: label"/> does not include the G2 and G3 sets that are not used in DICOM. See <xref linkend="sect_6.1.2.5.1" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>Defined Terms ISO_IR 13 and ISO 2022 IR 13 for the value of the Specific Character Set (0008,0005) support the G0 set for ISO-IR 14 and G1 set for ISO-IR 13. See <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
      <section xml:id="sect_H.1.2" label="H.1.2" status="3">
        <title>JIS X 0208</title>
        <para>JIS X 0208 has the following code element:</para>
        <itemizedlist>
          <listitem>
            <para>ISO-IR 87: Japanese kanji (ideographic), hiragana (phonetic), and katakana (phonetic) characters (942 characters, 2-byte).</para>
          </listitem>
        </itemizedlist>
      </section>
      <section xml:id="sect_H.1.3" label="H.1.3" status="3">
        <title>JIS X 0212</title>
        <para>JIS X 0212 has the following code element:</para>
        <itemizedlist>
          <listitem>
            <para>ISO-IR 159: Supplementary Japanese kanji (ideographic) characters (942 characters, 2-byte)</para>
          </listitem>
        </itemizedlist>
        <para>The Escape Sequence for ISO/IEC 2022 is shown for reference in <xref linkend="table_H.1-2" xrefstyle="select: label"/> (for the Defined Terms, see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>)</para>
        <table frame="box" rules="all" xml:id="table_H.1-2" label="H.1-2">
          <caption>ISO/IEC 2022 Escape Sequence for ISO-IR 87 and ISO-IR 159</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1"/>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO-IR 87</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO-IR 159</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>G0 set</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="italic">ESC 02/04 04/02</emphasis>
                  </emphasis>
                </para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">
                    <emphasis role="italic">ESC 02/04 02/08 04/04</emphasis>
                  </emphasis>
                </para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>G1 set</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 02/09 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 02/09 04/04</para>
              </td>
            </tr>
          </tbody>
        </table>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>The Escape Sequence for the designation function G0-DESIGNATE 94-SET, has first I byte 02/04 and second I byte 02/08. There is an exception to this: The second I byte 02/08 is omitted if the Final Byte is 04/00, 04/01 or 04/02. See ISO/IEC 2022.</para>
            </listitem>
            <listitem>
              <para>The table does not include the G2 and G3 sets that are not used in DICOM. See <xref linkend="sect_6.1.2.5.1" xrefstyle="select: label"/>.</para>
            </listitem>
            <listitem>
              <para>Defined Term ISO 2022 IR 87 for the value of the Specific Character Set (0008,0005) supports the G0 set for ISO-IR 87, and Defined Term ISO 2022 IR 159 supports the G0 set for ISO-IR 159. See <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>.</para>
            </listitem>
          </orderedlist>
        </note>
      </section>
    </section>
    <section xml:id="sect_H.2" label="H.2" status="2">
      <title>Internet Practice</title>
      <para>DICOM has adopted an encoding method for Japanese character sets that is similar to the method for Internet practice.</para>
      <para>The major protocols for the Internet such as SMTP, NNTP and HTTP adopt the encoding method for Japanese characters called "ISO-2022-JP" as described in RFC 1468, Japanese Character Encoding for Internet Messages. There is also a less commonly used Internet practice called "ISO-2022-JP-2" described in RFC 1554, which supports a larger repertoire of character sets and additionally requires an escape to a single-byte character set before encoding a SPACE (unlike DICOM and ISO-2022-JP).</para>
      <para>The character sets supported for the Japanese language in DICOM and Internet practice are shown in <xref linkend="table_H.2-1" xrefstyle="select: label"/>.</para>
      <table frame="box" rules="all" xml:id="table_H.2-1" label="H.2-1">
        <caption>Character Sets for the Japanese language in DICOM and Internet practice</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">DICOM</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ISO-2022-JP</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ISO-2022-JP-2</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>ASCII (ISO-IR 6)</para>
              <para>JIS X 0201 Katakana (ISO-IR 13)</para>
              <para>JIS X 0201 Romaji (ISO-IR 14)</para>
              <para>JIS X 0208 Kanji (ISO-IR 87)</para>
              <para>JIS X 0212 Kanji (ISO-IR 159)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ASCII (ISO-IR 6)</para>
              <para>JIS-X 0201 Romaji (ISO-IR 14)</para>
              <para>JIS X 0208-1978 Kanji (ISO-IR 42)</para>
              <para>JIS-X 0208-1983 Kanji (ISO-IR 87)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ASCII (ISO-IR 6)</para>
              <para>ISO8859-1 (ISO-IR 100)</para>
              <para>ISO8859-7 Greek (ISO-IR 126)</para>
              <para>JIS X 0201 Romaji (ISO-IR 14)</para>
              <para>JIS X 0208-1978 Kanji (ISO-IR 42)</para>
              <para>JIS X 0208-1983 Kanji (ISO-IR 87)</para>
              <para>JIS X 0212-1990 Kanji (ISO-IR 159)</para>
              <para>GB2312-1980 (ISO-IR 58)</para>
              <para>KSC5601-1987 (ISO-IR 149)</para>
            </td>
          </tr>
        </tbody>
      </table>
      <para>The Control Characters supported in DICOM and Internet practice are shown in <xref linkend="table_H.2-2" xrefstyle="select: label"/>.</para>
      <table frame="box" rules="all" xml:id="table_H.2-2" label="H.2-2">
        <caption>Control Characters Supported in DICOM and Internet practice</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">DICOM</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ISO-2022-JP and ISO-2022-JP-2</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>LF (00/10)</para>
              <para>FF (00/12)</para>
              <para>CR (00/13)</para>
              <para>ESC (01/11)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>LF (00/10)</para>
              <para>CR (00/13)</para>
              <para>SO (00/14)</para>
              <para>SI (00/15)</para>
              <para>ESC (01/11)</para>
            </td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="sect_H.3" label="H.3" status="2">
      <title>Example of Person Name Value Representation in the Japanese Language</title>
      <para>Character strings representing person names are encoded using a convention for PN value representations based on component groups with 5 components.</para>
      <para>For languages that use ideographic characters, it is sometimes necessary to write names both in ideographic characters and in phonetic characters. Ideographic characters may be required for official purposes, while phonetic characters may be needed for pronunciation and data processing purposes.</para>
      <para>For the purpose of writing names in ideographic characters and in phonetic characters, up to 3 component groups may be used. The delimiter of the component group shall be the equals character "=" (3DH). The three component groups in their order of occurrence are: an alphabetic representation, an ideographic representation, and a phonetic representation.</para>
      <section xml:id="sect_H.3.1" label="H.3.1" status="3">
        <title>Value 1 of Attribute Specific Character Set (0008,0005) is Not Present.</title>
        <example xml:id="example_H.3-1" label="H.3-1">
          <title>Value 1 of Attribute Specific Character Set (0008,0005) is Not Present</title>
          <para>In this case, ISO-IR 6 is used by default in Specific Character Set:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>(0008,0005) \ISO 2022 IR 87</para>
            </listitem>
          </itemizedlist>
          <para>Character String:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>Yamada^Tarou=山田^太郎=やまだ^たろう</para>
            </listitem>
            <listitem>
              <para>Yamada^Tarou= ESC 02/04 04/02 山田 ESC 02/08 04/02 ^ ESC 02/04 04/02 太郎 ESC 02/08 04/02 = ESC 02/04 04/02 やまだ ESC 02/08 04/02 ^ ESC 02/04 04/02 たろう ESC 02/08 04/02</para>
            </listitem>
          </itemizedlist>
          <para>Encoded representation:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>
                <computeroutput>05/09 06/01 06/13 06/01 06/04 06/01 5/14 05/04 06/01 07/02 06/15 07/05 03/13 01/11 02/04 04/02 03/11 03/03 04/05 04/04 01/11 02/08 04/02 05/14 01/11 02/04 04/02 04/02 04/00 04/15 03/10 01/11 02/08 04/02 03/13 01/11 02/04 04/02 02/04 06/04 02/04 05/14 02/04 04/00 01/11 02/08 04/02 05/14 01/11 02/04 04/02 02/04 03/15 02/04 06/13 02/04 02/06 01/11 02/08 04/02</computeroutput>
              </para>
            </listitem>
          </itemizedlist>
          <para>An example of what might be displayed or printed by an ASCII based machine that displays or prints the Control Character ESC (01/11) using \033:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>
                <computeroutput>Yamada^Tarou=\033$B;3ED\033(B^\033$BB@O:\033(B=\033$B$d$^$@\033(B^\033$B$?$m$&amp;\033(B</computeroutput>
              </para>
            </listitem>
          </itemizedlist>
        </example>
        <table frame="box" rules="all" xml:id="table_H.3-1" label="H.3-1">
          <caption>Character Sets and Escape Sequences Used in Example 1</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Character Set Description</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Component Group</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value of (0008,0005) Defined Term</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO Registration Number</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Standard for Code Extension</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ESC Sequence</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Code Element</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Character Set: Purpose of Use</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>Japanese</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>First:</para>
              <para>Single-byte</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>none</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 6</para>
              </td>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 646:</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Second:</para>
              <para>Ideographic</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 2:</para>
              <para>ISO 2022 IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0208:</para>
              <para>Japanese kanji, hiragana, katakana</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>none</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 6</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 646:</para>
              <para>for delimiters</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Third:</para>
              <para>Phonetic</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 2:</para>
              <para>ISO 2022 IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0208:</para>
              <para>Japanese hiragana, and katakana</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>none</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 6</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 646:</para>
              <para>for delimiters</para>
              </td>
            </tr>
          </tbody>
        </table>
      </section>
      <section xml:id="sect_H.3.2" label="H.3.2" status="3">
        <title>Value 1 of Attribute Specific Character Set (0008,0005) is ISO 2022 IR 13.</title>
        <example xml:id="example_H.3-2" label="H.3-2">
          <title>Value 1 of Attribute Specific Character Set (0008,0005) is ISO 2022 IR 13</title>
          <para>Specific Character Set:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>(0008,0005) ISO 2022 IR 13\ISO 2022 IR 87</para>
            </listitem>
          </itemizedlist>
          <para>Character String:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>ヤマダ^タロウ=山田^太郎=やまだ^たろう</para>
            </listitem>
            <listitem>
              <para>ヤマダ^タロウ= ESC 02/04 04/02 山田 ESC 02/08 04/10 ^ ESC 02/04 04/02 太郎 ESC 02/08 04/10 = ESC 02/04 04/02 やまだ ESC 02/08 04/10 ^ ESC 02/04 04/02 たろう ESC 02/08 04/10</para>
            </listitem>
          </itemizedlist>
          <para>Encoded representation:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>
                <computeroutput>13/04 12/15 12/00 13/14 05/14 12/00 13/11 11/03 03/13 01/11 02/04 04/02 03/11 03/03 04/05 04/04 01/11 02/08 04/10 05/14 01/11 02/04 04/02 04/02 04/00 04/15 03/10 01/11 02/08 04/10 03/13 01/11 02/04 04/02 02/04 06/04 02/04 05/14 02/04 04/00 01/11 02/08 04/10 05/14 01/11 02/04 04/02 02/04 03/15 02/04 06/13 02/04 02/06 01/11 02/08 04/10</computeroutput>
              </para>
            </listitem>
          </itemizedlist>
          <para>An example of what might be displayed or printed by an ASCII based machine that displays or prints the Control Character ESC (01/11) using \033:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>
                <computeroutput>\324\3l7\300\336^\300\333\263=\033$B;3ED\033(J^\033$BB@O:\033(J=\033$B$d$^$@\033(J^\033$B$?$m$&amp;\033(J</computeroutput>
              </para>
            </listitem>
          </itemizedlist>
        </example>
        <table frame="box" rules="all" xml:id="table_H.3-2" label="H.3-2">
          <caption>Character Sets and Escape Sequences Used in Example 2</caption>
          <thead>
            <tr valign="top">
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Character Set Description</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Component Group</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Value of (0008,0005) Defined Term</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ISO Registration Number</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Standard for Code Extension</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">ESC Sequence</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Code Element</emphasis>
                </para>
              </th>
              <th align="center" colspan="1" rowspan="1">
                <para>
                  <emphasis role="bold">Character Set: Purpose of Use</emphasis>
                </para>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1">
                <para>Japanese</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>First:</para>
                <para>Single-byte</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>ISO 2022 IR 13</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 13</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/09 04/09</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GR</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0201:</para>
              <para>Japanese katakana</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 14</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/10</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0201:</para>
              <para>Japanese romaji for delimiters</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Second:</para>
              <para>Ideographic</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 2:</para>
              <para>ISO 2022 IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0208:</para>
              <para>Japanese kanji, hiragana, katakana</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>ISO 2022 IR 13</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 14</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/10</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0201:</para>
              <para>Japanese romaji for delimiters</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Third:</para>
              <para>Phonetic</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 2:</para>
              <para>ISO 2022 IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 87</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/04 04/02</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0208:</para>
              <para>Japanese hiragana, and katakana</para>
              </td>
            </tr>
            <tr valign="top">
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1"/>
              <td align="left" colspan="1" rowspan="1">
                <para>Value 1:</para>
              <para>ISO 2022 IR 13</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO-IR 14</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ISO 2022</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>ESC 02/08 04/10</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>GL</para>
              </td>
              <td align="left" colspan="1" rowspan="1">
                <para>JIS X 0201:</para>
              <para>Japanese romaji for delimiters</para>
              </td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
  </chapter>
  <chapter xml:id="chapter_I" label="I" status="1">
    <title>Character Sets and Person Name Value Representation in the Korean Language (Informative)</title>
    <section xml:id="sect_I.1" label="I.1" status="2">
      <title>Character Sets For The Korean Language in DICOM</title>
      <para>KS X 1001 (registered as ISO-IR 149) is used as a Korean character set in DICOM. This character set is the one most broadly used for the representation of Korean characters. It can be encoded by ISO 2022 code extension techniques, and is registered in ISO 2375.</para>
      <para>The Escape Sequence is shown for reference in <xref linkend="table_I.1-1" xrefstyle="select: label"/> (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>)</para>
      <table frame="box" rules="all" xml:id="table_I.1-1" label="I.1-1">
        <caption>ISO/IEC 2022 Escape Sequence for ISO-IR 149</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1">
              <para>ISO-IR 149</para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>G0 set</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/04 02/08 04/03</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>G1 set</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">
                  <emphasis role="italic">ESC 02/04 02/09 04/03</emphasis>
                </emphasis>
              </para>
            </td>
          </tr>
        </tbody>
      </table>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>ISO-IR 149 is only used as a G1 set in DICOM.</para>
          </listitem>
          <listitem>
            <para>The Korean character set (ISO IR 149) is invoked to the G1 area. This is different from the Japanese multi-byte character sets (ISO 2022 IR 87 and ISO 2022 IR 159), which use the G0 code area. Japan's choice of G0 is due to the adoption of an encoding method based on "ISO-2022-JP". ISO-2022-JP, the most familiar encoding method in Japan, and uses only the G0 code area. In Korea, most operating systems adopt an encoding method that invokes the Hangul character set (KS X 1001) in the G1 code area. So, the difference between code areas of Korean and Japanese character originates in convention, not a technical problem. Invocation of multi-byte character sets to the G1 area does not change the current DICOM normative requirements.</para>
          </listitem>
        </orderedlist>
      </note>
    </section>
    <section xml:id="sect_I.2" label="I.2" status="2">
      <title>Example of Person Name Value Representation in the Korean Language</title>
      <example xml:id="sect_I.2-1" label="I.2-1">
        <title>Example of Person Name Value Representation in the Korean Language</title>
        <para>Person names in the Korean language may be written in Hangul (phonetic characters), Hanja (ideographic characters), or Latin (alphabetic characters). The three component groups should be written in the order of alphabetic, ideographic, and phonetic (see <xref linkend="table_6.2-1" xrefstyle="select: label"/>).</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) \ISO 2022 IR 149</para>
          </listitem>
        </itemizedlist>
        <para>Character String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Hong^Gildong=洪^吉洞=홍^길동</para>
          </listitem>
          <listitem>
            <para>Hong^Gildong= ESC 02/04 02/09 04/03 洪 ^ ESC 02/04 02/09 04/03 吉洞 = ESC 02/04 02/09 04/03 홍 ^ ESC 02/04 02/09 04/03 길동</para>
          </listitem>
        </itemizedlist>
        <para>Encoded representation:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>04/08 06/15 06/14 06/07 05/14 04/07 06/09 06/12 06/04 06/15 06/14 06/07 03/13 01/11 02/04 02/09 04/03 15/11 15/03 05/14 01/11 02/04 02/09 04/03 13/01 12/14 13/04 13/07 03/13 01/11 02/04 02/09 04/03 12/08 10/11 05/14 01/11 02/04 02/09 04/03 11/01 14/06 11/05 11/15</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <para>An example of what might be displayed or printed by an ASCII based machine that displays or prints the Control Character ESC (01/11) using \033:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>Hong^Gildong=\033$) C\373\363^\033$)C\321\316\324\327=\033$)C\310\253^\033$)C\261\346\265\277</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
      </example>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>The multi-byte character set (ISO-IR 149) and single-byte character set (ISO 646) can be used intermixed without any explicit escape sequence after the initial escape sequence. Once ISO 646 has been designated to the GL area and ISO-IR 149 to the GR area, each character set has different code area, thus can be used intermixed. The decoder will check the most significant bit of a character to know whether it is a two byte character in the GR area (high bit one) or a one byte character in the GL area (high bit zero).</para>
          </listitem>
          <listitem>
            <para>In the above example of person name representation, explicit escape sequences precede each Hangul and Hanja string. These escape sequences are to meet the requirements of the code extension technique that specifies a switch to the default character repertoire before delimiters. In the previous example, it is assumed that the default character repertoire (ISO-646) is invoked to G0 code area and no character set to G1 area after delimiters ("^" and "=" signs). See <xref linkend="sect_6.1.2.5.3" xrefstyle="select: label"/>.</para>
          </listitem>
        </orderedlist>
      </note>
    </section>
    <section xml:id="sect_I.3" label="I.3" status="2">
      <title>Example of Long Text Value Representation in the Korean Language Without Explicit Escape Sequences Between Character Sets</title>
      <example xml:id="sect_I.3-1" label="I.3-1">
        <title>Example of Long Text Value Representation in the Korean Language Without Explicit Escape Sequences Between Character Sets</title>
        <para>Hangul (ISO IR 149) and ASCII (ISO 646) character sets can be used intermingled without explicit escape sequences between them. The Hangul character set ISO IR 149 is invoked to the G1 area, so this invocation doesn't affect the G0 area to which the ASCII character set has been invoked. The following is an example of a Long Text value representation that includes ASCII and Hangul character set.</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) \ISO 2022 IR 149</para>
          </listitem>
        </itemizedlist>
        <para>Character String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>The first line includes 한글.</para>
            <para>The second line includes 한글, too.</para>
            <para>The third line</para>
          </listitem>
        </itemizedlist>
        <para>Encoded String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>ESC 02/04 02/09 04/03 The first line includes 한글.</para>
            <para>ESC 02/04 02/09 04/03 The second line includes 한글, too.</para>
            <para>The third line</para>
          </listitem>
        </itemizedlist>
        <para>Once having invoked the ISO IR 149 character set to G1 area by the escape sequence in the head of line, one can use Hangul and ASCII intermixed in that line.</para>
      </example>
      <table frame="box" rules="all" xml:id="table_I.3-1" label="I.3-1">
        <caption>Character Sets and Escape Sequences Used in the Examples</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Character Set Description</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Component Group</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Value of (0008,0005) Defined Term</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ISO Registration Number</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Standard for Code Extension</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ESC Sequence</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Code Element</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Character Set: Purpose of Use</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>Korean</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>First:</para>
              <para>Single-byte</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>none</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 6</para>
            </td>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>GL</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 646:</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>Second:</para>
              <para>Ideographic</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>none</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 6</para>
            </td>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>GL</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 646:</para>
              <para>For delimiters</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 2:</para>
              <para>ISO 2022 IR 149</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 149</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 2022</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/04 02/09 04/03</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>GR</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>KS X 1001:</para>
              <para>Hangul and Hanja</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>Third:</para>
              <para>Phonetic</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>none</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 6</para>
            </td>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>GL</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 646:</para>
              <para>For delimiters</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 2:</para>
              <para>ISO 2022 IR 149</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 149</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 2022</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/04 02/09 04/03</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>GR</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>KS X 1001:</para>
              <para>Hangul and Hanja</para>
            </td>
          </tr>
        </tbody>
      </table>
    </section>
  </chapter>
  <chapter xml:id="chapter_J" label="J" status="1">
    <title>Character Sets and Person Name Value Representationusing Unicode UTF-8, GB18030 and GBK (Informative)</title>
    <para>The Unicode UTF-8 character set and the GB18030 character set may be used for multiple languages. Some of these languages may also be encoded using other character sets that are defined elsewhere in the DICOM standard. As Unicode UTF-8 and GB18030 encodings do not allow ISO 2022 character set replacement, these must be used for all strings in a single SOP Instance. This may have implications for the character set selected for the encoding of the SOP Instance.</para>
    <para>Since the GBK character set is fully code point compatible to the larger character set of GB 18030, and the specific examples of GB 18030 encoding this in Annex (J.3 and J.4) include only the Chinese characters falling in the common coding area between the two standards, these examples are used to demonstrate the person name and text encoding in both standards. Examples specific to GBK are not necessary.</para>
    <section xml:id="sect_J.1" label="J.1" status="2">
      <title>Example of Person Name Value Representation in the Chinese Language Using Unicode</title>
      <example xml:id="sect_J.1-1" label="J.1-1">
        <title>Example of Person Name Value Representation in the Chinese Language Using Unicode</title>
        <para>Person names in the Chinese language may be written in Hanzi (ideographic characters), and/or Latin (alphabetic characters). The Latin representation may be derived using pinyin or another Romanization method, or may be a chosen "westernized" name. The two component groups should be written in the order of alphabetic, then ideographic; the phonetic component group is typically not used (see <xref linkend="table_6.2-1" xrefstyle="select: label"/>). In this example the traditional script is used.</para>
        <note>
          <orderedlist numeration="arabic">
            <listitem>
              <para>Some healthcare information systems may encode a "westernized" name with other patient aliases in a separate attribute, e.g., Other Patient Names (0010,1091).</para>
            </listitem>
            <listitem>
              <para>Some environments using Chinese language may use the third name component, e.g., for the Yi or Mongolian script, with or without the first name component. This would be similar to the Japanese and Korean name component usage.</para>
            </listitem>
          </orderedlist>
        </note>
        <para>In the example below, the Specific Character Set attribute (0008,0005) would contain:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) ISO_IR 192</para>
          </listitem>
        </itemizedlist>
        <para>Text string:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Wang^XiaoDong=王^小東=</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation is:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x57 0x61 0x6e 0x67 0x5e 0x58 0x69 0x61 0x6f 0x44 0x6f 0x6e 0x67 0x3d </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xe7 0x8e 0x8b</computeroutput>
              </emphasis>
              <computeroutput> 0x5e </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xe5 0xb0 0x8f 0xe6 0x9d 0xb1</computeroutput>
              </emphasis>
              <computeroutput> 0x3d</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The underlined bytes correspond to the Unicode code points for the Chinese characters:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>王 (U+738B)</para>
            </listitem>
            <listitem>
              <para>小 (U+5C0F)</para>
            </listitem>
            <listitem>
              <para>東 (U+6771)</para>
            </listitem>
          </itemizedlist>
          <para>and the corresponding UTF-8 encodings are:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>UTF-8 (U+738b) = 0xe7 0x8e 0x8b</para>
            </listitem>
            <listitem>
              <para>UTF-8 (U+5c0f U+6771) = 0xe5 0xb0 0x8f 0xe6 0x9d 0xb1</para>
            </listitem>
          </itemizedlist>
        </note>
      </example>
    </section>
    <section xml:id="sect_J.2" label="J.2" status="2">
      <title>Example of Long Text Value Representation in the Chinese Language Using Unicode</title>
      <example xml:id="sect_J.2-1" label="J.2-1">
        <title>Example of Long Text Value Representation in the Chinese Language Using Unicode</title>
        <para>The following is an example of a Long Text value representation that includes ASCII and ISO 10646 character set.</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) ISO_IR 192</para>
          </listitem>
        </itemizedlist>
        <para>Text string:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>The first line includes 中文.</para>
            <para>The second line includes 中文, too.</para>
            <para>The third line.</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation is:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x54 0x68 0x65 0x20 0x66 0x69 0x72 0x73 0x74 0x20 0x6c 0x69 0x6e 0x65 0x20 0x69 0x6e 0x63 0x6c 0x75 0x64 0x65 0x73 </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xe4 0xb8 0xad 0xe6 0x96 0x87</computeroutput>
              </emphasis>
              <computeroutput>0x2e 0x0d 0x0a 0x54 0x68 0x65 0x20 0x73 0x65 0x63 0x6f 0x6e 0x64 0x20 0x6c 0x69 0x6e 0x65 0x20 0x69 0x6e 0x63 0x6c 0x75 0x64 0x65 0x73 </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xe4 0xb8 0xad 0xe6 0x96 0x87</computeroutput>
              </emphasis>
              <computeroutput> 0x2c 0x20 0x74 0x6f 0x6f 0x2e 0x0d 0x0a 0x54 0x68 0x65 0x20 0x74 0x68 0x69 0x72 0x64 0x20 0x6c 0x69 0x6e 0x65 0x2e 0x0d 0x0a</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The underlined byte codes correspond to the Unicode code points for the Chinese characters:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>中 (U+4E2D) 0xe4 0xb8 0xad</para>
            </listitem>
            <listitem>
              <para>文 (U+6587) 0xe6 0x96 0x87</para>
            </listitem>
          </itemizedlist>
        </note>
      </example>
    </section>
    <section xml:id="sect_J.3" label="J.3" status="2">
      <title>Example of Person Name Value Representation in the Chinese Language Using GB18030</title>
      <example xml:id="sect_J.3-1" label="J.3-1">
        <title>Example of Person Name Value Representation in the Chinese Language Using GB18030</title>
        <para>Person names in the Chinese language may be written in Hanzi (ideographic characters), and/or Latin (alphabetic characters). The Latin representation may be derived using pinyin or another Romanization method, or may be a chosen "westernized" name. The two component groups should be written in the order of alphabetic, then ideographic; the phonetic component group is typically not used (see <xref linkend="table_6.2-1" xrefstyle="select: label"/>). In this example the simplified script is used.</para>
        <note>
          <para>See notes to <xref linkend="sect_J.1" xrefstyle="select: label"/>.</para>
        </note>
        <para>In the example below, the Specific Character Set attribute (0008,0005) would contain:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) GB18030</para>
          </listitem>
        </itemizedlist>
        <para>Text string:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Wang^XiaoDong=王^小东=</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation is:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x57 0x61 0x6e 0x67 0x5e 0x58 0x69 0x61 0x6f 0x44 0x6f 0x6e 0x67 0x3d 0xcd 0xf5 0x5e 0xd0 0xa1 0xb6 0xab 0x3d</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The GB18030 encodings for the chinese characters used here are:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>王 (CDF5 in GB18030)</para>
            </listitem>
            <listitem>
              <para>小 (D0A1 in GB18030)</para>
            </listitem>
            <listitem>
              <para>东 (B6AB in GB18030)</para>
            </listitem>
          </itemizedlist>
        </note>
      </example>
    </section>
    <section xml:id="sect_J.4" label="J.4" status="2">
      <title>Example of Long Text Value Representation in the Chinese Language Using GB18030</title>
      <example xml:id="sect_J.4-1" label="J.4-1">
        <title>Example of Long Text Value Representation in the Chinese Language Using GB18030</title>
        <para>The following is an example of a Long Text value representation that includes ASCII and GB18030 character set.</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) GB18030</para>
          </listitem>
        </itemizedlist>
        <para>Text string:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>The first line includes 中文.</para>
            <para>The second line includes 中文, too.</para>
            <para>The third line.</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation is:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x54 0x68 0x65 0x20 0x66 0x69 0x72 0x73 0x74 0x20 0x6c 0x69 0x6e 0x65 0x20 0x69 0x6e 0x63 0x6c 0x75 0x64 0x65 0x73 </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xd6 0xd0 0xce 0xc4</computeroutput>
              </emphasis>
              <computeroutput>0x2e 0x0d 0x0a 0x54 0x68 0x65 0x20 0x73 0x65 0x63 0x6f 0x6e 0x64 0x20 0x6c 0x69 0x6e 0x65 0x20 0x69 0x6e 0x63 0x6c 0x75 0x64 0x65 0x73 </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xd6 0xd0 0xce 0xc4</computeroutput>
              </emphasis>
              <computeroutput> 0x2c 0x20 0x74 0x6f 0x6f 0x2e 0x0d 0x0a 0x54 0x68 0x65 0x20 0x74 0x68 0x69 0x72 0x64 0x20 0x6c 0x69 0x6e 0x65 0x2e 0x0d 0x0a</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The underlined byte codes correspond to the GB18030 encodings for the Chinese characters used:</para>
          <itemizedlist mark="none">
            <listitem>
              <para>中 (D6D0 in GB18030)</para>
            </listitem>
            <listitem>
              <para>文 (CEC4 in GB18030)</para>
            </listitem>
          </itemizedlist>
        </note>
      </example>
    </section>
    <section xml:id="sect_J.5" label="J.5" status="2">
      <title>Person Name Value Representation in Other Languages Using Unicode</title>
      <para>Person names in many languages may be written in a local (non-Latin) script, as well as in a transliteration to a Latin script (Romanization). Healthcare information systems in those environments may support one or both name formats. Local scripts may be encoded using Unicode in UTF-8.</para>
      <para>For the purpose of exchange in DICOM, there are three typical uses of name component groups using Unicode in UTF-8:</para>
      <orderedlist>
        <listitem>
          <para>Names in a Latin script may be encoded in the first (alphabetic) component group, and names in a local script (alphabet, abugida, or syllabary) in the third (phonetic) component group (see <xref linkend="table_6.2-1" xrefstyle="select: label"/>). The second (ideographic) component group is null. This is the preferred use for cross-enterprise or international communication.</para>
        </listitem>
        <listitem>
          <para>Where the local script historically has a single byte character set defined for Specific Character Set (0008,0005), i.e., Cyrillic, Arabic, Greek, Hebrew, Thai, and the various versions of Latin, only the first name component group might be used. Encoding may be in Unicode in UTF-8, as described in this Annex, as an equivalent for use of that defined single byte character set in the first name component group (see note 1).</para>
        </listitem>
        <listitem>
          <para>Names in the local script may be encoded in the first component group, and names in a Latin script in the third component group, both encoded in Unicode in UTF-8.</para>
        </listitem>
      </orderedlist>
      <note>
        <orderedlist numeration="arabic">
          <listitem>
            <para>A previous edition of DICOM required the first name component group to use a single byte character set (see PS3.5-2008). Unicode in UTF-8 may now be used in that component group simply as a matter of a different character set encoding, but with the same application use of that component group.</para>
          </listitem>
          <listitem>
            <para>Healthcare information systems will use specific scripts in one, two, or three of the Person Name component groups in accordance with local policy. Conformant DICOM Application Entities that receive name attributes must accept multiple name component groups. An Application Entity that is configurable to allow the use of local script for names in either the first or the third component group, and a transliteration script in the other, would support all these typical representations.</para>
          </listitem>
          <listitem>
            <para>The transliteration (from a local script) may be a non-Latin script, e.g., Cyrillic. The same principles apply, and the Cyrillized name might be encoded in the first component group and the local script (which may in fact be a Latin-derived script) in the third component group.</para>
          </listitem>
        </orderedlist>
      </note>
    </section>
  </chapter>
  <chapter xml:id="chapter_K" label="K" status="1">
    <title>Character Sets and Person Name Value Representation in the Chinese Language with Code Extensions (Informative)</title>
    <section xml:id="sect_K.1" label="K.1" status="2">
      <title>Character Sets for the Chinese Language in DICOM</title>
      <para>GB 2312 (registered as ISO-IR 58) is used as a Chinese character set in DICOM. This character set is the one most broadly used for the representation of Chinese characters. It can be encoded by ISO 2022 code extension techniques.</para>
      <para>The Escape Sequence is shown for reference in <xref linkend="table_K.1-1" xrefstyle="select: label"/> (see <olink targetdoc="PS3.3" targetptr="PS3.3" xrefstyle="select: labelnumber"/>)</para>
      <table frame="box" rules="all" xml:id="table_K.1-1" label="K.1-1">
        <caption>ISO/IEC 2022 Escape Sequence for ISO-IR 58</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1"/>
            <th align="center" colspan="1" rowspan="1">
              <para>ISO-IR 58</para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>G0 set(ASCII)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/08 04/02</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>G1 set</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/04 02/09 04/01</para>
            </td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="sect_K.2" label="K.2" status="2">
      <title>Example of Person Name Value Representation in the Chinese Language</title>
      <example xml:id="sect_K.2-1" label="K.2-1">
        <title>Example of Person Name Value Representation in the Chinese Language</title>
        <para>Person names in the Chinese language may be written in Pinyin (phonetic characters), Hanzi(ideographic characters), or English Name (alphabetic characters). The three component groups should be written in the order of phonetic, ideographic, and alphabetic (English name).</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) \ISO 2022 IR 58</para>
          </listitem>
        </itemizedlist>
        <para>Character String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Zhang^XiaoDong=张小东=</para>
          </listitem>
        </itemizedlist>
        <para>Encoded String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>Zhang^XiaoDong= ESC 02/04 02/09 04/01 张小东 ESC 02/08 04/02 =</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation (GB2312) is:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x5A 0x68 0x61 0x6E 0x67 0x5E 0x58 0x69 0x61 0x6F 0x44 0x6F 0x6E 0x67 0x3D </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x24 0x29 0x41</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xD5 0xC5 0xD0 0xA1 0xB6 0xAB</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x28 0x42</computeroutput>
              </emphasis>
              <computeroutput> 0x3D 0x20</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The underlined byte codes correspond to double byte characters, the bold byte codes to escape sequences.</para>
        </note>
      </example>
    </section>
    <section xml:id="sect_K.3" label="K.3" status="2">
      <title>Example of Long Text Value Representation in the Chinese Language with Explicit Escape Sequences Between GB2312 G0 and GB2312 G1</title>
      <example xml:id="sect_K.3-1" label="K.3-1">
        <title>Example of Long Text Value Representation in the Chinese Language with Explicit Escape Sequences Between GB2312 G0 and GB2312 G1</title>
        <para>Chinese (ISO 2022 IR 58) and ASCII (ISO 646) character sets can be used intermingled with explicit escape sequences between them. The Chinese character set ISO IR 58 is invoked to the G1 area, and the ASCII character set is invoked the G0 area. The following is an example of a Long Text value representation that includes ASCII and Chinese character set. Every line must start in ASCII, end in ASCII.</para>
        <para>Specific Character Set:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>(0008,0005) \ISO 2022 IR 58</para>
          </listitem>
        </itemizedlist>
        <para>Character String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>1) 第一行文字。</para>
            <para>2) 第二行文字。</para>
            <para>3) 第三行文字。</para>
          </listitem>
        </itemizedlist>
        <para>Encoded String:</para>
        <itemizedlist mark="none">
          <listitem>
            <para>1) ESC 02/04 02/09 04/01 第一行文字。ESC 02/08 04/02</para>
            <para>2) ESC 02/04 02/09 04/01 第二行文字。ESC 02/08 04/02</para>
            <para>3) ESC 02/04 02/09 04/01 第三行文字。ESC 02/08 04/02</para>
          </listitem>
        </itemizedlist>
        <para>Character encoded representation (GB2312):</para>
        <itemizedlist mark="none">
          <listitem>
            <para>
              <computeroutput>0x31 0x2e </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x24 0x29 0x41</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xB5 0xDA 0xD2 0xBB 0xD0 0xD0 0xCE 0xC4 0xD7 0xD6 0xA1 0xA3</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x28 0x42</computeroutput>
              </emphasis>
              <computeroutput> 0x0D 0x0A</computeroutput>
            </para>
            <para>
              <computeroutput>0x32 0x2e </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x24 0x29 0x41</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xB5 0xDA 0xB6 0xFE 0xD0 0xD0 0xCE 0xC4 0xD7 0xD6 0xA1 0xA3</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x28 0x42</computeroutput>
              </emphasis>
              <computeroutput> 0x0D 0x0A</computeroutput>
            </para>
            <para>
              <computeroutput>0x33 0x2e </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x24 0x29 0x41</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="underline">
                <computeroutput>0xB5 0xDA 0xC8 0xFD 0xD0 0xD0 0xCE 0xC4 0xD7 0xD6 0xA1 0xA3</computeroutput>
              </emphasis>
              <computeroutput> </computeroutput>
              <emphasis role="bold">
                <computeroutput>0x1B 0x28 0x42</computeroutput>
              </emphasis>
              <computeroutput> 0x0D 0x0A 0x20</computeroutput>
            </para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The underlined byte codes correspond to double byte characters, the bold byte codes to escape sequences.</para>
        </note>
      </example>
      <table frame="box" rules="all" xml:id="table_K.3-1" label="K.3-1">
        <caption>Character Sets and Escape Sequences used in the Examples of Person Name</caption>
        <thead>
          <tr valign="top">
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Character Set Description</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Component Group</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Value of (0008,0005) Defined Term</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ISO registration number</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Standard for Code Extension</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">ESC Sequence</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Code Element</emphasis>
              </para>
            </th>
            <th align="center" colspan="1" rowspan="1">
              <para>
                <emphasis role="bold">Character Set: Purpose of Use</emphasis>
              </para>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="3">
              <para>Chinese</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>First:</para>
              <para>Phonetic</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>none</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 6</para>
            </td>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1"/>
            <td align="left" colspan="1" rowspan="1">
              <para>G0</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 646:</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>Second:</para>
              <para>Ideographic</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>ISO 2022 IR 58</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR58</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 2022</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/04 02/09 04/01</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>G1</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 2022 CN:</para>
              <para>Chinese</para>
            </td>
          </tr>
          <tr valign="top">
            <td align="left" colspan="1" rowspan="1">
              <para>Third:</para>
              <para>Alphabetic (English name)</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>Value 1:</para>
              <para>none</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO-IR 6</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 2022</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ESC 02/08 04/02</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>G0</para>
            </td>
            <td align="left" colspan="1" rowspan="1">
              <para>ISO 646:</para>
              <para>For delimiters</para>
            </td>
          </tr>
        </tbody>
      </table>
    </section>
  </chapter>
</book>
