{
    "docs": [
        {
            "location": "/",
            "text": "Posda Documentation\n\n\nWords words words...\n\n\nSections\n\n\n\n\nInstallation\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Home"
        },
        {
            "location": "/#posda-documentation",
            "text": "Words words words...",
            "title": "Posda Documentation"
        },
        {
            "location": "/#sections",
            "text": "Installation  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Sections"
        },
        {
            "location": "/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/installation/",
            "text": "This is the installation guide for Posda.\n\n\nThings to consider\n\n\nThere are a handful of things you should consider before beginning\ninstallation, such as:\n\n\n\n\nWhat host OS will you use?\n\n\nWhat type of installation?\n\n\nWill storage be separate?\n\n\nWill database be separate?\n\n\n\n\nHost OS\n\n\nPosda is distributed as a set of \nDocker\n containers,\nwhich means that it will technically work on any platform Docker supports\n(including Windows, MacOS, and Linux). However, we recommend Linux be used\nfor the best compatibility. MacOS is the second-best choice, and we discourage\nthe use of Windows.\n\n\nAny Linux distribution should work, as long as you can install Docker, though\nwe have tested Posda on the following:\n\n\n\n\nUbuntu 16.04, 18.04\n\n\nRHEL 7\n\n\nAlpine\n\n\n\n\nType of Installation\n\n\nPosda supports a number of different types of installation. The main options\nare if separate storage will be used, and/or a separate database server. The\nreasons why you would make these choices are beyond the scope of this\ndocumentation, but you should make those choices before beginning installation.\n\n\nWe have included three example configurations in this guide:\n\n\n\n\nSmall - Single machine, for a small site, or development, or demonstration\n\n\nMedium - When separate storage is needed\n\n\nLarge - When separate storage and database servers are needed\n\n\n\n\nInstall Sizes / Types\n\n\nHere are three common types of installations, along with a list of which\nsections you would need to follow for each.\n\n\nSmall / Development Installation\n\n\nThis is the appropriate set of sections you would follow to install Posda\non a single machine, such as for development or demonstration purposes,\nor just an environment where this is all that is required.\n\n\n\n\nInstall Docker\n\n\nClone the Repo\n\n\nConfigure Common Settings\n\n\nStart Posda\n\n\n\n\nMedium / Separate Storage\n\n\n\n\nInstall Docker\n\n\nClone the Repo\n\n\nConnect storage to Host\n\n\nConfigure storage\n in docker-compose.yaml\n\n\nConfigure Common Settings\n\n\nStart Posda\n\n\n\n\nLarge / Separate Storage and Separate Database\n\n\n\n\nProvision database server, install PostgreSQL\n\n\nInstall Docker\n\n\nClone the Repo\n\n\nConnect storage to Host\n\n\nConfigure storage\n in docker-compose.yaml\n\n\nConfigure database\n\n\nConfigure Common Settings\n\n\nStart Posda\n\n\n\n\nInstall Docker\n\n\nInstalling Docker is beyond the scope of this documentation. You can find\nfurther information at the \nDocker Homepage\n.\n\n\nMake sure you also install \ndocker-compose\n. Instructions are available at\n\nInstall Docker Compose\n.\n\n\nClone Oneposda\n\n\nFirst you will need to install \ngit\n on your system. Once you have git, \nsimply clone Posda by typing:\n\n\ngit clone https://code.imphub.org/scm/pt/oneposda.git\n\n\n\n\nYou can place this directory anywhere you like.\n\n\nConfigure Storage\n\n\nThe bulk of the storage will be from the \"Posda Cache\", where all imported\nand edited DICOM files are stored. There is also the Postgres database data,\nif you are using the built-in database.\n\n\nBy default both storage locations are managed by Docker, but you may want\nto configure the location yourself, such as on network attached storage.\n\n\nThe main way you do this is by changing the \nvolume\n sections within the\nvarious services in the \ndocker-compose.yaml\n file.\n\n\nFor example, if you wanted to place all of the cache (DICOM) files within\nthe host directory \n/mnt/storage/posda\n, you would find all lines within\n\ndocker-compose.yaml\n that look like:\n\n\n- posda_cache_alpine:/home/posda/cache\n\n\n\n\nand change them to:\n\n\n- /mnt/storage/posda:/home/posda/cache\n\n\n\n\nMake sure you change all occurrences!\n\n\nNOTE: You should ensure that the owner:group ID of the chosen location\nis \n2123:2123\n. \n\n\nIf you additionally wanted to change where the built-in Postgres database\nstores its data, first choose a location (such as \n/mnt/storage/database\n),\nthen change the line that looks like:\n\n\n- pgdata_alpine:/var/lib/postgresql/data\n\n\n\n\nto instead be:\n\n\n- /mnt/storage/database:/var/lib/postgresql/data\n\n\n\n\nConfigure Database\n\n\nIf you have chosen to use a separate database host (instead of using the\ncontainer), you will need to complete this section.\n\n\nFirst, you must remove the \ndb\n service from the \ndocker-compose.yaml\n file.\nRemove these lines:\n\n\ndb:\n    image: postgres:10.1-alpine\n    restart: always\n    environment:\n        POSTGRES_PASSWORD: example\n    volumes:\n        - pgdata_alpine:/var/lib/postgresql/data\n    ports:\n        - 5433:5432\n\n\n\n\nThen, find every occurrence of \ndepends_on: db\n and remove it. For example,\nremove only the \n- db\n line from the following:\n\n\ndepends_on:\n    - db\n    - redis\n\n\n\n\nRemove this everywhere it occurs, otherwise the various containers will fail\nto start.\n\n\nFinally, you must edit the \ndatabase.env\n file, and set the appropriate values\nfor the database server you have configured. You must use a role which has\nthe ability to create databases. After initial configuration you can remove\nthat right, if you want.\n\n\nExample:\n\n\nPGHOST=my-database-host.uams.edu\nPGUSER=posda\nPGPASSWORD=s3cret!\n\n\n\n\nConfigure Common Settings\n\n\nEdit the file \ncommon.env\n and set the values. In particular, you should\ncarefully choose \nPOSDA_EXTERNAL_HOSTNAME\n. \n\n\nStart Posda\n\n\nThe first time you start Posda, you will want to start the \ndb\n and \nposda\n\ncontainers first, and wait about 30 seconds after each command for\ninitial setup to complete.\n\n\nWARNING: If you have chosen to have a separate database host, you must skip\nthe first command.\n\n\ndocker-compose up -d db\n# Wait 30 seconds\ndocker-compose up -d posda\n# Wait 30 seconds\ndocker-compose up -d",
            "title": "Installation"
        },
        {
            "location": "/installation/#things-to-consider",
            "text": "There are a handful of things you should consider before beginning\ninstallation, such as:   What host OS will you use?  What type of installation?  Will storage be separate?  Will database be separate?",
            "title": "Things to consider"
        },
        {
            "location": "/installation/#host-os",
            "text": "Posda is distributed as a set of  Docker  containers,\nwhich means that it will technically work on any platform Docker supports\n(including Windows, MacOS, and Linux). However, we recommend Linux be used\nfor the best compatibility. MacOS is the second-best choice, and we discourage\nthe use of Windows.  Any Linux distribution should work, as long as you can install Docker, though\nwe have tested Posda on the following:   Ubuntu 16.04, 18.04  RHEL 7  Alpine",
            "title": "Host OS"
        },
        {
            "location": "/installation/#type-of-installation",
            "text": "Posda supports a number of different types of installation. The main options\nare if separate storage will be used, and/or a separate database server. The\nreasons why you would make these choices are beyond the scope of this\ndocumentation, but you should make those choices before beginning installation.  We have included three example configurations in this guide:   Small - Single machine, for a small site, or development, or demonstration  Medium - When separate storage is needed  Large - When separate storage and database servers are needed",
            "title": "Type of Installation"
        },
        {
            "location": "/installation/#install-sizes-types",
            "text": "Here are three common types of installations, along with a list of which\nsections you would need to follow for each.",
            "title": "Install Sizes / Types"
        },
        {
            "location": "/installation/#small-development-installation",
            "text": "This is the appropriate set of sections you would follow to install Posda\non a single machine, such as for development or demonstration purposes,\nor just an environment where this is all that is required.   Install Docker  Clone the Repo  Configure Common Settings  Start Posda",
            "title": "Small / Development Installation"
        },
        {
            "location": "/installation/#medium-separate-storage",
            "text": "Install Docker  Clone the Repo  Connect storage to Host  Configure storage  in docker-compose.yaml  Configure Common Settings  Start Posda",
            "title": "Medium / Separate Storage"
        },
        {
            "location": "/installation/#large-separate-storage-and-separate-database",
            "text": "Provision database server, install PostgreSQL  Install Docker  Clone the Repo  Connect storage to Host  Configure storage  in docker-compose.yaml  Configure database  Configure Common Settings  Start Posda",
            "title": "Large / Separate Storage and Separate Database"
        },
        {
            "location": "/installation/#install-docker",
            "text": "Installing Docker is beyond the scope of this documentation. You can find\nfurther information at the  Docker Homepage .  Make sure you also install  docker-compose . Instructions are available at Install Docker Compose .",
            "title": "Install Docker"
        },
        {
            "location": "/installation/#clone-oneposda",
            "text": "First you will need to install  git  on your system. Once you have git, \nsimply clone Posda by typing:  git clone https://code.imphub.org/scm/pt/oneposda.git  You can place this directory anywhere you like.",
            "title": "Clone Oneposda"
        },
        {
            "location": "/installation/#configure-storage",
            "text": "The bulk of the storage will be from the \"Posda Cache\", where all imported\nand edited DICOM files are stored. There is also the Postgres database data,\nif you are using the built-in database.  By default both storage locations are managed by Docker, but you may want\nto configure the location yourself, such as on network attached storage.  The main way you do this is by changing the  volume  sections within the\nvarious services in the  docker-compose.yaml  file.  For example, if you wanted to place all of the cache (DICOM) files within\nthe host directory  /mnt/storage/posda , you would find all lines within docker-compose.yaml  that look like:  - posda_cache_alpine:/home/posda/cache  and change them to:  - /mnt/storage/posda:/home/posda/cache  Make sure you change all occurrences!  NOTE: You should ensure that the owner:group ID of the chosen location\nis  2123:2123 .   If you additionally wanted to change where the built-in Postgres database\nstores its data, first choose a location (such as  /mnt/storage/database ),\nthen change the line that looks like:  - pgdata_alpine:/var/lib/postgresql/data  to instead be:  - /mnt/storage/database:/var/lib/postgresql/data",
            "title": "Configure Storage"
        },
        {
            "location": "/installation/#configure-database",
            "text": "If you have chosen to use a separate database host (instead of using the\ncontainer), you will need to complete this section.  First, you must remove the  db  service from the  docker-compose.yaml  file.\nRemove these lines:  db:\n    image: postgres:10.1-alpine\n    restart: always\n    environment:\n        POSTGRES_PASSWORD: example\n    volumes:\n        - pgdata_alpine:/var/lib/postgresql/data\n    ports:\n        - 5433:5432  Then, find every occurrence of  depends_on: db  and remove it. For example,\nremove only the  - db  line from the following:  depends_on:\n    - db\n    - redis  Remove this everywhere it occurs, otherwise the various containers will fail\nto start.  Finally, you must edit the  database.env  file, and set the appropriate values\nfor the database server you have configured. You must use a role which has\nthe ability to create databases. After initial configuration you can remove\nthat right, if you want.  Example:  PGHOST=my-database-host.uams.edu\nPGUSER=posda\nPGPASSWORD=s3cret!",
            "title": "Configure Database"
        },
        {
            "location": "/installation/#configure-common-settings",
            "text": "Edit the file  common.env  and set the values. In particular, you should\ncarefully choose  POSDA_EXTERNAL_HOSTNAME .",
            "title": "Configure Common Settings"
        },
        {
            "location": "/installation/#start-posda",
            "text": "The first time you start Posda, you will want to start the  db  and  posda \ncontainers first, and wait about 30 seconds after each command for\ninitial setup to complete.  WARNING: If you have chosen to have a separate database host, you must skip\nthe first command.  docker-compose up -d db\n# Wait 30 seconds\ndocker-compose up -d posda\n# Wait 30 seconds\ndocker-compose up -d",
            "title": "Start Posda"
        }
    ]
}