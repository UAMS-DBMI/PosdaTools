#!/usr/bin/perl -w
use strict;
use Posda::BackgroundProcess;

my $usage = <<EOF;
BackgroundSingleRtLinkageDetailReports.pl <?bkgrnd_id?> <activity_id> <file_path> <notify>
  <activity_id>- activity (in which linked files reside)
  <file_path>- actual path to SS file to be analyzed
  <notify> - user to notify

Expects nothing on <STDIN>

Invokes the command "DumpLinkages.pl" to generate reports on Linkages in the RTSTRUCT.
These are reformatted in to three reports and linked in the email generated by this 
process.  The three reports are:

VolumeReport:
index,z,sop_instance

RoiReport:
roi_num,roi_name,alg_type,frame_of_ref

ContourReport:
index,linked_sop,geometric_type,num_pts,ref_roi_num,contour_num,z

EOF

if($#ARGV == 0 && $ARGV[0] eq "-h"){
  print $usage;
  exit;
}
unless($#ARGV == 3){
  my $n_args = @ARGV;
  my $mess = "Wrong number of args ($n_args vs 4). Usage:\n$usage\n";
  print $mess;
  die "######################## subprocess failed to start:\n" .
      "$mess\n" .
      "#####################################################\n";
}
my($invoc_id, $activity_id, $file_path, $notify) = @ARGV;

print "Going to background\n";

my $back = Posda::BackgroundProcess->new($invoc_id, $notify, $activity_id);
$back->Daemonize;
$back->WriteToEmail("Process BackgroundSingleRtLinkageDetailReports:\n" .
  "subprocess_invocation_id: $invoc_id\n" .
  "activity_id: $activity_id\n" .
  "ss_file: $file_path\n");
my $vol_rpt = $back->CreateReport("VolumeReport");
my $roi_rpt = $back->CreateReport("RoiReport");
my $contour_rpt = $back->CreateReport("ContourReport");
my $cmd = "DumpLinkages.pl \"$file_path\" $activity_id";
open CMD, "$cmd|";
my $mode;
line:
while (my $line = <CMD>){
  chomp $line;
  if($line eq "ROIs:"){
    $mode = "ROI";
    next line;
  }elsif($line eq "Linked Contours:"){
    $mode = "Contour";
    next line;
  }elsif($line eq "Volume:"){
    $mode = "Volume";
    next line;
  }
  unless (defined $mode) {
    print STDERR "line: \"$line\" in undefined mode\n";
    next line;
  }
  my @fields = split(/\|/, $line);
  if($mode eq "ROI"){
    for my $i (0 .. $#fields){
      $roi_rpt->print("\"$fields[$i]\"");
      if($i == $#fields){
        $roi_rpt->print("\n");
      } else {
        $roi_rpt->print(",");
      }
    }
  } elsif ($mode eq "Contour"){
    for my $i (0 .. $#fields){
      $contour_rpt->print("\"$fields[$i]\"");
      if($i == $#fields){
        $contour_rpt->print("\n");
      } else {
        $contour_rpt->print(",");
      }
    }
  } elsif ($mode eq "Volume"){
    for my $i (0 .. $#fields){
      $vol_rpt->print("\"$fields[$i]\"");
      if($i == $#fields){
        $vol_rpt->print("\n");
      } else {
        $vol_rpt->print(",");
      }
    }
  } else {
    die "Unknown mode $mode";
  }
}

$back->Finish("done");
